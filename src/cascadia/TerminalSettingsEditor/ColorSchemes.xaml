<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
the MIT License. See LICENSE in the project root for license information. -->
<Page
    x:Class="Microsoft.Terminal.Settings.Editor.ColorSchemes"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Terminal.Settings.Editor"
    xmlns:model="using:Microsoft.Terminal.Settings.Model"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:Windows.UI.Xaml.Controls;assembly=Windows.Foundation.UniversalApiContract" xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    mc:Ignorable="d">


    <Page.Resources>
        <Style TargetType="StackPanel">
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="BorderBrush" Value="{StaticResource SystemBaseLowColor}"/>
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="100" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="10,0,0,20" />
            <Setter Property="CornerRadius" Value="2"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Width" Value="100"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style TargetType="ColorPicker">
            <Setter Property="IsColorSliderVisible" Value="False"/>
            <Setter Property="IsColorChannelTextInputVisible" Value="False"/>
            <Setter Property="IsHexInputVisible" Value="True"/>
            <Setter Property="IsAlphaSliderVisible" Value="True"/>
            <Setter Property="IsAlphaTextInputVisible" Value="True"/>
        </Style>

        <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <local:ColorToHexConverter x:Key="ColorToHexConverter"/>
    </Page.Resources>

    <ScrollViewer>
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <TextBlock x:Uid="ColorScheme_ColorSchemes"
                       Style="{StaticResource SubheaderTextBlockStyle}"
                       Margin="10,0,0,20"
                       Grid.Row="0" />

            <StackPanel Grid.Row="1"
                        Grid.Column="0">
                <ComboBox x:Name="ColorSchemeComboBox"
                          Margin="10,0,0,0"
                          SelectedIndex="0"
                          ItemsSource="{x:Bind ColorSchemeList, Mode=OneWay}"
                          SelectionChanged="ColorSchemeSelectionChanged" Width="160">
                </ComboBox>
            </StackPanel>

            <ItemsControl x:Name="ColorTableControl"
                          ItemsSource="{x:Bind CurrentColorTable, Mode=OneWay}"
                          Grid.Row="2"
                          Grid.Column="0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal"
                                       MaximumRowsOrColumns="4"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="local:ColorTableEntry">
                        <StackPanel>
                            <TextBlock Text="{x:Bind Name, Mode=OneWay}"
                                       Margin="10,0,0,10"/>
                            <Button Background="{x:Bind Color, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                                <Button.Flyout>
                                    <Flyout>
                                        <ColorPicker Tag="{x:Bind Index, Mode=OneWay}"
                                                     Color="{x:Bind Color, Mode=OneWay}"
                                                     ColorChanged="ColorPickerChanged"/>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl Grid.Row="2"
                          Grid.Column="1">
                <StackPanel Orientation="Vertical" Height="59">
                    <TextBlock x:Uid="ColorScheme_Foreground"
                               Margin="10,0,0,10"/>
                    <Button Background="{Binding Color, ElementName=ForegroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="ForegroundPicker" Color="{x:Bind CurrentColorScheme.Foreground, Mode=TwoWay}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Vertical" Height="59">
                    <TextBlock x:Uid="ColorScheme_Background"
                               Margin="10,0,0,10"/>
                    <Button Background="{Binding Color, ElementName=BackgroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="BackgroundPicker" Color="{x:Bind CurrentColorScheme.Background, Mode=TwoWay}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Vertical" Height="59">
                    <TextBlock x:Uid="ColorScheme_CursorColor"
                               Margin="10,0,0,10"/>
                    <Button Background="{Binding Color, ElementName=CursorColorPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="CursorColorPicker" Color="{x:Bind CurrentColorScheme.CursorColor, Mode=TwoWay}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Vertical" Height="59">
                    <TextBlock x:Uid="ColorScheme_SelectionBackground"
                               Margin="10,0,0,10"/>
                    <Button Background="{Binding Color, ElementName=SelectionBackgroundPicker, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <ColorPicker x:Name="SelectionBackgroundPicker" Color="{x:Bind CurrentColorScheme.SelectionBackground, Mode=TwoWay}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
            </ItemsControl>
        </Grid>
    </ScrollViewer>
</Page>
