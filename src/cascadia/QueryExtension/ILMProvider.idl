// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

namespace Microsoft.Terminal.Query.Extension
{
    interface IBrandingData
    {
        String Name { get; };
        String HeaderIconPath { get; };
        String HeaderText { get; };
        String SubheaderText { get; };
        String BadgeIconPath { get; };
        String QueryAttribution { get; };
    };

    interface IAuthenticationResult
    {
        String ErrorMessage { get; };
        String AuthValues { get; };
    };

    interface ILMProvider
    {
        // chat related functions
        void ClearMessageHistory();
        void SetSystemPrompt(String systemPrompt);
        void SetContext(IContext context);

        Windows.Foundation.IAsyncOperation<IResponse> GetResponseAsync(String userPrompt);

        // auth related functions
        void SetAuthentication(String authValues);
        event Windows.Foundation.TypedEventHandler<ILMProvider, IAuthenticationResult> AuthChanged;

        // UI related settings
        IBrandingData BrandingData { get; };
    }

    enum ErrorTypes
    {
        None = 0,
        InvalidAuth,
        InvalidModel,
        FromProvider,
        Unknown
    };

    interface IResponse
    {
        String Message { get; };
        ErrorTypes ErrorType { get; };
        String ResponseAttribution { get; };
    };

    interface IContext
    {
        String ActiveCommandline { get; };
    };
}
