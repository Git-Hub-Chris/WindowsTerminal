// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

#include "precomp.h"
#include "inc/utils.hpp"
#include "til/static_map.h"

using namespace Microsoft::Console;

static constexpr std::array<til::color, 16> campbellColorTable{
    til::color{ 0x0C, 0x0C, 0x0C },
    til::color{ 0xC5, 0x0F, 0x1F },
    til::color{ 0x13, 0xA1, 0x0E },
    til::color{ 0xC1, 0x9C, 0x00 },
    til::color{ 0x00, 0x37, 0xDA },
    til::color{ 0x88, 0x17, 0x98 },
    til::color{ 0x3A, 0x96, 0xDD },
    til::color{ 0xCC, 0xCC, 0xCC },
    til::color{ 0x76, 0x76, 0x76 },
    til::color{ 0xE7, 0x48, 0x56 },
    til::color{ 0x16, 0xC6, 0x0C },
    til::color{ 0xF9, 0xF1, 0xA5 },
    til::color{ 0x3B, 0x78, 0xFF },
    til::color{ 0xB4, 0x00, 0x9E },
    til::color{ 0x61, 0xD6, 0xD6 },
    til::color{ 0xF2, 0xF2, 0xF2 },
};

static constexpr std::array<til::color, 256> standardXterm256ColorTable{
    til::color{ 0x00, 0x00, 0x00 },
    til::color{ 0x80, 0x00, 0x00 },
    til::color{ 0x00, 0x80, 0x00 },
    til::color{ 0x80, 0x80, 0x00 },
    til::color{ 0x00, 0x00, 0x80 },
    til::color{ 0x80, 0x00, 0x80 },
    til::color{ 0x00, 0x80, 0x80 },
    til::color{ 0xC0, 0xC0, 0xC0 },
    til::color{ 0x80, 0x80, 0x80 },
    til::color{ 0xFF, 0x00, 0x00 },
    til::color{ 0x00, 0xFF, 0x00 },
    til::color{ 0xFF, 0xFF, 0x00 },
    til::color{ 0x00, 0x00, 0xFF },
    til::color{ 0xFF, 0x00, 0xFF },
    til::color{ 0x00, 0xFF, 0xFF },
    til::color{ 0xFF, 0xFF, 0xFF },
    til::color{ 0x00, 0x00, 0x00 },
    til::color{ 0x00, 0x00, 0x5F },
    til::color{ 0x00, 0x00, 0x87 },
    til::color{ 0x00, 0x00, 0xAF },
    til::color{ 0x00, 0x00, 0xD7 },
    til::color{ 0x00, 0x00, 0xFF },
    til::color{ 0x00, 0x5F, 0x00 },
    til::color{ 0x00, 0x5F, 0x5F },
    til::color{ 0x00, 0x5F, 0x87 },
    til::color{ 0x00, 0x5F, 0xAF },
    til::color{ 0x00, 0x5F, 0xD7 },
    til::color{ 0x00, 0x5F, 0xFF },
    til::color{ 0x00, 0x87, 0x00 },
    til::color{ 0x00, 0x87, 0x5F },
    til::color{ 0x00, 0x87, 0x87 },
    til::color{ 0x00, 0x87, 0xAF },
    til::color{ 0x00, 0x87, 0xD7 },
    til::color{ 0x00, 0x87, 0xFF },
    til::color{ 0x00, 0xAF, 0x00 },
    til::color{ 0x00, 0xAF, 0x5F },
    til::color{ 0x00, 0xAF, 0x87 },
    til::color{ 0x00, 0xAF, 0xAF },
    til::color{ 0x00, 0xAF, 0xD7 },
    til::color{ 0x00, 0xAF, 0xFF },
    til::color{ 0x00, 0xD7, 0x00 },
    til::color{ 0x00, 0xD7, 0x5F },
    til::color{ 0x00, 0xD7, 0x87 },
    til::color{ 0x00, 0xD7, 0xAF },
    til::color{ 0x00, 0xD7, 0xD7 },
    til::color{ 0x00, 0xD7, 0xFF },
    til::color{ 0x00, 0xFF, 0x00 },
    til::color{ 0x00, 0xFF, 0x5F },
    til::color{ 0x00, 0xFF, 0x87 },
    til::color{ 0x00, 0xFF, 0xAF },
    til::color{ 0x00, 0xFF, 0xD7 },
    til::color{ 0x00, 0xFF, 0xFF },
    til::color{ 0x5F, 0x00, 0x00 },
    til::color{ 0x5F, 0x00, 0x5F },
    til::color{ 0x5F, 0x00, 0x87 },
    til::color{ 0x5F, 0x00, 0xAF },
    til::color{ 0x5F, 0x00, 0xD7 },
    til::color{ 0x5F, 0x00, 0xFF },
    til::color{ 0x5F, 0x5F, 0x00 },
    til::color{ 0x5F, 0x5F, 0x5F },
    til::color{ 0x5F, 0x5F, 0x87 },
    til::color{ 0x5F, 0x5F, 0xAF },
    til::color{ 0x5F, 0x5F, 0xD7 },
    til::color{ 0x5F, 0x5F, 0xFF },
    til::color{ 0x5F, 0x87, 0x00 },
    til::color{ 0x5F, 0x87, 0x5F },
    til::color{ 0x5F, 0x87, 0x87 },
    til::color{ 0x5F, 0x87, 0xAF },
    til::color{ 0x5F, 0x87, 0xD7 },
    til::color{ 0x5F, 0x87, 0xFF },
    til::color{ 0x5F, 0xAF, 0x00 },
    til::color{ 0x5F, 0xAF, 0x5F },
    til::color{ 0x5F, 0xAF, 0x87 },
    til::color{ 0x5F, 0xAF, 0xAF },
    til::color{ 0x5F, 0xAF, 0xD7 },
    til::color{ 0x5F, 0xAF, 0xFF },
    til::color{ 0x5F, 0xD7, 0x00 },
    til::color{ 0x5F, 0xD7, 0x5F },
    til::color{ 0x5F, 0xD7, 0x87 },
    til::color{ 0x5F, 0xD7, 0xAF },
    til::color{ 0x5F, 0xD7, 0xD7 },
    til::color{ 0x5F, 0xD7, 0xFF },
    til::color{ 0x5F, 0xFF, 0x00 },
    til::color{ 0x5F, 0xFF, 0x5F },
    til::color{ 0x5F, 0xFF, 0x87 },
    til::color{ 0x5F, 0xFF, 0xAF },
    til::color{ 0x5F, 0xFF, 0xD7 },
    til::color{ 0x5F, 0xFF, 0xFF },
    til::color{ 0x87, 0x00, 0x00 },
    til::color{ 0x87, 0x00, 0x5F },
    til::color{ 0x87, 0x00, 0x87 },
    til::color{ 0x87, 0x00, 0xAF },
    til::color{ 0x87, 0x00, 0xD7 },
    til::color{ 0x87, 0x00, 0xFF },
    til::color{ 0x87, 0x5F, 0x00 },
    til::color{ 0x87, 0x5F, 0x5F },
    til::color{ 0x87, 0x5F, 0x87 },
    til::color{ 0x87, 0x5F, 0xAF },
    til::color{ 0x87, 0x5F, 0xD7 },
    til::color{ 0x87, 0x5F, 0xFF },
    til::color{ 0x87, 0x87, 0x00 },
    til::color{ 0x87, 0x87, 0x5F },
    til::color{ 0x87, 0x87, 0x87 },
    til::color{ 0x87, 0x87, 0xAF },
    til::color{ 0x87, 0x87, 0xD7 },
    til::color{ 0x87, 0x87, 0xFF },
    til::color{ 0x87, 0xAF, 0x00 },
    til::color{ 0x87, 0xAF, 0x5F },
    til::color{ 0x87, 0xAF, 0x87 },
    til::color{ 0x87, 0xAF, 0xAF },
    til::color{ 0x87, 0xAF, 0xD7 },
    til::color{ 0x87, 0xAF, 0xFF },
    til::color{ 0x87, 0xD7, 0x00 },
    til::color{ 0x87, 0xD7, 0x5F },
    til::color{ 0x87, 0xD7, 0x87 },
    til::color{ 0x87, 0xD7, 0xAF },
    til::color{ 0x87, 0xD7, 0xD7 },
    til::color{ 0x87, 0xD7, 0xFF },
    til::color{ 0x87, 0xFF, 0x00 },
    til::color{ 0x87, 0xFF, 0x5F },
    til::color{ 0x87, 0xFF, 0x87 },
    til::color{ 0x87, 0xFF, 0xAF },
    til::color{ 0x87, 0xFF, 0xD7 },
    til::color{ 0x87, 0xFF, 0xFF },
    til::color{ 0xAF, 0x00, 0x00 },
    til::color{ 0xAF, 0x00, 0x5F },
    til::color{ 0xAF, 0x00, 0x87 },
    til::color{ 0xAF, 0x00, 0xAF },
    til::color{ 0xAF, 0x00, 0xD7 },
    til::color{ 0xAF, 0x00, 0xFF },
    til::color{ 0xAF, 0x5F, 0x00 },
    til::color{ 0xAF, 0x5F, 0x5F },
    til::color{ 0xAF, 0x5F, 0x87 },
    til::color{ 0xAF, 0x5F, 0xAF },
    til::color{ 0xAF, 0x5F, 0xD7 },
    til::color{ 0xAF, 0x5F, 0xFF },
    til::color{ 0xAF, 0x87, 0x00 },
    til::color{ 0xAF, 0x87, 0x5F },
    til::color{ 0xAF, 0x87, 0x87 },
    til::color{ 0xAF, 0x87, 0xAF },
    til::color{ 0xAF, 0x87, 0xD7 },
    til::color{ 0xAF, 0x87, 0xFF },
    til::color{ 0xAF, 0xAF, 0x00 },
    til::color{ 0xAF, 0xAF, 0x5F },
    til::color{ 0xAF, 0xAF, 0x87 },
    til::color{ 0xAF, 0xAF, 0xAF },
    til::color{ 0xAF, 0xAF, 0xD7 },
    til::color{ 0xAF, 0xAF, 0xFF },
    til::color{ 0xAF, 0xD7, 0x00 },
    til::color{ 0xAF, 0xD7, 0x5F },
    til::color{ 0xAF, 0xD7, 0x87 },
    til::color{ 0xAF, 0xD7, 0xAF },
    til::color{ 0xAF, 0xD7, 0xD7 },
    til::color{ 0xAF, 0xD7, 0xFF },
    til::color{ 0xAF, 0xFF, 0x00 },
    til::color{ 0xAF, 0xFF, 0x5F },
    til::color{ 0xAF, 0xFF, 0x87 },
    til::color{ 0xAF, 0xFF, 0xAF },
    til::color{ 0xAF, 0xFF, 0xD7 },
    til::color{ 0xAF, 0xFF, 0xFF },
    til::color{ 0xD7, 0x00, 0x00 },
    til::color{ 0xD7, 0x00, 0x5F },
    til::color{ 0xD7, 0x00, 0x87 },
    til::color{ 0xD7, 0x00, 0xAF },
    til::color{ 0xD7, 0x00, 0xD7 },
    til::color{ 0xD7, 0x00, 0xFF },
    til::color{ 0xD7, 0x5F, 0x00 },
    til::color{ 0xD7, 0x5F, 0x5F },
    til::color{ 0xD7, 0x5F, 0x87 },
    til::color{ 0xD7, 0x5F, 0xAF },
    til::color{ 0xD7, 0x5F, 0xD7 },
    til::color{ 0xD7, 0x5F, 0xFF },
    til::color{ 0xD7, 0x87, 0x00 },
    til::color{ 0xD7, 0x87, 0x5F },
    til::color{ 0xD7, 0x87, 0x87 },
    til::color{ 0xD7, 0x87, 0xAF },
    til::color{ 0xD7, 0x87, 0xD7 },
    til::color{ 0xD7, 0x87, 0xFF },
    til::color{ 0xD7, 0xAF, 0x00 },
    til::color{ 0xD7, 0xAF, 0x5F },
    til::color{ 0xD7, 0xAF, 0x87 },
    til::color{ 0xD7, 0xAF, 0xAF },
    til::color{ 0xD7, 0xAF, 0xD7 },
    til::color{ 0xD7, 0xAF, 0xFF },
    til::color{ 0xD7, 0xD7, 0x00 },
    til::color{ 0xD7, 0xD7, 0x5F },
    til::color{ 0xD7, 0xD7, 0x87 },
    til::color{ 0xD7, 0xD7, 0xAF },
    til::color{ 0xD7, 0xD7, 0xD7 },
    til::color{ 0xD7, 0xD7, 0xFF },
    til::color{ 0xD7, 0xFF, 0x00 },
    til::color{ 0xD7, 0xFF, 0x5F },
    til::color{ 0xD7, 0xFF, 0x87 },
    til::color{ 0xD7, 0xFF, 0xAF },
    til::color{ 0xD7, 0xFF, 0xD7 },
    til::color{ 0xD7, 0xFF, 0xFF },
    til::color{ 0xFF, 0x00, 0x00 },
    til::color{ 0xFF, 0x00, 0x5F },
    til::color{ 0xFF, 0x00, 0x87 },
    til::color{ 0xFF, 0x00, 0xAF },
    til::color{ 0xFF, 0x00, 0xD7 },
    til::color{ 0xFF, 0x00, 0xFF },
    til::color{ 0xFF, 0x5F, 0x00 },
    til::color{ 0xFF, 0x5F, 0x5F },
    til::color{ 0xFF, 0x5F, 0x87 },
    til::color{ 0xFF, 0x5F, 0xAF },
    til::color{ 0xFF, 0x5F, 0xD7 },
    til::color{ 0xFF, 0x5F, 0xFF },
    til::color{ 0xFF, 0x87, 0x00 },
    til::color{ 0xFF, 0x87, 0x5F },
    til::color{ 0xFF, 0x87, 0x87 },
    til::color{ 0xFF, 0x87, 0xAF },
    til::color{ 0xFF, 0x87, 0xD7 },
    til::color{ 0xFF, 0x87, 0xFF },
    til::color{ 0xFF, 0xAF, 0x00 },
    til::color{ 0xFF, 0xAF, 0x5F },
    til::color{ 0xFF, 0xAF, 0x87 },
    til::color{ 0xFF, 0xAF, 0xAF },
    til::color{ 0xFF, 0xAF, 0xD7 },
    til::color{ 0xFF, 0xAF, 0xFF },
    til::color{ 0xFF, 0xD7, 0x00 },
    til::color{ 0xFF, 0xD7, 0x5F },
    til::color{ 0xFF, 0xD7, 0x87 },
    til::color{ 0xFF, 0xD7, 0xAF },
    til::color{ 0xFF, 0xD7, 0xD7 },
    til::color{ 0xFF, 0xD7, 0xFF },
    til::color{ 0xFF, 0xFF, 0x00 },
    til::color{ 0xFF, 0xFF, 0x5F },
    til::color{ 0xFF, 0xFF, 0x87 },
    til::color{ 0xFF, 0xFF, 0xAF },
    til::color{ 0xFF, 0xFF, 0xD7 },
    til::color{ 0xFF, 0xFF, 0xFF },
    til::color{ 0x08, 0x08, 0x08 },
    til::color{ 0x12, 0x12, 0x12 },
    til::color{ 0x1C, 0x1C, 0x1C },
    til::color{ 0x26, 0x26, 0x26 },
    til::color{ 0x30, 0x30, 0x30 },
    til::color{ 0x3A, 0x3A, 0x3A },
    til::color{ 0x44, 0x44, 0x44 },
    til::color{ 0x4E, 0x4E, 0x4E },
    til::color{ 0x58, 0x58, 0x58 },
    til::color{ 0x62, 0x62, 0x62 },
    til::color{ 0x6C, 0x6C, 0x6C },
    til::color{ 0x76, 0x76, 0x76 },
    til::color{ 0x80, 0x80, 0x80 },
    til::color{ 0x8A, 0x8A, 0x8A },
    til::color{ 0x94, 0x94, 0x94 },
    til::color{ 0x9E, 0x9E, 0x9E },
    til::color{ 0xA8, 0xA8, 0xA8 },
    til::color{ 0xB2, 0xB2, 0xB2 },
    til::color{ 0xBC, 0xBC, 0xBC },
    til::color{ 0xC6, 0xC6, 0xC6 },
    til::color{ 0xD0, 0xD0, 0xD0 },
    til::color{ 0xDA, 0xDA, 0xDA },
    til::color{ 0xE4, 0xE4, 0xE4 },
    til::color{ 0xEE, 0xEE, 0xEE },
};

static til::static_map<std::wstring, til::color, std::less<std::wstring>, 782> xorgAppColorTable{
    std::pair{ L"snow", til::color{ 255, 250, 250 } },
    std::pair{ L"ghost white", til::color{ 248, 248, 255 } },
    std::pair{ L"GhostWhite", til::color{ 248, 248, 255 } },
    std::pair{ L"white smoke", til::color{ 245, 245, 245 } },
    std::pair{ L"WhiteSmoke", til::color{ 245, 245, 245 } },
    std::pair{ L"gainsboro", til::color{ 220, 220, 220 } },
    std::pair{ L"floral white", til::color{ 255, 250, 240 } },
    std::pair{ L"FloralWhite", til::color{ 255, 250, 240 } },
    std::pair{ L"old lace", til::color{ 253, 245, 230 } },
    std::pair{ L"OldLace", til::color{ 253, 245, 230 } },
    std::pair{ L"linen", til::color{ 250, 240, 230 } },
    std::pair{ L"antique white", til::color{ 250, 235, 215 } },
    std::pair{ L"AntiqueWhite", til::color{ 250, 235, 215 } },
    std::pair{ L"papaya whip", til::color{ 255, 239, 213 } },
    std::pair{ L"PapayaWhip", til::color{ 255, 239, 213 } },
    std::pair{ L"blanched almond", til::color{ 255, 235, 205 } },
    std::pair{ L"BlanchedAlmond", til::color{ 255, 235, 205 } },
    std::pair{ L"bisque", til::color{ 255, 228, 196 } },
    std::pair{ L"peach puff", til::color{ 255, 218, 185 } },
    std::pair{ L"PeachPuff", til::color{ 255, 218, 185 } },
    std::pair{ L"navajo white", til::color{ 255, 222, 173 } },
    std::pair{ L"NavajoWhite", til::color{ 255, 222, 173 } },
    std::pair{ L"moccasin", til::color{ 255, 228, 181 } },
    std::pair{ L"cornsilk", til::color{ 255, 248, 220 } },
    std::pair{ L"ivory", til::color{ 255, 255, 240 } },
    std::pair{ L"lemon chiffon", til::color{ 255, 250, 205 } },
    std::pair{ L"LemonChiffon", til::color{ 255, 250, 205 } },
    std::pair{ L"seashell", til::color{ 255, 245, 238 } },
    std::pair{ L"honeydew", til::color{ 240, 255, 240 } },
    std::pair{ L"mint cream", til::color{ 245, 255, 250 } },
    std::pair{ L"MintCream", til::color{ 245, 255, 250 } },
    std::pair{ L"azure", til::color{ 240, 255, 255 } },
    std::pair{ L"alice blue", til::color{ 240, 248, 255 } },
    std::pair{ L"AliceBlue", til::color{ 240, 248, 255 } },
    std::pair{ L"lavender", til::color{ 230, 230, 250 } },
    std::pair{ L"lavender blush", til::color{ 255, 240, 245 } },
    std::pair{ L"LavenderBlush", til::color{ 255, 240, 245 } },
    std::pair{ L"misty rose", til::color{ 255, 228, 225 } },
    std::pair{ L"MistyRose", til::color{ 255, 228, 225 } },
    std::pair{ L"white", til::color{ 255, 255, 255 } },
    std::pair{ L"black", til::color{ 0, 0, 0 } },
    std::pair{ L"dark slate gray", til::color{ 47, 79, 79 } },
    std::pair{ L"DarkSlateGray", til::color{ 47, 79, 79 } },
    std::pair{ L"dark slate grey", til::color{ 47, 79, 79 } },
    std::pair{ L"DarkSlateGrey", til::color{ 47, 79, 79 } },
    std::pair{ L"dim gray", til::color{ 105, 105, 105 } },
    std::pair{ L"DimGray", til::color{ 105, 105, 105 } },
    std::pair{ L"dim grey", til::color{ 105, 105, 105 } },
    std::pair{ L"DimGrey", til::color{ 105, 105, 105 } },
    std::pair{ L"slate gray", til::color{ 112, 128, 144 } },
    std::pair{ L"SlateGray", til::color{ 112, 128, 144 } },
    std::pair{ L"slate grey", til::color{ 112, 128, 144 } },
    std::pair{ L"SlateGrey", til::color{ 112, 128, 144 } },
    std::pair{ L"light slate gray", til::color{ 119, 136, 153 } },
    std::pair{ L"LightSlateGray", til::color{ 119, 136, 153 } },
    std::pair{ L"light slate grey", til::color{ 119, 136, 153 } },
    std::pair{ L"LightSlateGrey", til::color{ 119, 136, 153 } },
    std::pair{ L"gray", til::color{ 190, 190, 190 } },
    std::pair{ L"grey", til::color{ 190, 190, 190 } },
    std::pair{ L"x11 gray", til::color{ 190, 190, 190 } },
    std::pair{ L"X11Gray", til::color{ 190, 190, 190 } },
    std::pair{ L"x11 grey", til::color{ 190, 190, 190 } },
    std::pair{ L"X11Grey", til::color{ 190, 190, 190 } },
    std::pair{ L"web gray", til::color{ 128, 128, 128 } },
    std::pair{ L"WebGray", til::color{ 128, 128, 128 } },
    std::pair{ L"web grey", til::color{ 128, 128, 128 } },
    std::pair{ L"WebGrey", til::color{ 128, 128, 128 } },
    std::pair{ L"light grey", til::color{ 211, 211, 211 } },
    std::pair{ L"LightGrey", til::color{ 211, 211, 211 } },
    std::pair{ L"light gray", til::color{ 211, 211, 211 } },
    std::pair{ L"LightGray", til::color{ 211, 211, 211 } },
    std::pair{ L"midnight blue", til::color{ 25, 25, 112 } },
    std::pair{ L"MidnightBlue", til::color{ 25, 25, 112 } },
    std::pair{ L"navy", til::color{ 0, 0, 128 } },
    std::pair{ L"navy blue", til::color{ 0, 0, 128 } },
    std::pair{ L"NavyBlue", til::color{ 0, 0, 128 } },
    std::pair{ L"cornflower blue", til::color{ 100, 149, 237 } },
    std::pair{ L"CornflowerBlue", til::color{ 100, 149, 237 } },
    std::pair{ L"dark slate blue", til::color{ 72, 61, 139 } },
    std::pair{ L"DarkSlateBlue", til::color{ 72, 61, 139 } },
    std::pair{ L"slate blue", til::color{ 106, 90, 205 } },
    std::pair{ L"SlateBlue", til::color{ 106, 90, 205 } },
    std::pair{ L"medium slate blue", til::color{ 123, 104, 238 } },
    std::pair{ L"MediumSlateBlue", til::color{ 123, 104, 238 } },
    std::pair{ L"light slate blue", til::color{ 132, 112, 255 } },
    std::pair{ L"LightSlateBlue", til::color{ 132, 112, 255 } },
    std::pair{ L"medium blue", til::color{ 0, 0, 205 } },
    std::pair{ L"MediumBlue", til::color{ 0, 0, 205 } },
    std::pair{ L"royal blue", til::color{ 65, 105, 225 } },
    std::pair{ L"RoyalBlue", til::color{ 65, 105, 225 } },
    std::pair{ L"blue", til::color{ 0, 0, 255 } },
    std::pair{ L"dodger blue", til::color{ 30, 144, 255 } },
    std::pair{ L"DodgerBlue", til::color{ 30, 144, 255 } },
    std::pair{ L"deep sky blue", til::color{ 0, 191, 255 } },
    std::pair{ L"DeepSkyBlue", til::color{ 0, 191, 255 } },
    std::pair{ L"sky blue", til::color{ 135, 206, 235 } },
    std::pair{ L"SkyBlue", til::color{ 135, 206, 235 } },
    std::pair{ L"light sky blue", til::color{ 135, 206, 250 } },
    std::pair{ L"LightSkyBlue", til::color{ 135, 206, 250 } },
    std::pair{ L"steel blue", til::color{ 70, 130, 180 } },
    std::pair{ L"SteelBlue", til::color{ 70, 130, 180 } },
    std::pair{ L"light steel blue", til::color{ 176, 196, 222 } },
    std::pair{ L"LightSteelBlue", til::color{ 176, 196, 222 } },
    std::pair{ L"light blue", til::color{ 173, 216, 230 } },
    std::pair{ L"LightBlue", til::color{ 173, 216, 230 } },
    std::pair{ L"powder blue", til::color{ 176, 224, 230 } },
    std::pair{ L"PowderBlue", til::color{ 176, 224, 230 } },
    std::pair{ L"pale turquoise", til::color{ 175, 238, 238 } },
    std::pair{ L"PaleTurquoise", til::color{ 175, 238, 238 } },
    std::pair{ L"dark turquoise", til::color{ 0, 206, 209 } },
    std::pair{ L"DarkTurquoise", til::color{ 0, 206, 209 } },
    std::pair{ L"medium turquoise", til::color{ 72, 209, 204 } },
    std::pair{ L"MediumTurquoise", til::color{ 72, 209, 204 } },
    std::pair{ L"turquoise", til::color{ 64, 224, 208 } },
    std::pair{ L"cyan", til::color{ 0, 255, 255 } },
    std::pair{ L"aqua", til::color{ 0, 255, 255 } },
    std::pair{ L"light cyan", til::color{ 224, 255, 255 } },
    std::pair{ L"LightCyan", til::color{ 224, 255, 255 } },
    std::pair{ L"cadet blue", til::color{ 95, 158, 160 } },
    std::pair{ L"CadetBlue", til::color{ 95, 158, 160 } },
    std::pair{ L"medium aquamarine", til::color{ 102, 205, 170 } },
    std::pair{ L"MediumAquamarine", til::color{ 102, 205, 170 } },
    std::pair{ L"aquamarine", til::color{ 127, 255, 212 } },
    std::pair{ L"dark green", til::color{ 0, 100, 0 } },
    std::pair{ L"DarkGreen", til::color{ 0, 100, 0 } },
    std::pair{ L"dark olive green", til::color{ 85, 107, 47 } },
    std::pair{ L"DarkOliveGreen", til::color{ 85, 107, 47 } },
    std::pair{ L"dark sea green", til::color{ 143, 188, 143 } },
    std::pair{ L"DarkSeaGreen", til::color{ 143, 188, 143 } },
    std::pair{ L"sea green", til::color{ 46, 139, 87 } },
    std::pair{ L"SeaGreen", til::color{ 46, 139, 87 } },
    std::pair{ L"medium sea green", til::color{ 60, 179, 113 } },
    std::pair{ L"MediumSeaGreen", til::color{ 60, 179, 113 } },
    std::pair{ L"light sea green", til::color{ 32, 178, 170 } },
    std::pair{ L"LightSeaGreen", til::color{ 32, 178, 170 } },
    std::pair{ L"pale green", til::color{ 152, 251, 152 } },
    std::pair{ L"PaleGreen", til::color{ 152, 251, 152 } },
    std::pair{ L"spring green", til::color{ 0, 255, 127 } },
    std::pair{ L"SpringGreen", til::color{ 0, 255, 127 } },
    std::pair{ L"lawn green", til::color{ 124, 252, 0 } },
    std::pair{ L"LawnGreen", til::color{ 124, 252, 0 } },
    std::pair{ L"green", til::color{ 0, 255, 0 } },
    std::pair{ L"lime", til::color{ 0, 255, 0 } },
    std::pair{ L"x11 green", til::color{ 0, 255, 0 } },
    std::pair{ L"X11Green", til::color{ 0, 255, 0 } },
    std::pair{ L"web green", til::color{ 0, 128, 0 } },
    std::pair{ L"WebGreen", til::color{ 0, 128, 0 } },
    std::pair{ L"chartreuse", til::color{ 127, 255, 0 } },
    std::pair{ L"medium spring green", til::color{ 0, 250, 154 } },
    std::pair{ L"MediumSpringGreen", til::color{ 0, 250, 154 } },
    std::pair{ L"green yellow", til::color{ 173, 255, 47 } },
    std::pair{ L"GreenYellow", til::color{ 173, 255, 47 } },
    std::pair{ L"lime green", til::color{ 50, 205, 50 } },
    std::pair{ L"LimeGreen", til::color{ 50, 205, 50 } },
    std::pair{ L"yellow green", til::color{ 154, 205, 50 } },
    std::pair{ L"YellowGreen", til::color{ 154, 205, 50 } },
    std::pair{ L"forest green", til::color{ 34, 139, 34 } },
    std::pair{ L"ForestGreen", til::color{ 34, 139, 34 } },
    std::pair{ L"olive drab", til::color{ 107, 142, 35 } },
    std::pair{ L"OliveDrab", til::color{ 107, 142, 35 } },
    std::pair{ L"dark khaki", til::color{ 189, 183, 107 } },
    std::pair{ L"DarkKhaki", til::color{ 189, 183, 107 } },
    std::pair{ L"khaki", til::color{ 240, 230, 140 } },
    std::pair{ L"pale goldenrod", til::color{ 238, 232, 170 } },
    std::pair{ L"PaleGoldenrod", til::color{ 238, 232, 170 } },
    std::pair{ L"light goldenrod yellow", til::color{ 250, 250, 210 } },
    std::pair{ L"LightGoldenrodYellow", til::color{ 250, 250, 210 } },
    std::pair{ L"light yellow", til::color{ 255, 255, 224 } },
    std::pair{ L"LightYellow", til::color{ 255, 255, 224 } },
    std::pair{ L"yellow", til::color{ 255, 255, 0 } },
    std::pair{ L"gold", til::color{ 255, 215, 0 } },
    std::pair{ L"light goldenrod", til::color{ 238, 221, 130 } },
    std::pair{ L"LightGoldenrod", til::color{ 238, 221, 130 } },
    std::pair{ L"goldenrod", til::color{ 218, 165, 32 } },
    std::pair{ L"dark goldenrod", til::color{ 184, 134, 11 } },
    std::pair{ L"DarkGoldenrod", til::color{ 184, 134, 11 } },
    std::pair{ L"rosy brown", til::color{ 188, 143, 143 } },
    std::pair{ L"RosyBrown", til::color{ 188, 143, 143 } },
    std::pair{ L"indian red", til::color{ 205, 92, 92 } },
    std::pair{ L"IndianRed", til::color{ 205, 92, 92 } },
    std::pair{ L"saddle brown", til::color{ 139, 69, 19 } },
    std::pair{ L"SaddleBrown", til::color{ 139, 69, 19 } },
    std::pair{ L"sienna", til::color{ 160, 82, 45 } },
    std::pair{ L"peru", til::color{ 205, 133, 63 } },
    std::pair{ L"burlywood", til::color{ 222, 184, 135 } },
    std::pair{ L"beige", til::color{ 245, 245, 220 } },
    std::pair{ L"wheat", til::color{ 245, 222, 179 } },
    std::pair{ L"sandy brown", til::color{ 244, 164, 96 } },
    std::pair{ L"SandyBrown", til::color{ 244, 164, 96 } },
    std::pair{ L"tan", til::color{ 210, 180, 140 } },
    std::pair{ L"chocolate", til::color{ 210, 105, 30 } },
    std::pair{ L"firebrick", til::color{ 178, 34, 34 } },
    std::pair{ L"brown", til::color{ 165, 42, 42 } },
    std::pair{ L"dark salmon", til::color{ 233, 150, 122 } },
    std::pair{ L"DarkSalmon", til::color{ 233, 150, 122 } },
    std::pair{ L"salmon", til::color{ 250, 128, 114 } },
    std::pair{ L"light salmon", til::color{ 255, 160, 122 } },
    std::pair{ L"LightSalmon", til::color{ 255, 160, 122 } },
    std::pair{ L"orange", til::color{ 255, 165, 0 } },
    std::pair{ L"dark orange", til::color{ 255, 140, 0 } },
    std::pair{ L"DarkOrange", til::color{ 255, 140, 0 } },
    std::pair{ L"coral", til::color{ 255, 127, 80 } },
    std::pair{ L"light coral", til::color{ 240, 128, 128 } },
    std::pair{ L"LightCoral", til::color{ 240, 128, 128 } },
    std::pair{ L"tomato", til::color{ 255, 99, 71 } },
    std::pair{ L"orange red", til::color{ 255, 69, 0 } },
    std::pair{ L"OrangeRed", til::color{ 255, 69, 0 } },
    std::pair{ L"red", til::color{ 255, 0, 0 } },
    std::pair{ L"hot pink", til::color{ 255, 105, 180 } },
    std::pair{ L"HotPink", til::color{ 255, 105, 180 } },
    std::pair{ L"deep pink", til::color{ 255, 20, 147 } },
    std::pair{ L"DeepPink", til::color{ 255, 20, 147 } },
    std::pair{ L"pink", til::color{ 255, 192, 203 } },
    std::pair{ L"light pink", til::color{ 255, 182, 193 } },
    std::pair{ L"LightPink", til::color{ 255, 182, 193 } },
    std::pair{ L"pale violet red", til::color{ 219, 112, 147 } },
    std::pair{ L"PaleVioletRed", til::color{ 219, 112, 147 } },
    std::pair{ L"maroon", til::color{ 176, 48, 96 } },
    std::pair{ L"x11 maroon", til::color{ 176, 48, 96 } },
    std::pair{ L"X11Maroon", til::color{ 176, 48, 96 } },
    std::pair{ L"web maroon", til::color{ 128, 0, 0 } },
    std::pair{ L"WebMaroon", til::color{ 128, 0, 0 } },
    std::pair{ L"medium violet red", til::color{ 199, 21, 133 } },
    std::pair{ L"MediumVioletRed", til::color{ 199, 21, 133 } },
    std::pair{ L"violet red", til::color{ 208, 32, 144 } },
    std::pair{ L"VioletRed", til::color{ 208, 32, 144 } },
    std::pair{ L"magenta", til::color{ 255, 0, 255 } },
    std::pair{ L"fuchsia", til::color{ 255, 0, 255 } },
    std::pair{ L"violet", til::color{ 238, 130, 238 } },
    std::pair{ L"plum", til::color{ 221, 160, 221 } },
    std::pair{ L"orchid", til::color{ 218, 112, 214 } },
    std::pair{ L"medium orchid", til::color{ 186, 85, 211 } },
    std::pair{ L"MediumOrchid", til::color{ 186, 85, 211 } },
    std::pair{ L"dark orchid", til::color{ 153, 50, 204 } },
    std::pair{ L"DarkOrchid", til::color{ 153, 50, 204 } },
    std::pair{ L"dark violet", til::color{ 148, 0, 211 } },
    std::pair{ L"DarkViolet", til::color{ 148, 0, 211 } },
    std::pair{ L"blue violet", til::color{ 138, 43, 226 } },
    std::pair{ L"BlueViolet", til::color{ 138, 43, 226 } },
    std::pair{ L"purple", til::color{ 160, 32, 240 } },
    std::pair{ L"x11 purple", til::color{ 160, 32, 240 } },
    std::pair{ L"X11Purple", til::color{ 160, 32, 240 } },
    std::pair{ L"web purple", til::color{ 128, 0, 128 } },
    std::pair{ L"WebPurple", til::color{ 128, 0, 128 } },
    std::pair{ L"medium purple", til::color{ 147, 112, 219 } },
    std::pair{ L"MediumPurple", til::color{ 147, 112, 219 } },
    std::pair{ L"thistle", til::color{ 216, 191, 216 } },
    std::pair{ L"snow1", til::color{ 255, 250, 250 } },
    std::pair{ L"snow2", til::color{ 238, 233, 233 } },
    std::pair{ L"snow3", til::color{ 205, 201, 201 } },
    std::pair{ L"snow4", til::color{ 139, 137, 137 } },
    std::pair{ L"seashell1", til::color{ 255, 245, 238 } },
    std::pair{ L"seashell2", til::color{ 238, 229, 222 } },
    std::pair{ L"seashell3", til::color{ 205, 197, 191 } },
    std::pair{ L"seashell4", til::color{ 139, 134, 130 } },
    std::pair{ L"AntiqueWhite1", til::color{ 255, 239, 219 } },
    std::pair{ L"AntiqueWhite2", til::color{ 238, 223, 204 } },
    std::pair{ L"AntiqueWhite3", til::color{ 205, 192, 176 } },
    std::pair{ L"AntiqueWhite4", til::color{ 139, 131, 120 } },
    std::pair{ L"bisque1", til::color{ 255, 228, 196 } },
    std::pair{ L"bisque2", til::color{ 238, 213, 183 } },
    std::pair{ L"bisque3", til::color{ 205, 183, 158 } },
    std::pair{ L"bisque4", til::color{ 139, 125, 107 } },
    std::pair{ L"PeachPuff1", til::color{ 255, 218, 185 } },
    std::pair{ L"PeachPuff2", til::color{ 238, 203, 173 } },
    std::pair{ L"PeachPuff3", til::color{ 205, 175, 149 } },
    std::pair{ L"PeachPuff4", til::color{ 139, 119, 101 } },
    std::pair{ L"NavajoWhite1", til::color{ 255, 222, 173 } },
    std::pair{ L"NavajoWhite2", til::color{ 238, 207, 161 } },
    std::pair{ L"NavajoWhite3", til::color{ 205, 179, 139 } },
    std::pair{ L"NavajoWhite4", til::color{ 139, 121, 94 } },
    std::pair{ L"LemonChiffon1", til::color{ 255, 250, 205 } },
    std::pair{ L"LemonChiffon2", til::color{ 238, 233, 191 } },
    std::pair{ L"LemonChiffon3", til::color{ 205, 201, 165 } },
    std::pair{ L"LemonChiffon4", til::color{ 139, 137, 112 } },
    std::pair{ L"cornsilk1", til::color{ 255, 248, 220 } },
    std::pair{ L"cornsilk2", til::color{ 238, 232, 205 } },
    std::pair{ L"cornsilk3", til::color{ 205, 200, 177 } },
    std::pair{ L"cornsilk4", til::color{ 139, 136, 120 } },
    std::pair{ L"ivory1", til::color{ 255, 255, 240 } },
    std::pair{ L"ivory2", til::color{ 238, 238, 224 } },
    std::pair{ L"ivory3", til::color{ 205, 205, 193 } },
    std::pair{ L"ivory4", til::color{ 139, 139, 131 } },
    std::pair{ L"honeydew1", til::color{ 240, 255, 240 } },
    std::pair{ L"honeydew2", til::color{ 224, 238, 224 } },
    std::pair{ L"honeydew3", til::color{ 193, 205, 193 } },
    std::pair{ L"honeydew4", til::color{ 131, 139, 131 } },
    std::pair{ L"LavenderBlush1", til::color{ 255, 240, 245 } },
    std::pair{ L"LavenderBlush2", til::color{ 238, 224, 229 } },
    std::pair{ L"LavenderBlush3", til::color{ 205, 193, 197 } },
    std::pair{ L"LavenderBlush4", til::color{ 139, 131, 134 } },
    std::pair{ L"MistyRose1", til::color{ 255, 228, 225 } },
    std::pair{ L"MistyRose2", til::color{ 238, 213, 210 } },
    std::pair{ L"MistyRose3", til::color{ 205, 183, 181 } },
    std::pair{ L"MistyRose4", til::color{ 139, 125, 123 } },
    std::pair{ L"azure1", til::color{ 240, 255, 255 } },
    std::pair{ L"azure2", til::color{ 224, 238, 238 } },
    std::pair{ L"azure3", til::color{ 193, 205, 205 } },
    std::pair{ L"azure4", til::color{ 131, 139, 139 } },
    std::pair{ L"SlateBlue1", til::color{ 131, 111, 255 } },
    std::pair{ L"SlateBlue2", til::color{ 122, 103, 238 } },
    std::pair{ L"SlateBlue3", til::color{ 105, 89, 205 } },
    std::pair{ L"SlateBlue4", til::color{ 71, 60, 139 } },
    std::pair{ L"RoyalBlue1", til::color{ 72, 118, 255 } },
    std::pair{ L"RoyalBlue2", til::color{ 67, 110, 238 } },
    std::pair{ L"RoyalBlue3", til::color{ 58, 95, 205 } },
    std::pair{ L"RoyalBlue4", til::color{ 39, 64, 139 } },
    std::pair{ L"blue1", til::color{ 0, 0, 255 } },
    std::pair{ L"blue2", til::color{ 0, 0, 238 } },
    std::pair{ L"blue3", til::color{ 0, 0, 205 } },
    std::pair{ L"blue4", til::color{ 0, 0, 139 } },
    std::pair{ L"DodgerBlue1", til::color{ 30, 144, 255 } },
    std::pair{ L"DodgerBlue2", til::color{ 28, 134, 238 } },
    std::pair{ L"DodgerBlue3", til::color{ 24, 116, 205 } },
    std::pair{ L"DodgerBlue4", til::color{ 16, 78, 139 } },
    std::pair{ L"SteelBlue1", til::color{ 99, 184, 255 } },
    std::pair{ L"SteelBlue2", til::color{ 92, 172, 238 } },
    std::pair{ L"SteelBlue3", til::color{ 79, 148, 205 } },
    std::pair{ L"SteelBlue4", til::color{ 54, 100, 139 } },
    std::pair{ L"DeepSkyBlue1", til::color{ 0, 191, 255 } },
    std::pair{ L"DeepSkyBlue2", til::color{ 0, 178, 238 } },
    std::pair{ L"DeepSkyBlue3", til::color{ 0, 154, 205 } },
    std::pair{ L"DeepSkyBlue4", til::color{ 0, 104, 139 } },
    std::pair{ L"SkyBlue1", til::color{ 135, 206, 255 } },
    std::pair{ L"SkyBlue2", til::color{ 126, 192, 238 } },
    std::pair{ L"SkyBlue3", til::color{ 108, 166, 205 } },
    std::pair{ L"SkyBlue4", til::color{ 74, 112, 139 } },
    std::pair{ L"LightSkyBlue1", til::color{ 176, 226, 255 } },
    std::pair{ L"LightSkyBlue2", til::color{ 164, 211, 238 } },
    std::pair{ L"LightSkyBlue3", til::color{ 141, 182, 205 } },
    std::pair{ L"LightSkyBlue4", til::color{ 96, 123, 139 } },
    std::pair{ L"SlateGray1", til::color{ 198, 226, 255 } },
    std::pair{ L"SlateGray2", til::color{ 185, 211, 238 } },
    std::pair{ L"SlateGray3", til::color{ 159, 182, 205 } },
    std::pair{ L"SlateGray4", til::color{ 108, 123, 139 } },
    std::pair{ L"LightSteelBlue1", til::color{ 202, 225, 255 } },
    std::pair{ L"LightSteelBlue2", til::color{ 188, 210, 238 } },
    std::pair{ L"LightSteelBlue3", til::color{ 162, 181, 205 } },
    std::pair{ L"LightSteelBlue4", til::color{ 110, 123, 139 } },
    std::pair{ L"LightBlue1", til::color{ 191, 239, 255 } },
    std::pair{ L"LightBlue2", til::color{ 178, 223, 238 } },
    std::pair{ L"LightBlue3", til::color{ 154, 192, 205 } },
    std::pair{ L"LightBlue4", til::color{ 104, 131, 139 } },
    std::pair{ L"LightCyan1", til::color{ 224, 255, 255 } },
    std::pair{ L"LightCyan2", til::color{ 209, 238, 238 } },
    std::pair{ L"LightCyan3", til::color{ 180, 205, 205 } },
    std::pair{ L"LightCyan4", til::color{ 122, 139, 139 } },
    std::pair{ L"PaleTurquoise1", til::color{ 187, 255, 255 } },
    std::pair{ L"PaleTurquoise2", til::color{ 174, 238, 238 } },
    std::pair{ L"PaleTurquoise3", til::color{ 150, 205, 205 } },
    std::pair{ L"PaleTurquoise4", til::color{ 102, 139, 139 } },
    std::pair{ L"CadetBlue1", til::color{ 152, 245, 255 } },
    std::pair{ L"CadetBlue2", til::color{ 142, 229, 238 } },
    std::pair{ L"CadetBlue3", til::color{ 122, 197, 205 } },
    std::pair{ L"CadetBlue4", til::color{ 83, 134, 139 } },
    std::pair{ L"turquoise1", til::color{ 0, 245, 255 } },
    std::pair{ L"turquoise2", til::color{ 0, 229, 238 } },
    std::pair{ L"turquoise3", til::color{ 0, 197, 205 } },
    std::pair{ L"turquoise4", til::color{ 0, 134, 139 } },
    std::pair{ L"cyan1", til::color{ 0, 255, 255 } },
    std::pair{ L"cyan2", til::color{ 0, 238, 238 } },
    std::pair{ L"cyan3", til::color{ 0, 205, 205 } },
    std::pair{ L"cyan4", til::color{ 0, 139, 139 } },
    std::pair{ L"DarkSlateGray1", til::color{ 151, 255, 255 } },
    std::pair{ L"DarkSlateGray2", til::color{ 141, 238, 238 } },
    std::pair{ L"DarkSlateGray3", til::color{ 121, 205, 205 } },
    std::pair{ L"DarkSlateGray4", til::color{ 82, 139, 139 } },
    std::pair{ L"aquamarine1", til::color{ 127, 255, 212 } },
    std::pair{ L"aquamarine2", til::color{ 118, 238, 198 } },
    std::pair{ L"aquamarine3", til::color{ 102, 205, 170 } },
    std::pair{ L"aquamarine4", til::color{ 69, 139, 116 } },
    std::pair{ L"DarkSeaGreen1", til::color{ 193, 255, 193 } },
    std::pair{ L"DarkSeaGreen2", til::color{ 180, 238, 180 } },
    std::pair{ L"DarkSeaGreen3", til::color{ 155, 205, 155 } },
    std::pair{ L"DarkSeaGreen4", til::color{ 105, 139, 105 } },
    std::pair{ L"SeaGreen1", til::color{ 84, 255, 159 } },
    std::pair{ L"SeaGreen2", til::color{ 78, 238, 148 } },
    std::pair{ L"SeaGreen3", til::color{ 67, 205, 128 } },
    std::pair{ L"SeaGreen4", til::color{ 46, 139, 87 } },
    std::pair{ L"PaleGreen1", til::color{ 154, 255, 154 } },
    std::pair{ L"PaleGreen2", til::color{ 144, 238, 144 } },
    std::pair{ L"PaleGreen3", til::color{ 124, 205, 124 } },
    std::pair{ L"PaleGreen4", til::color{ 84, 139, 84 } },
    std::pair{ L"SpringGreen1", til::color{ 0, 255, 127 } },
    std::pair{ L"SpringGreen2", til::color{ 0, 238, 118 } },
    std::pair{ L"SpringGreen3", til::color{ 0, 205, 102 } },
    std::pair{ L"SpringGreen4", til::color{ 0, 139, 69 } },
    std::pair{ L"green1", til::color{ 0, 255, 0 } },
    std::pair{ L"green2", til::color{ 0, 238, 0 } },
    std::pair{ L"green3", til::color{ 0, 205, 0 } },
    std::pair{ L"green4", til::color{ 0, 139, 0 } },
    std::pair{ L"chartreuse1", til::color{ 127, 255, 0 } },
    std::pair{ L"chartreuse2", til::color{ 118, 238, 0 } },
    std::pair{ L"chartreuse3", til::color{ 102, 205, 0 } },
    std::pair{ L"chartreuse4", til::color{ 69, 139, 0 } },
    std::pair{ L"OliveDrab1", til::color{ 192, 255, 62 } },
    std::pair{ L"OliveDrab2", til::color{ 179, 238, 58 } },
    std::pair{ L"OliveDrab3", til::color{ 154, 205, 50 } },
    std::pair{ L"OliveDrab4", til::color{ 105, 139, 34 } },
    std::pair{ L"DarkOliveGreen1", til::color{ 202, 255, 112 } },
    std::pair{ L"DarkOliveGreen2", til::color{ 188, 238, 104 } },
    std::pair{ L"DarkOliveGreen3", til::color{ 162, 205, 90 } },
    std::pair{ L"DarkOliveGreen4", til::color{ 110, 139, 61 } },
    std::pair{ L"khaki1", til::color{ 255, 246, 143 } },
    std::pair{ L"khaki2", til::color{ 238, 230, 133 } },
    std::pair{ L"khaki3", til::color{ 205, 198, 115 } },
    std::pair{ L"khaki4", til::color{ 139, 134, 78 } },
    std::pair{ L"LightGoldenrod1", til::color{ 255, 236, 139 } },
    std::pair{ L"LightGoldenrod2", til::color{ 238, 220, 130 } },
    std::pair{ L"LightGoldenrod3", til::color{ 205, 190, 112 } },
    std::pair{ L"LightGoldenrod4", til::color{ 139, 129, 76 } },
    std::pair{ L"LightYellow1", til::color{ 255, 255, 224 } },
    std::pair{ L"LightYellow2", til::color{ 238, 238, 209 } },
    std::pair{ L"LightYellow3", til::color{ 205, 205, 180 } },
    std::pair{ L"LightYellow4", til::color{ 139, 139, 122 } },
    std::pair{ L"yellow1", til::color{ 255, 255, 0 } },
    std::pair{ L"yellow2", til::color{ 238, 238, 0 } },
    std::pair{ L"yellow3", til::color{ 205, 205, 0 } },
    std::pair{ L"yellow4", til::color{ 139, 139, 0 } },
    std::pair{ L"gold1", til::color{ 255, 215, 0 } },
    std::pair{ L"gold2", til::color{ 238, 201, 0 } },
    std::pair{ L"gold3", til::color{ 205, 173, 0 } },
    std::pair{ L"gold4", til::color{ 139, 117, 0 } },
    std::pair{ L"goldenrod1", til::color{ 255, 193, 37 } },
    std::pair{ L"goldenrod2", til::color{ 238, 180, 34 } },
    std::pair{ L"goldenrod3", til::color{ 205, 155, 29 } },
    std::pair{ L"goldenrod4", til::color{ 139, 105, 20 } },
    std::pair{ L"DarkGoldenrod1", til::color{ 255, 185, 15 } },
    std::pair{ L"DarkGoldenrod2", til::color{ 238, 173, 14 } },
    std::pair{ L"DarkGoldenrod3", til::color{ 205, 149, 12 } },
    std::pair{ L"DarkGoldenrod4", til::color{ 139, 101, 8 } },
    std::pair{ L"RosyBrown1", til::color{ 255, 193, 193 } },
    std::pair{ L"RosyBrown2", til::color{ 238, 180, 180 } },
    std::pair{ L"RosyBrown3", til::color{ 205, 155, 155 } },
    std::pair{ L"RosyBrown4", til::color{ 139, 105, 105 } },
    std::pair{ L"IndianRed1", til::color{ 255, 106, 106 } },
    std::pair{ L"IndianRed2", til::color{ 238, 99, 99 } },
    std::pair{ L"IndianRed3", til::color{ 205, 85, 85 } },
    std::pair{ L"IndianRed4", til::color{ 139, 58, 58 } },
    std::pair{ L"sienna1", til::color{ 255, 130, 71 } },
    std::pair{ L"sienna2", til::color{ 238, 121, 66 } },
    std::pair{ L"sienna3", til::color{ 205, 104, 57 } },
    std::pair{ L"sienna4", til::color{ 139, 71, 38 } },
    std::pair{ L"burlywood1", til::color{ 255, 211, 155 } },
    std::pair{ L"burlywood2", til::color{ 238, 197, 145 } },
    std::pair{ L"burlywood3", til::color{ 205, 170, 125 } },
    std::pair{ L"burlywood4", til::color{ 139, 115, 85 } },
    std::pair{ L"wheat1", til::color{ 255, 231, 186 } },
    std::pair{ L"wheat2", til::color{ 238, 216, 174 } },
    std::pair{ L"wheat3", til::color{ 205, 186, 150 } },
    std::pair{ L"wheat4", til::color{ 139, 126, 102 } },
    std::pair{ L"tan1", til::color{ 255, 165, 79 } },
    std::pair{ L"tan2", til::color{ 238, 154, 73 } },
    std::pair{ L"tan3", til::color{ 205, 133, 63 } },
    std::pair{ L"tan4", til::color{ 139, 90, 43 } },
    std::pair{ L"chocolate1", til::color{ 255, 127, 36 } },
    std::pair{ L"chocolate2", til::color{ 238, 118, 33 } },
    std::pair{ L"chocolate3", til::color{ 205, 102, 29 } },
    std::pair{ L"chocolate4", til::color{ 139, 69, 19 } },
    std::pair{ L"firebrick1", til::color{ 255, 48, 48 } },
    std::pair{ L"firebrick2", til::color{ 238, 44, 44 } },
    std::pair{ L"firebrick3", til::color{ 205, 38, 38 } },
    std::pair{ L"firebrick4", til::color{ 139, 26, 26 } },
    std::pair{ L"brown1", til::color{ 255, 64, 64 } },
    std::pair{ L"brown2", til::color{ 238, 59, 59 } },
    std::pair{ L"brown3", til::color{ 205, 51, 51 } },
    std::pair{ L"brown4", til::color{ 139, 35, 35 } },
    std::pair{ L"salmon1", til::color{ 255, 140, 105 } },
    std::pair{ L"salmon2", til::color{ 238, 130, 98 } },
    std::pair{ L"salmon3", til::color{ 205, 112, 84 } },
    std::pair{ L"salmon4", til::color{ 139, 76, 57 } },
    std::pair{ L"LightSalmon1", til::color{ 255, 160, 122 } },
    std::pair{ L"LightSalmon2", til::color{ 238, 149, 114 } },
    std::pair{ L"LightSalmon3", til::color{ 205, 129, 98 } },
    std::pair{ L"LightSalmon4", til::color{ 139, 87, 66 } },
    std::pair{ L"orange1", til::color{ 255, 165, 0 } },
    std::pair{ L"orange2", til::color{ 238, 154, 0 } },
    std::pair{ L"orange3", til::color{ 205, 133, 0 } },
    std::pair{ L"orange4", til::color{ 139, 90, 0 } },
    std::pair{ L"DarkOrange1", til::color{ 255, 127, 0 } },
    std::pair{ L"DarkOrange2", til::color{ 238, 118, 0 } },
    std::pair{ L"DarkOrange3", til::color{ 205, 102, 0 } },
    std::pair{ L"DarkOrange4", til::color{ 139, 69, 0 } },
    std::pair{ L"coral1", til::color{ 255, 114, 86 } },
    std::pair{ L"coral2", til::color{ 238, 106, 80 } },
    std::pair{ L"coral3", til::color{ 205, 91, 69 } },
    std::pair{ L"coral4", til::color{ 139, 62, 47 } },
    std::pair{ L"tomato1", til::color{ 255, 99, 71 } },
    std::pair{ L"tomato2", til::color{ 238, 92, 66 } },
    std::pair{ L"tomato3", til::color{ 205, 79, 57 } },
    std::pair{ L"tomato4", til::color{ 139, 54, 38 } },
    std::pair{ L"OrangeRed1", til::color{ 255, 69, 0 } },
    std::pair{ L"OrangeRed2", til::color{ 238, 64, 0 } },
    std::pair{ L"OrangeRed3", til::color{ 205, 55, 0 } },
    std::pair{ L"OrangeRed4", til::color{ 139, 37, 0 } },
    std::pair{ L"red1", til::color{ 255, 0, 0 } },
    std::pair{ L"red2", til::color{ 238, 0, 0 } },
    std::pair{ L"red3", til::color{ 205, 0, 0 } },
    std::pair{ L"red4", til::color{ 139, 0, 0 } },
    std::pair{ L"DeepPink1", til::color{ 255, 20, 147 } },
    std::pair{ L"DeepPink2", til::color{ 238, 18, 137 } },
    std::pair{ L"DeepPink3", til::color{ 205, 16, 118 } },
    std::pair{ L"DeepPink4", til::color{ 139, 10, 80 } },
    std::pair{ L"HotPink1", til::color{ 255, 110, 180 } },
    std::pair{ L"HotPink2", til::color{ 238, 106, 167 } },
    std::pair{ L"HotPink3", til::color{ 205, 96, 144 } },
    std::pair{ L"HotPink4", til::color{ 139, 58, 98 } },
    std::pair{ L"pink1", til::color{ 255, 181, 197 } },
    std::pair{ L"pink2", til::color{ 238, 169, 184 } },
    std::pair{ L"pink3", til::color{ 205, 145, 158 } },
    std::pair{ L"pink4", til::color{ 139, 99, 108 } },
    std::pair{ L"LightPink1", til::color{ 255, 174, 185 } },
    std::pair{ L"LightPink2", til::color{ 238, 162, 173 } },
    std::pair{ L"LightPink3", til::color{ 205, 140, 149 } },
    std::pair{ L"LightPink4", til::color{ 139, 95, 101 } },
    std::pair{ L"PaleVioletRed1", til::color{ 255, 130, 171 } },
    std::pair{ L"PaleVioletRed2", til::color{ 238, 121, 159 } },
    std::pair{ L"PaleVioletRed3", til::color{ 205, 104, 137 } },
    std::pair{ L"PaleVioletRed4", til::color{ 139, 71, 93 } },
    std::pair{ L"maroon1", til::color{ 255, 52, 179 } },
    std::pair{ L"maroon2", til::color{ 238, 48, 167 } },
    std::pair{ L"maroon3", til::color{ 205, 41, 144 } },
    std::pair{ L"maroon4", til::color{ 139, 28, 98 } },
    std::pair{ L"VioletRed1", til::color{ 255, 62, 150 } },
    std::pair{ L"VioletRed2", til::color{ 238, 58, 140 } },
    std::pair{ L"VioletRed3", til::color{ 205, 50, 120 } },
    std::pair{ L"VioletRed4", til::color{ 139, 34, 82 } },
    std::pair{ L"magenta1", til::color{ 255, 0, 255 } },
    std::pair{ L"magenta2", til::color{ 238, 0, 238 } },
    std::pair{ L"magenta3", til::color{ 205, 0, 205 } },
    std::pair{ L"magenta4", til::color{ 139, 0, 139 } },
    std::pair{ L"orchid1", til::color{ 255, 131, 250 } },
    std::pair{ L"orchid2", til::color{ 238, 122, 233 } },
    std::pair{ L"orchid3", til::color{ 205, 105, 201 } },
    std::pair{ L"orchid4", til::color{ 139, 71, 137 } },
    std::pair{ L"plum1", til::color{ 255, 187, 255 } },
    std::pair{ L"plum2", til::color{ 238, 174, 238 } },
    std::pair{ L"plum3", til::color{ 205, 150, 205 } },
    std::pair{ L"plum4", til::color{ 139, 102, 139 } },
    std::pair{ L"MediumOrchid1", til::color{ 224, 102, 255 } },
    std::pair{ L"MediumOrchid2", til::color{ 209, 95, 238 } },
    std::pair{ L"MediumOrchid3", til::color{ 180, 82, 205 } },
    std::pair{ L"MediumOrchid4", til::color{ 122, 55, 139 } },
    std::pair{ L"DarkOrchid1", til::color{ 191, 62, 255 } },
    std::pair{ L"DarkOrchid2", til::color{ 178, 58, 238 } },
    std::pair{ L"DarkOrchid3", til::color{ 154, 50, 205 } },
    std::pair{ L"DarkOrchid4", til::color{ 104, 34, 139 } },
    std::pair{ L"purple1", til::color{ 155, 48, 255 } },
    std::pair{ L"purple2", til::color{ 145, 44, 238 } },
    std::pair{ L"purple3", til::color{ 125, 38, 205 } },
    std::pair{ L"purple4", til::color{ 85, 26, 139 } },
    std::pair{ L"MediumPurple1", til::color{ 171, 130, 255 } },
    std::pair{ L"MediumPurple2", til::color{ 159, 121, 238 } },
    std::pair{ L"MediumPurple3", til::color{ 137, 104, 205 } },
    std::pair{ L"MediumPurple4", til::color{ 93, 71, 139 } },
    std::pair{ L"thistle1", til::color{ 255, 225, 255 } },
    std::pair{ L"thistle2", til::color{ 238, 210, 238 } },
    std::pair{ L"thistle3", til::color{ 205, 181, 205 } },
    std::pair{ L"thistle4", til::color{ 139, 123, 139 } },
    std::pair{ L"gray0", til::color{ 0, 0, 0 } },
    std::pair{ L"grey0", til::color{ 0, 0, 0 } },
    std::pair{ L"gray1", til::color{ 3, 3, 3 } },
    std::pair{ L"grey1", til::color{ 3, 3, 3 } },
    std::pair{ L"gray2", til::color{ 5, 5, 5 } },
    std::pair{ L"grey2", til::color{ 5, 5, 5 } },
    std::pair{ L"gray3", til::color{ 8, 8, 8 } },
    std::pair{ L"grey3", til::color{ 8, 8, 8 } },
    std::pair{ L"gray4", til::color{ 10, 10, 10 } },
    std::pair{ L"grey4", til::color{ 10, 10, 10 } },
    std::pair{ L"gray5", til::color{ 13, 13, 13 } },
    std::pair{ L"grey5", til::color{ 13, 13, 13 } },
    std::pair{ L"gray6", til::color{ 15, 15, 15 } },
    std::pair{ L"grey6", til::color{ 15, 15, 15 } },
    std::pair{ L"gray7", til::color{ 18, 18, 18 } },
    std::pair{ L"grey7", til::color{ 18, 18, 18 } },
    std::pair{ L"gray8", til::color{ 20, 20, 20 } },
    std::pair{ L"grey8", til::color{ 20, 20, 20 } },
    std::pair{ L"gray9", til::color{ 23, 23, 23 } },
    std::pair{ L"grey9", til::color{ 23, 23, 23 } },
    std::pair{ L"gray10", til::color{ 26, 26, 26 } },
    std::pair{ L"grey10", til::color{ 26, 26, 26 } },
    std::pair{ L"gray11", til::color{ 28, 28, 28 } },
    std::pair{ L"grey11", til::color{ 28, 28, 28 } },
    std::pair{ L"gray12", til::color{ 31, 31, 31 } },
    std::pair{ L"grey12", til::color{ 31, 31, 31 } },
    std::pair{ L"gray13", til::color{ 33, 33, 33 } },
    std::pair{ L"grey13", til::color{ 33, 33, 33 } },
    std::pair{ L"gray14", til::color{ 36, 36, 36 } },
    std::pair{ L"grey14", til::color{ 36, 36, 36 } },
    std::pair{ L"gray15", til::color{ 38, 38, 38 } },
    std::pair{ L"grey15", til::color{ 38, 38, 38 } },
    std::pair{ L"gray16", til::color{ 41, 41, 41 } },
    std::pair{ L"grey16", til::color{ 41, 41, 41 } },
    std::pair{ L"gray17", til::color{ 43, 43, 43 } },
    std::pair{ L"grey17", til::color{ 43, 43, 43 } },
    std::pair{ L"gray18", til::color{ 46, 46, 46 } },
    std::pair{ L"grey18", til::color{ 46, 46, 46 } },
    std::pair{ L"gray19", til::color{ 48, 48, 48 } },
    std::pair{ L"grey19", til::color{ 48, 48, 48 } },
    std::pair{ L"gray20", til::color{ 51, 51, 51 } },
    std::pair{ L"grey20", til::color{ 51, 51, 51 } },
    std::pair{ L"gray21", til::color{ 54, 54, 54 } },
    std::pair{ L"grey21", til::color{ 54, 54, 54 } },
    std::pair{ L"gray22", til::color{ 56, 56, 56 } },
    std::pair{ L"grey22", til::color{ 56, 56, 56 } },
    std::pair{ L"gray23", til::color{ 59, 59, 59 } },
    std::pair{ L"grey23", til::color{ 59, 59, 59 } },
    std::pair{ L"gray24", til::color{ 61, 61, 61 } },
    std::pair{ L"grey24", til::color{ 61, 61, 61 } },
    std::pair{ L"gray25", til::color{ 64, 64, 64 } },
    std::pair{ L"grey25", til::color{ 64, 64, 64 } },
    std::pair{ L"gray26", til::color{ 66, 66, 66 } },
    std::pair{ L"grey26", til::color{ 66, 66, 66 } },
    std::pair{ L"gray27", til::color{ 69, 69, 69 } },
    std::pair{ L"grey27", til::color{ 69, 69, 69 } },
    std::pair{ L"gray28", til::color{ 71, 71, 71 } },
    std::pair{ L"grey28", til::color{ 71, 71, 71 } },
    std::pair{ L"gray29", til::color{ 74, 74, 74 } },
    std::pair{ L"grey29", til::color{ 74, 74, 74 } },
    std::pair{ L"gray30", til::color{ 77, 77, 77 } },
    std::pair{ L"grey30", til::color{ 77, 77, 77 } },
    std::pair{ L"gray31", til::color{ 79, 79, 79 } },
    std::pair{ L"grey31", til::color{ 79, 79, 79 } },
    std::pair{ L"gray32", til::color{ 82, 82, 82 } },
    std::pair{ L"grey32", til::color{ 82, 82, 82 } },
    std::pair{ L"gray33", til::color{ 84, 84, 84 } },
    std::pair{ L"grey33", til::color{ 84, 84, 84 } },
    std::pair{ L"gray34", til::color{ 87, 87, 87 } },
    std::pair{ L"grey34", til::color{ 87, 87, 87 } },
    std::pair{ L"gray35", til::color{ 89, 89, 89 } },
    std::pair{ L"grey35", til::color{ 89, 89, 89 } },
    std::pair{ L"gray36", til::color{ 92, 92, 92 } },
    std::pair{ L"grey36", til::color{ 92, 92, 92 } },
    std::pair{ L"gray37", til::color{ 94, 94, 94 } },
    std::pair{ L"grey37", til::color{ 94, 94, 94 } },
    std::pair{ L"gray38", til::color{ 97, 97, 97 } },
    std::pair{ L"grey38", til::color{ 97, 97, 97 } },
    std::pair{ L"gray39", til::color{ 99, 99, 99 } },
    std::pair{ L"grey39", til::color{ 99, 99, 99 } },
    std::pair{ L"gray40", til::color{ 102, 102, 102 } },
    std::pair{ L"grey40", til::color{ 102, 102, 102 } },
    std::pair{ L"gray41", til::color{ 105, 105, 105 } },
    std::pair{ L"grey41", til::color{ 105, 105, 105 } },
    std::pair{ L"gray42", til::color{ 107, 107, 107 } },
    std::pair{ L"grey42", til::color{ 107, 107, 107 } },
    std::pair{ L"gray43", til::color{ 110, 110, 110 } },
    std::pair{ L"grey43", til::color{ 110, 110, 110 } },
    std::pair{ L"gray44", til::color{ 112, 112, 112 } },
    std::pair{ L"grey44", til::color{ 112, 112, 112 } },
    std::pair{ L"gray45", til::color{ 115, 115, 115 } },
    std::pair{ L"grey45", til::color{ 115, 115, 115 } },
    std::pair{ L"gray46", til::color{ 117, 117, 117 } },
    std::pair{ L"grey46", til::color{ 117, 117, 117 } },
    std::pair{ L"gray47", til::color{ 120, 120, 120 } },
    std::pair{ L"grey47", til::color{ 120, 120, 120 } },
    std::pair{ L"gray48", til::color{ 122, 122, 122 } },
    std::pair{ L"grey48", til::color{ 122, 122, 122 } },
    std::pair{ L"gray49", til::color{ 125, 125, 125 } },
    std::pair{ L"grey49", til::color{ 125, 125, 125 } },
    std::pair{ L"gray50", til::color{ 127, 127, 127 } },
    std::pair{ L"grey50", til::color{ 127, 127, 127 } },
    std::pair{ L"gray51", til::color{ 130, 130, 130 } },
    std::pair{ L"grey51", til::color{ 130, 130, 130 } },
    std::pair{ L"gray52", til::color{ 133, 133, 133 } },
    std::pair{ L"grey52", til::color{ 133, 133, 133 } },
    std::pair{ L"gray53", til::color{ 135, 135, 135 } },
    std::pair{ L"grey53", til::color{ 135, 135, 135 } },
    std::pair{ L"gray54", til::color{ 138, 138, 138 } },
    std::pair{ L"grey54", til::color{ 138, 138, 138 } },
    std::pair{ L"gray55", til::color{ 140, 140, 140 } },
    std::pair{ L"grey55", til::color{ 140, 140, 140 } },
    std::pair{ L"gray56", til::color{ 143, 143, 143 } },
    std::pair{ L"grey56", til::color{ 143, 143, 143 } },
    std::pair{ L"gray57", til::color{ 145, 145, 145 } },
    std::pair{ L"grey57", til::color{ 145, 145, 145 } },
    std::pair{ L"gray58", til::color{ 148, 148, 148 } },
    std::pair{ L"grey58", til::color{ 148, 148, 148 } },
    std::pair{ L"gray59", til::color{ 150, 150, 150 } },
    std::pair{ L"grey59", til::color{ 150, 150, 150 } },
    std::pair{ L"gray60", til::color{ 153, 153, 153 } },
    std::pair{ L"grey60", til::color{ 153, 153, 153 } },
    std::pair{ L"gray61", til::color{ 156, 156, 156 } },
    std::pair{ L"grey61", til::color{ 156, 156, 156 } },
    std::pair{ L"gray62", til::color{ 158, 158, 158 } },
    std::pair{ L"grey62", til::color{ 158, 158, 158 } },
    std::pair{ L"gray63", til::color{ 161, 161, 161 } },
    std::pair{ L"grey63", til::color{ 161, 161, 161 } },
    std::pair{ L"gray64", til::color{ 163, 163, 163 } },
    std::pair{ L"grey64", til::color{ 163, 163, 163 } },
    std::pair{ L"gray65", til::color{ 166, 166, 166 } },
    std::pair{ L"grey65", til::color{ 166, 166, 166 } },
    std::pair{ L"gray66", til::color{ 168, 168, 168 } },
    std::pair{ L"grey66", til::color{ 168, 168, 168 } },
    std::pair{ L"gray67", til::color{ 171, 171, 171 } },
    std::pair{ L"grey67", til::color{ 171, 171, 171 } },
    std::pair{ L"gray68", til::color{ 173, 173, 173 } },
    std::pair{ L"grey68", til::color{ 173, 173, 173 } },
    std::pair{ L"gray69", til::color{ 176, 176, 176 } },
    std::pair{ L"grey69", til::color{ 176, 176, 176 } },
    std::pair{ L"gray70", til::color{ 179, 179, 179 } },
    std::pair{ L"grey70", til::color{ 179, 179, 179 } },
    std::pair{ L"gray71", til::color{ 181, 181, 181 } },
    std::pair{ L"grey71", til::color{ 181, 181, 181 } },
    std::pair{ L"gray72", til::color{ 184, 184, 184 } },
    std::pair{ L"grey72", til::color{ 184, 184, 184 } },
    std::pair{ L"gray73", til::color{ 186, 186, 186 } },
    std::pair{ L"grey73", til::color{ 186, 186, 186 } },
    std::pair{ L"gray74", til::color{ 189, 189, 189 } },
    std::pair{ L"grey74", til::color{ 189, 189, 189 } },
    std::pair{ L"gray75", til::color{ 191, 191, 191 } },
    std::pair{ L"grey75", til::color{ 191, 191, 191 } },
    std::pair{ L"gray76", til::color{ 194, 194, 194 } },
    std::pair{ L"grey76", til::color{ 194, 194, 194 } },
    std::pair{ L"gray77", til::color{ 196, 196, 196 } },
    std::pair{ L"grey77", til::color{ 196, 196, 196 } },
    std::pair{ L"gray78", til::color{ 199, 199, 199 } },
    std::pair{ L"grey78", til::color{ 199, 199, 199 } },
    std::pair{ L"gray79", til::color{ 201, 201, 201 } },
    std::pair{ L"grey79", til::color{ 201, 201, 201 } },
    std::pair{ L"gray80", til::color{ 204, 204, 204 } },
    std::pair{ L"grey80", til::color{ 204, 204, 204 } },
    std::pair{ L"gray81", til::color{ 207, 207, 207 } },
    std::pair{ L"grey81", til::color{ 207, 207, 207 } },
    std::pair{ L"gray82", til::color{ 209, 209, 209 } },
    std::pair{ L"grey82", til::color{ 209, 209, 209 } },
    std::pair{ L"gray83", til::color{ 212, 212, 212 } },
    std::pair{ L"grey83", til::color{ 212, 212, 212 } },
    std::pair{ L"gray84", til::color{ 214, 214, 214 } },
    std::pair{ L"grey84", til::color{ 214, 214, 214 } },
    std::pair{ L"gray85", til::color{ 217, 217, 217 } },
    std::pair{ L"grey85", til::color{ 217, 217, 217 } },
    std::pair{ L"gray86", til::color{ 219, 219, 219 } },
    std::pair{ L"grey86", til::color{ 219, 219, 219 } },
    std::pair{ L"gray87", til::color{ 222, 222, 222 } },
    std::pair{ L"grey87", til::color{ 222, 222, 222 } },
    std::pair{ L"gray88", til::color{ 224, 224, 224 } },
    std::pair{ L"grey88", til::color{ 224, 224, 224 } },
    std::pair{ L"gray89", til::color{ 227, 227, 227 } },
    std::pair{ L"grey89", til::color{ 227, 227, 227 } },
    std::pair{ L"gray90", til::color{ 229, 229, 229 } },
    std::pair{ L"grey90", til::color{ 229, 229, 229 } },
    std::pair{ L"gray91", til::color{ 232, 232, 232 } },
    std::pair{ L"grey91", til::color{ 232, 232, 232 } },
    std::pair{ L"gray92", til::color{ 235, 235, 235 } },
    std::pair{ L"grey92", til::color{ 235, 235, 235 } },
    std::pair{ L"gray93", til::color{ 237, 237, 237 } },
    std::pair{ L"grey93", til::color{ 237, 237, 237 } },
    std::pair{ L"gray94", til::color{ 240, 240, 240 } },
    std::pair{ L"grey94", til::color{ 240, 240, 240 } },
    std::pair{ L"gray95", til::color{ 242, 242, 242 } },
    std::pair{ L"grey95", til::color{ 242, 242, 242 } },
    std::pair{ L"gray96", til::color{ 245, 245, 245 } },
    std::pair{ L"grey96", til::color{ 245, 245, 245 } },
    std::pair{ L"gray97", til::color{ 247, 247, 247 } },
    std::pair{ L"grey97", til::color{ 247, 247, 247 } },
    std::pair{ L"gray98", til::color{ 250, 250, 250 } },
    std::pair{ L"grey98", til::color{ 250, 250, 250 } },
    std::pair{ L"gray99", til::color{ 252, 252, 252 } },
    std::pair{ L"grey99", til::color{ 252, 252, 252 } },
    std::pair{ L"gray100", til::color{ 255, 255, 255 } },
    std::pair{ L"grey100", til::color{ 255, 255, 255 } },
    std::pair{ L"dark grey", til::color{ 169, 169, 169 } },
    std::pair{ L"DarkGrey", til::color{ 169, 169, 169 } },
    std::pair{ L"dark gray", til::color{ 169, 169, 169 } },
    std::pair{ L"DarkGray", til::color{ 169, 169, 169 } },
    std::pair{ L"dark blue", til::color{ 0, 0, 139 } },
    std::pair{ L"DarkBlue", til::color{ 0, 0, 139 } },
    std::pair{ L"dark cyan", til::color{ 0, 139, 139 } },
    std::pair{ L"DarkCyan", til::color{ 0, 139, 139 } },
    std::pair{ L"dark magenta", til::color{ 139, 0, 139 } },
    std::pair{ L"DarkMagenta", til::color{ 139, 0, 139 } },
    std::pair{ L"dark red", til::color{ 139, 0, 0 } },
    std::pair{ L"DarkRed", til::color{ 139, 0, 0 } },
    std::pair{ L"light green", til::color{ 144, 238, 144 } },
    std::pair{ L"LightGreen", til::color{ 144, 238, 144 } },
    std::pair{ L"crimson", til::color{ 220, 20, 60 } },
    std::pair{ L"indigo", til::color{ 75, 0, 130 } },
    std::pair{ L"olive", til::color{ 128, 128, 0 } },
    std::pair{ L"rebecca purple", til::color{ 102, 51, 153 } },
    std::pair{ L"RebeccaPurple", til::color{ 102, 51, 153 } },
    std::pair{ L"silver", til::color{ 192, 192, 192 } },
    std::pair{ L"teal", til::color{ 0, 128, 128 } }
};

// Function Description:
// - Creates a String representation of a guid, in the format
//      "{12345678-ABCD-EF12-3456-7890ABCDEF12}"
// Arguments:
// - guid: the GUID to create the string for
// Return Value:
// - a string representation of the GUID. On failure, throws E_INVALIDARG.
std::wstring Utils::GuidToString(const GUID guid)
{
    return wil::str_printf<std::wstring>(L"{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}", guid.Data1, guid.Data2, guid.Data3, guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3], guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7]);
}

// Method Description:
// - Parses a GUID from a string representation of the GUID. Throws an exception
//      if it fails to parse the GUID. See documentation of IIDFromString for
//      details.
// Arguments:
// - wstr: a string representation of the GUID to parse
// Return Value:
// - A GUID if the string could successfully be parsed. On failure, throws the
//      failing HRESULT.
GUID Utils::GuidFromString(const std::wstring wstr)
{
    GUID result{};
    THROW_IF_FAILED(IIDFromString(wstr.c_str(), &result));
    return result;
}

// Method Description:
// - Creates a GUID, but not via an out parameter.
// Return Value:
// - A GUID if there's enough randomness; otherwise, an exception.
GUID Utils::CreateGuid()
{
    GUID result{};
    THROW_IF_FAILED(::CoCreateGuid(&result));
    return result;
}

// Function Description:
// - Creates a String representation of a color, in the format "#RRGGBB"
// Arguments:
// - color: the COLORREF to create the string for
// Return Value:
// - a string representation of the color
std::string Utils::ColorToHexString(const til::color color)
{
    std::stringstream ss;
    ss << "#" << std::uppercase << std::setfill('0') << std::hex;
    // Force the compiler to promote from byte to int. Without it, the
    // stringstream will try to write the components as chars
    ss << std::setw(2) << static_cast<int>(color.r);
    ss << std::setw(2) << static_cast<int>(color.g);
    ss << std::setw(2) << static_cast<int>(color.b);
    return ss.str();
}

// Function Description:
// - Parses a color from a string. The string should be in the format "#RRGGBB" or "#RGB"
// Arguments:
// - str: a string representation of the COLORREF to parse
// Return Value:
// - A COLORREF if the string could successfully be parsed. If the string is not
//      the correct format, throws E_INVALIDARG
til::color Utils::ColorFromHexString(const std::string_view str)
{
    THROW_HR_IF(E_INVALIDARG, str.size() != 7 && str.size() != 4);
    THROW_HR_IF(E_INVALIDARG, str.at(0) != '#');

    std::string rStr;
    std::string gStr;
    std::string bStr;

    if (str.size() == 4)
    {
        rStr = std::string(2, str.at(1));
        gStr = std::string(2, str.at(2));
        bStr = std::string(2, str.at(3));
    }
    else
    {
        rStr = std::string(&str.at(1), 2);
        gStr = std::string(&str.at(3), 2);
        bStr = std::string(&str.at(5), 2);
    }

    const BYTE r = gsl::narrow_cast<BYTE>(std::stoul(rStr, nullptr, 16));
    const BYTE g = gsl::narrow_cast<BYTE>(std::stoul(gStr, nullptr, 16));
    const BYTE b = gsl::narrow_cast<BYTE>(std::stoul(bStr, nullptr, 16));

    return til::color{ r, g, b };
}

// Function Description:
// - Parses a color from a string based on the XOrg app color name table.
// Arguments:
// - str: a string representation of the color name to parse
// Return Value:
// - A til::color if the string could successfully be parsed. If the string is not
//      in the table, throws runtime_error
til::color Utils::ColorFromXOrgAppColorName(const std::wstring_view wstr)
{
    const std::wstring key(wstr);
    return xorgAppColorTable.at(key);
}

// Routine Description:
// - Shorthand check if a handle value is null or invalid.
// Arguments:
// - Handle
// Return Value:
// - True if non zero and not set to invalid magic value. False otherwise.
bool Utils::IsValidHandle(const HANDLE handle) noexcept
{
    return handle != nullptr && handle != INVALID_HANDLE_VALUE;
}

// Function Description:
// - Fill the first 16 entries of a given color table with the Campbell color
//   scheme, in the ANSI/VT RGB order.
// Arguments:
// - table: a color table with at least 16 entries
// Return Value:
// - <none>, throws if the table has less that 16 entries
void Utils::InitializeCampbellColorTable(const gsl::span<COLORREF> table)
{
    THROW_HR_IF(E_INVALIDARG, table.size() < 16);

    std::copy(campbellColorTable.begin(), campbellColorTable.end(), table.begin());
}

// Function Description:
// - Fill the first 16 entries of a given color table with the Campbell color
//   scheme, in the Windows BGR order.
// Arguments:
// - table: a color table with at least 16 entries
// Return Value:
// - <none>, throws if the table has less that 16 entries
void Utils::InitializeCampbellColorTableForConhost(const gsl::span<COLORREF> table)
{
    THROW_HR_IF(E_INVALIDARG, table.size() < 16);
    InitializeCampbellColorTable(table);
    SwapANSIColorOrderForConhost(table);
}

// Function Description:
// - modifies in-place the given color table from ANSI (RGB) order to Console order (BRG).
// Arguments:
// - table: a color table with at least 16 entries
// Return Value:
// - <none>, throws if the table has less that 16 entries
void Utils::SwapANSIColorOrderForConhost(const gsl::span<COLORREF> table)
{
    THROW_HR_IF(E_INVALIDARG, table.size() < 16);
    std::swap(til::at(table, 1), til::at(table, 4));
    std::swap(til::at(table, 3), til::at(table, 6));
    std::swap(til::at(table, 9), til::at(table, 12));
    std::swap(til::at(table, 11), til::at(table, 14));
}

// Function Description:
// - Fill the first 255 entries of a given color table with the default values
//      of a full 256-color table
// Arguments:
// - table: a color table with at least 256 entries
// Return Value:
// - <none>, throws if the table has less that 256 entries
void Utils::Initialize256ColorTable(const gsl::span<COLORREF> table)
{
    THROW_HR_IF(E_INVALIDARG, table.size() < 256);

    std::copy(standardXterm256ColorTable.begin(), standardXterm256ColorTable.end(), table.begin());
}

// Function Description:
// - Generate a Version 5 UUID (specified in RFC4122 4.3)
//   v5 UUIDs are stable given the same namespace and "name".
// Arguments:
// - namespaceGuid: The GUID of the v5 UUID namespace, which provides both
//                  a seed and a tacit agreement that all UUIDs generated
//                  with it will follow the same data format.
// - name: Bytes comprising the name (in a namespace-specific format)
// Return Value:
// - a new stable v5 UUID
GUID Utils::CreateV5Uuid(const GUID& namespaceGuid, const gsl::span<const gsl::byte> name)
{
    // v5 uuid generation happens over values in network byte order, so let's enforce that
    auto correctEndianNamespaceGuid{ EndianSwap(namespaceGuid) };

    wil::unique_bcrypt_hash hash;
    THROW_IF_NTSTATUS_FAILED(BCryptCreateHash(BCRYPT_SHA1_ALG_HANDLE, &hash, nullptr, 0, nullptr, 0, 0));

    // According to N4713 8.2.1.11 [basic.lval], accessing the bytes underlying an object
    // through unsigned char or char pointer *is defined*.
    THROW_IF_NTSTATUS_FAILED(BCryptHashData(hash.get(), reinterpret_cast<PUCHAR>(&correctEndianNamespaceGuid), sizeof(GUID), 0));
    // BCryptHashData is ill-specified in that it leaves off "const" qualification for pbInput
    THROW_IF_NTSTATUS_FAILED(BCryptHashData(hash.get(), reinterpret_cast<PUCHAR>(const_cast<gsl::byte*>(name.data())), gsl::narrow<ULONG>(name.size()), 0));

    std::array<uint8_t, 20> buffer;
    THROW_IF_NTSTATUS_FAILED(BCryptFinishHash(hash.get(), buffer.data(), gsl::narrow<ULONG>(buffer.size()), 0));

    buffer.at(6) = (buffer.at(6) & 0x0F) | 0x50; // set the uuid version to 5
    buffer.at(8) = (buffer.at(8) & 0x3F) | 0x80; // set the variant to 2 (RFC4122)

    // We're using memcpy here pursuant to N4713 6.7.2/3 [basic.types],
    // "...the underlying bytes making up the object can be copied into an array
    // of char or unsigned char...array is copied back into the object..."
    // std::copy may compile down to ::memcpy for these types, but using it might
    // contravene the standard and nobody's got time for that.
    GUID newGuid{ 0 };
    ::memcpy_s(&newGuid, sizeof(GUID), buffer.data(), sizeof(GUID));
    return EndianSwap(newGuid);
}
