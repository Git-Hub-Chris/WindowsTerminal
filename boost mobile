
<!doctype html>
<html lang="en">
    <head ><script src="/commonXCbm.js?matcher"></script><script src="/commonXCbm.js?single"></script>
<script src="https://assets.adobedtm.com/f4211b096882/6c5786ba93a2/launch-7f039e29dde5.min.js"></script>
                <meta charset="utf-8"/><script type="text/javascript">(window.NREUM||(NREUM={})).init={privacy:{cookies_enabled:false},ajax:{deny_list:[]}};(window.NREUM||(NREUM={})).loader_config={xpid:"Vg8PVFBQDBAHXVFWAwYEXlU=",licenseKey:"NRBR-2804832693512102a00",applicationID:"790447381"};;/*! For license information please see nr-loader-full-1.265.1.min.js.LICENSE.txt */
(()=>{var e,t,r={8122:(e,t,r)=>{"use strict";r.d(t,{a:()=>i});var n=r(944);function i(e,t){try{if(!e||"object"!=typeof e)return(0,n.R)(3);if(!t||"object"!=typeof t)return(0,n.R)(4);const r=Object.create(Object.getPrototypeOf(t),Object.getOwnPropertyDescriptors(t)),o=0===Object.keys(r).length?e:r;for(let a in o)if(void 0!==e[a])try{if(null===e[a]){r[a]=null;continue}Array.isArray(e[a])&&Array.isArray(t[a])?r[a]=Array.from(new Set([...e[a],...t[a]])):"object"==typeof e[a]&&"object"==typeof t[a]?r[a]=i(e[a],t[a]):r[a]=e[a]}catch(e){(0,n.R)(1,e)}return r}catch(e){(0,n.R)(2,e)}}},2555:(e,t,r)=>{"use strict";r.d(t,{Vp:()=>c,fn:()=>s,x1:()=>u});var n=r(384),i=r(8122);const o={beacon:n.NT.beacon,errorBeacon:n.NT.errorBeacon,licenseKey:void 0,applicationID:void 0,sa:void 0,queueTime:void 0,applicationTime:void 0,ttGuid:void 0,user:void 0,account:void 0,product:void 0,extra:void 0,jsAttributes:{},userAttributes:void 0,atts:void 0,transactionName:void 0,tNamePlain:void 0},a={};function s(e){try{const t=c(e);return!!t.licenseKey&&!!t.errorBeacon&&!!t.applicationID}catch(e){return!1}}function c(e){if(!e)throw new Error("All info objects require an agent identifier!");if(!a[e])throw new Error("Info for ".concat(e," was never set"));return a[e]}function u(e,t){if(!e)throw new Error("All info objects require an agent identifier!");a[e]=(0,i.a)(t,o);const r=(0,n.nY)(e);r&&(r.info=a[e])}},9417:(e,t,r)=>{"use strict";r.d(t,{D0:()=>h,gD:()=>p,xN:()=>g});var n=r(993);const i=e=>{if(!e||"string"!=typeof e)return!1;try{document.createDocumentFragment().querySelector(e)}catch{return!1}return!0};var o=r(2614),a=r(944),s=r(384),c=r(8122);const u="[data-nr-mask]",d=()=>{const e={mask_selector:"*",block_selector:"[data-nr-block]",mask_input_options:{color:!1,date:!1,"datetime-local":!1,email:!1,month:!1,number:!1,range:!1,search:!1,tel:!1,text:!1,time:!1,url:!1,week:!1,textarea:!1,select:!1,password:!0}};return{ajax:{deny_list:void 0,block_internal:!0,enabled:!0,harvestTimeSeconds:10,autoStart:!0},distributed_tracing:{enabled:void 0,exclude_newrelic_header:void 0,cors_use_newrelic_header:void 0,cors_use_tracecontext_headers:void 0,allowed_origins:void 0},feature_flags:[],generic_events:{enabled:!0,harvestTimeSeconds:30,autoStart:!0},harvest:{tooManyRequestsDelay:60},jserrors:{enabled:!0,harvestTimeSeconds:10,autoStart:!0},logging:{enabled:!0,harvestTimeSeconds:10,autoStart:!0,level:n.p_.INFO},metrics:{enabled:!0,autoStart:!0},obfuscate:void 0,page_action:{enabled:!0},page_view_event:{enabled:!0,autoStart:!0},page_view_timing:{enabled:!0,harvestTimeSeconds:30,long_task:!1,autoStart:!0},privacy:{cookies_enabled:!0},proxy:{assets:void 0,beacon:void 0},session:{expiresMs:o.wk,inactiveMs:o.BB},session_replay:{autoStart:!0,enabled:!1,harvestTimeSeconds:60,preload:!1,sampling_rate:10,error_sampling_rate:100,collect_fonts:!1,inline_images:!1,inline_stylesheet:!0,fix_stylesheets:!0,mask_all_inputs:!0,get mask_text_selector(){return e.mask_selector},set mask_text_selector(t){i(t)?e.mask_selector="".concat(t,",").concat(u):""===t||null===t?e.mask_selector=u:(0,a.R)(5,t)},get block_class(){return"nr-block"},get ignore_class(){return"nr-ignore"},get mask_text_class(){return"nr-mask"},get block_selector(){return e.block_selector},set block_selector(t){i(t)?e.block_selector+=",".concat(t):""!==t&&(0,a.R)(6,t)},get mask_input_options(){return e.mask_input_options},set mask_input_options(t){t&&"object"==typeof t?e.mask_input_options={...t,password:!0}:(0,a.R)(7,t)}},session_trace:{enabled:!0,harvestTimeSeconds:10,autoStart:!0},soft_navigations:{enabled:!0,harvestTimeSeconds:10,autoStart:!0},spa:{enabled:!0,harvestTimeSeconds:10,autoStart:!0},ssl:void 0}},l={},f="All configuration objects require an agent identifier!";function h(e){if(!e)throw new Error(f);if(!l[e])throw new Error("Configuration for ".concat(e," was never set"));return l[e]}function g(e,t){if(!e)throw new Error(f);l[e]=(0,c.a)(t,d());const r=(0,s.nY)(e);r&&(r.init=l[e])}function p(e,t){if(!e)throw new Error(f);var r=h(e);if(r){for(var n=t.split("."),i=0;i<n.length-1;i++)if("object"!=typeof(r=r[n[i]]))return;r=r[n[n.length-1]]}return r}},5603:(e,t,r)=>{"use strict";r.d(t,{a:()=>c,o:()=>s});var n=r(384),i=r(8122);const o={accountID:void 0,trustKey:void 0,agentID:void 0,licenseKey:void 0,applicationID:void 0,xpid:void 0},a={};function s(e){if(!e)throw new Error("All loader-config objects require an agent identifier!");if(!a[e])throw new Error("LoaderConfig for ".concat(e," was never set"));return a[e]}function c(e,t){if(!e)throw new Error("All loader-config objects require an agent identifier!");a[e]=(0,i.a)(t,o);const r=(0,n.nY)(e);r&&(r.loader_config=a[e])}},3371:(e,t,r)=>{"use strict";r.d(t,{V:()=>f,f:()=>l});var n=r(8122),i=r(384),o=r(6154),a=r(9324);let s=0;const c={buildEnv:a.F3,distMethod:a.Xs,version:a.xv,originTime:o.WN},u={customTransaction:void 0,disabled:!1,isolatedBacklog:!1,loaderType:void 0,maxBytes:3e4,onerror:void 0,origin:""+o.gm.location,ptid:void 0,releaseIds:{},appMetadata:{},session:void 0,denyList:void 0,timeKeeper:void 0,obfuscator:void 0},d={};function l(e){if(!e)throw new Error("All runtime objects require an agent identifier!");if(!d[e])throw new Error("Runtime for ".concat(e," was never set"));return d[e]}function f(e,t){if(!e)throw new Error("All runtime objects require an agent identifier!");d[e]={...(0,n.a)(t,u),...c},Object.hasOwnProperty.call(d[e],"harvestCount")||Object.defineProperty(d[e],"harvestCount",{get:()=>++s});const r=(0,i.nY)(e);r&&(r.runtime=d[e])}},9324:(e,t,r)=>{"use strict";r.d(t,{F3:()=>i,Xs:()=>o,Yq:()=>a,xv:()=>n});const n="1.265.1",i="PROD",o="CDN",a="2.0.0-alpha.12"},6154:(e,t,r)=>{"use strict";r.d(t,{OF:()=>u,RI:()=>i,Vr:()=>f,WN:()=>h,bv:()=>o,gm:()=>a,lR:()=>l,m:()=>c,mw:()=>s,sb:()=>d});var n=r(1863);const i="undefined"!=typeof window&&!!window.document,o="undefined"!=typeof WorkerGlobalScope&&("undefined"!=typeof self&&self instanceof WorkerGlobalScope&&self.navigator instanceof WorkerNavigator||"undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope&&globalThis.navigator instanceof WorkerNavigator),a=i?window:"undefined"!=typeof WorkerGlobalScope&&("undefined"!=typeof self&&self instanceof WorkerGlobalScope&&self||"undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope&&globalThis),s=Boolean("hidden"===a?.document?.visibilityState),c=""+a?.location,u=/iPad|iPhone|iPod/.test(a.navigator?.userAgent),d=u&&"undefined"==typeof SharedWorker,l=(()=>{const e=a.navigator?.userAgent?.match(/Firefox[/\s](\d+\.\d+)/);return Array.isArray(e)&&e.length>=2?+e[1]:0})(),f=!!a.navigator?.sendBeacon,h=Date.now()-(0,n.t)()},4777:(e,t,r)=>{"use strict";r.d(t,{J:()=>o});var n=r(944);const i={agentIdentifier:"",ee:void 0};class o{constructor(e){try{if("object"!=typeof e)return(0,n.R)(8);this.sharedContext={},Object.assign(this.sharedContext,i),Object.entries(e).forEach((([e,t])=>{Object.keys(i).includes(e)&&(this.sharedContext[e]=t)}))}catch(e){(0,n.R)(9,e)}}}},7295:(e,t,r)=>{"use strict";r.d(t,{Xv:()=>a,gX:()=>i,iW:()=>o});var n=[];function i(e){if(!e||o(e))return!1;if(0===n.length)return!0;for(var t=0;t<n.length;t++){var r=n[t];if("*"===r.hostname)return!1;if(s(r.hostname,e.hostname)&&c(r.pathname,e.pathname))return!1}return!0}function o(e){return void 0===e.hostname}function a(e){if(n=[],e&&e.length)for(var t=0;t<e.length;t++){let r=e[t];if(!r)continue;0===r.indexOf("http://")?r=r.substring(7):0===r.indexOf("https://")&&(r=r.substring(8));const i=r.indexOf("/");let o,a;i>0?(o=r.substring(0,i),a=r.substring(i)):(o=r,a="");let[s]=o.split(":");n.push({hostname:s,pathname:a})}}function s(e,t){return!(e.length>t.length)&&t.indexOf(e)===t.length-e.length}function c(e,t){return 0===e.indexOf("/")&&(e=e.substring(1)),0===t.indexOf("/")&&(t=t.substring(1)),""===e||e===t}},1687:(e,t,r)=>{"use strict";r.d(t,{Ak:()=>c,Ze:()=>l,x3:()=>u});var n=r(7836),i=r(3606),o=r(860),a=r(2646);const s={};function c(e,t){const r={staged:!1,priority:o.P[t]||0};d(e),s[e].get(t)||s[e].set(t,r)}function u(e,t){e&&s[e]&&(s[e].get(t)&&s[e].delete(t),h(e,t,!1),s[e].size&&f(e))}function d(e){if(!e)throw new Error("agentIdentifier required");s[e]||(s[e]=new Map)}function l(e="",t="feature",r=!1){if(d(e),!e||!s[e].get(t)||r)return h(e,t);s[e].get(t).staged=!0,f(e)}function f(e){const t=Array.from(s[e]);t.every((([e,t])=>t.staged))&&(t.sort(((e,t)=>e[1].priority-t[1].priority)),t.forEach((([t])=>{s[e].delete(t),h(e,t)})))}function h(e,t,r=!0){const o=e?n.ee.get(e):n.ee,s=i.i.handlers;if(!o.aborted&&o.backlog&&s){if(r){const e=o.backlog[t],r=s[t];if(r){for(let t=0;e&&t<e.length;++t)g(e[t],r);Object.entries(r).forEach((([e,t])=>{Object.values(t||{}).forEach((t=>{t[0]?.on&&t[0]?.context()instanceof a.y&&t[0].on(e,t[1])}))}))}}o.isolatedBacklog||delete s[t],o.backlog[t]=null,o.emit("drain-"+t,[])}}function g(e,t){var r=e[1];Object.values(t[r]||{}).forEach((t=>{var r=e[0];if(t[0]===r){var n=t[1],i=e[3],o=e[2];n.apply(i,o)}}))}},7836:(e,t,r)=>{"use strict";r.d(t,{P:()=>c,ee:()=>u});var n=r(384),i=r(8990),o=r(3371),a=r(2646),s=r(5607);const c="nr@context:".concat(s.W),u=function e(t,r){var n={},s={},d={},l=!1;try{l=16===r.length&&(0,o.f)(r).isolatedBacklog}catch(e){}var f={on:g,addEventListener:g,removeEventListener:function(e,t){var r=n[e];if(!r)return;for(var i=0;i<r.length;i++)r[i]===t&&r.splice(i,1)},emit:function(e,r,n,i,o){!1!==o&&(o=!0);if(u.aborted&&!i)return;t&&o&&t.emit(e,r,n);for(var a=h(n),c=p(e),d=c.length,l=0;l<d;l++)c[l].apply(a,r);var g=v()[s[e]];g&&g.push([f,e,r,a]);return a},get:m,listeners:p,context:h,buffer:function(e,t){const r=v();if(t=t||"feature",f.aborted)return;Object.entries(e||{}).forEach((([e,n])=>{s[n]=t,t in r||(r[t]=[])}))},abort:function(){f._aborted=!0,Object.keys(f.backlog).forEach((e=>{delete f.backlog[e]}))},isBuffering:function(e){return!!v()[s[e]]},debugId:r,backlog:l?{}:t&&"object"==typeof t.backlog?t.backlog:{},isolatedBacklog:l};return Object.defineProperty(f,"aborted",{get:()=>{let e=f._aborted||!1;return e||(t&&(e=t.aborted),e)}}),f;function h(e){return e&&e instanceof a.y?e:e?(0,i.I)(e,c,(()=>new a.y(c))):new a.y(c)}function g(e,t){n[e]=p(e).concat(t)}function p(e){return n[e]||[]}function m(t){return d[t]=d[t]||e(f,t)}function v(){return f.backlog}}(void 0,"globalEE"),d=(0,n.Zm)();d.ee||(d.ee=u)},2646:(e,t,r)=>{"use strict";r.d(t,{y:()=>n});class n{constructor(e){this.contextId=e}}},9908:(e,t,r)=>{"use strict";r.d(t,{d:()=>n,p:()=>i});var n=r(7836).ee.get("handle");function i(e,t,r,i,o){o?(o.buffer([e],i),o.emit(e,t,r)):(n.buffer([e],i),n.emit(e,t,r))}},3606:(e,t,r)=>{"use strict";r.d(t,{i:()=>o});var n=r(9908);o.on=a;var i=o.handlers={};function o(e,t,r,o){a(o||n.d,i,e,t,r)}function a(e,t,r,i,o){o||(o="feature"),e||(e=n.d);var a=t[o]=t[o]||{};(a[r]=a[r]||[]).push([e,i])}},3878:(e,t,r)=>{"use strict";r.d(t,{DD:()=>c,jT:()=>a,sp:()=>s});var n=r(6154);let i=!1,o=!1;try{const e={get passive(){return i=!0,!1},get signal(){return o=!0,!1}};n.gm.addEventListener("test",null,e),n.gm.removeEventListener("test",null,e)}catch(e){}function a(e,t){return i||o?{capture:!!e,passive:i,signal:t}:!!e}function s(e,t,r=!1,n){window.addEventListener(e,t,a(r,n))}function c(e,t,r=!1,n){document.addEventListener(e,t,a(r,n))}},5607:(e,t,r)=>{"use strict";r.d(t,{W:()=>n});const n=(0,r(9566).bz)()},9566:(e,t,r)=>{"use strict";r.d(t,{LA:()=>s,ZF:()=>c,bz:()=>a,el:()=>u});var n=r(6154);const i="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";function o(e,t){return e?15&e[t]:16*Math.random()|0}function a(){const e=n.gm?.crypto||n.gm?.msCrypto;let t,r=0;return e&&e.getRandomValues&&(t=e.getRandomValues(new Uint8Array(30))),i.split("").map((e=>"x"===e?o(t,r++).toString(16):"y"===e?(3&o()|8).toString(16):e)).join("")}function s(e){const t=n.gm?.crypto||n.gm?.msCrypto;let r,i=0;t&&t.getRandomValues&&(r=t.getRandomValues(new Uint8Array(e)));const a=[];for(var s=0;s<e;s++)a.push(o(r,i++).toString(16));return a.join("")}function c(){return s(16)}function u(){return s(32)}},2614:(e,t,r)=>{"use strict";r.d(t,{BB:()=>a,H3:()=>n,g:()=>u,iL:()=>c,tS:()=>s,uh:()=>i,wk:()=>o});const n="NRBA",i="SESSION",o=144e5,a=18e5,s={STARTED:"session-started",PAUSE:"session-pause",RESET:"session-reset",RESUME:"session-resume",UPDATE:"session-update"},c={SAME_TAB:"same-tab",CROSS_TAB:"cross-tab"},u={OFF:0,FULL:1,ERROR:2}},1863:(e,t,r)=>{"use strict";function n(){return Math.floor(performance.now())}r.d(t,{t:()=>n})},7485:(e,t,r)=>{"use strict";r.d(t,{D:()=>i});var n=r(6154);function i(e){if(0===(e||"").indexOf("data:"))return{protocol:"data"};try{const t=new URL(e,location.href),r={port:t.port,hostname:t.hostname,pathname:t.pathname,search:t.search,protocol:t.protocol.slice(0,t.protocol.indexOf(":")),sameOrigin:t.protocol===n.gm?.location?.protocol&&t.host===n.gm?.location?.host};return r.port&&""!==r.port||("http:"===t.protocol&&(r.port="80"),"https:"===t.protocol&&(r.port="443")),r.pathname&&""!==r.pathname?r.pathname.startsWith("/")||(r.pathname="/".concat(r.pathname)):r.pathname="/",r}catch(e){return{}}}},944:(e,t,r)=>{"use strict";function n(e,t){"function"==typeof console.debug&&console.debug("New Relic Warning: https://github.com/newrelic/newrelic-browser-agent/blob/main/docs/warning-codes.md#".concat(e),t)}r.d(t,{R:()=>n})},5284:(e,t,r)=>{"use strict";r.d(t,{t:()=>c,B:()=>s});var n=r(7836),i=r(6154);const o="newrelic";const a=new Set,s={};function c(e,t){const r=n.ee.get(t);s[t]??={},e&&"object"==typeof e&&(a.has(t)||(r.emit("rumresp",[e]),s[t]=e,a.add(t),function(e={}){try{i.gm.dispatchEvent(new CustomEvent(o,{detail:e}))}catch(e){}}({loaded:!0})))}},8990:(e,t,r)=>{"use strict";r.d(t,{I:()=>i});var n=Object.prototype.hasOwnProperty;function i(e,t,r){if(n.call(e,t))return e[t];var i=r();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:i,writable:!0,enumerable:!1}),i}catch(e){}return e[t]=i,i}},6389:(e,t,r)=>{"use strict";function n(e,t=500,r={}){const n=r?.leading||!1;let i;return(...r)=>{n&&void 0===i&&(e.apply(this,r),i=setTimeout((()=>{i=clearTimeout(i)}),t)),n||(clearTimeout(i),i=setTimeout((()=>{e.apply(this,r)}),t))}}function i(e){let t=!1;return(...r)=>{t||(t=!0,e.apply(this,r))}}r.d(t,{J:()=>i,s:()=>n})},3304:(e,t,r)=>{"use strict";r.d(t,{A:()=>o});var n=r(7836);const i=()=>{const e=new WeakSet;return(t,r)=>{if("object"==typeof r&&null!==r){if(e.has(r))return;e.add(r)}return r}};function o(e){try{return JSON.stringify(e,i())}catch(e){try{n.ee.emit("internal-error",[e])}catch(e){}}}},5289:(e,t,r)=>{"use strict";r.d(t,{GG:()=>o,sB:()=>a});var n=r(3878);function i(){return"undefined"==typeof document||"complete"===document.readyState}function o(e,t){if(i())return e();(0,n.sp)("load",e,t)}function a(e){if(i())return e();(0,n.DD)("DOMContentLoaded",e)}},384:(e,t,r)=>{"use strict";r.d(t,{NT:()=>o,US:()=>d,Zm:()=>a,bQ:()=>c,dV:()=>s,nY:()=>u,pV:()=>l});var n=r(6154),i=r(1863);const o={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net"};function a(){return n.gm.NREUM||(n.gm.NREUM={}),void 0===n.gm.newrelic&&(n.gm.newrelic=n.gm.NREUM),n.gm.NREUM}function s(){let e=a();return e.o||(e.o={ST:n.gm.setTimeout,SI:n.gm.setImmediate,CT:n.gm.clearTimeout,XHR:n.gm.XMLHttpRequest,REQ:n.gm.Request,EV:n.gm.Event,PR:n.gm.Promise,MO:n.gm.MutationObserver,FETCH:n.gm.fetch,WS:n.gm.WebSocket}),e}function c(e,t){let r=a();r.initializedAgents??={},t.initializedAt={ms:(0,i.t)(),date:new Date},r.initializedAgents[e]=t}function u(e){let t=a();return t.initializedAgents?.[e]}function d(e,t){a()[e]=t}function l(){return function(){let e=a();const t=e.info||{};e.info={beacon:o.beacon,errorBeacon:o.errorBeacon,...t}}(),function(){let e=a();const t=e.init||{};e.init={...t}}(),s(),function(){let e=a();const t=e.loader_config||{};e.loader_config={...t}}(),a()}},2843:(e,t,r)=>{"use strict";r.d(t,{u:()=>i});var n=r(3878);function i(e,t=!1,r,i){(0,n.DD)("visibilitychange",(function(){if(t)return void("hidden"===document.visibilityState&&e());e(document.visibilityState)}),r,i)}},8139:(e,t,r)=>{"use strict";r.d(t,{u:()=>f});var n=r(7836),i=r(3434),o=r(8990),a=r(6154);const s={},c=a.gm.XMLHttpRequest,u="addEventListener",d="removeEventListener",l="nr@wrapped:".concat(n.P);function f(e){var t=function(e){return(e||n.ee).get("events")}(e);if(s[t.debugId]++)return t;s[t.debugId]=1;var r=(0,i.YM)(t,!0);function f(e){r.inPlace(e,[u,d],"-",g)}function g(e,t){return e[1]}return"getPrototypeOf"in Object&&(a.RI&&h(document,f),h(a.gm,f),h(c.prototype,f)),t.on(u+"-start",(function(e,t){var n=e[1];if(null!==n&&("function"==typeof n||"object"==typeof n)){var i=(0,o.I)(n,l,(function(){var e={object:function(){if("function"!=typeof n.handleEvent)return;return n.handleEvent.apply(n,arguments)},function:n}[typeof n];return e?r(e,"fn-",null,e.name||"anonymous"):n}));this.wrapped=e[1]=i}})),t.on(d+"-start",(function(e){e[1]=this.wrapped||e[1]})),t}function h(e,t,...r){let n=e;for(;"object"==typeof n&&!Object.prototype.hasOwnProperty.call(n,u);)n=Object.getPrototypeOf(n);n&&t(n,...r)}},3434:(e,t,r)=>{"use strict";r.d(t,{YM:()=>c});var n=r(7836),i=r(5607);const o="nr@original:".concat(i.W);var a=Object.prototype.hasOwnProperty,s=!1;function c(e,t){return e||(e=n.ee),r.inPlace=function(e,t,n,i,o){n||(n="");const a="-"===n.charAt(0);for(let s=0;s<t.length;s++){const c=t[s],u=e[c];d(u)||(e[c]=r(u,a?c+n:n,i,c,o))}},r.flag=o,r;function r(t,r,n,s,c){return d(t)?t:(r||(r=""),nrWrapper[o]=t,function(e,t,r){if(Object.defineProperty&&Object.keys)try{return Object.keys(e).forEach((function(r){Object.defineProperty(t,r,{get:function(){return e[r]},set:function(t){return e[r]=t,t}})})),t}catch(e){u([e],r)}for(var n in e)a.call(e,n)&&(t[n]=e[n])}(t,nrWrapper,e),nrWrapper);function nrWrapper(){var o,a,d,l;try{a=this,o=[...arguments],d="function"==typeof n?n(o,a):n||{}}catch(t){u([t,"",[o,a,s],d],e)}i(r+"start",[o,a,s],d,c);try{return l=t.apply(a,o)}catch(e){throw i(r+"err",[o,a,e],d,c),e}finally{i(r+"end",[o,a,l],d,c)}}}function i(r,n,i,o){if(!s||t){var a=s;s=!0;try{e.emit(r,n,i,t,o)}catch(t){u([t,r,n,i],e)}s=a}}}function u(e,t){t||(t=n.ee);try{t.emit("internal-error",e)}catch(e){}}function d(e){return!(e&&"function"==typeof e&&e.apply&&!e[o])}},9300:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K.ajax},3333:(e,t,r)=>{"use strict";r.d(t,{TZ:()=>n});const n=r(860).K.genericEvents},6774:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K.jserrors},993:(e,t,r)=>{"use strict";r.d(t,{ET:()=>o,TZ:()=>a,p_:()=>i});var n=r(860);const i={ERROR:"ERROR",WARN:"WARN",INFO:"INFO",DEBUG:"DEBUG",TRACE:"TRACE"},o="log",a=n.K.logging},3785:(e,t,r)=>{"use strict";r.d(t,{R:()=>c,b:()=>u});var n=r(9908),i=r(1863),o=r(860),a=r(3969),s=r(993);function c(e,t,r={},c=s.p_.INFO){(0,n.p)(a.xV,["API/logging/".concat(c.toLowerCase(),"/called")],void 0,o.K.metrics,e),(0,n.p)(s.ET,[(0,i.t)(),t,r,c],void 0,o.K.logging,e)}function u(e){return"string"==typeof e&&Object.values(s.p_).some((t=>t===e.toUpperCase().trim()))}},3969:(e,t,r)=>{"use strict";r.d(t,{TZ:()=>n,XG:()=>s,rs:()=>i,xV:()=>a,z_:()=>o});const n=r(860).K.metrics,i="sm",o="cm",a="storeSupportabilityMetrics",s="storeEventMetrics"},6630:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K.pageViewEvent},782:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K.pageViewTiming},6344:(e,t,r)=>{"use strict";r.d(t,{BB:()=>d,G4:()=>o,Qb:()=>l,TZ:()=>i,Ug:()=>a,_s:()=>s,bc:()=>u,yP:()=>c});var n=r(2614);const i=r(860).K.sessionReplay,o={RECORD:"recordReplay",PAUSE:"pauseReplay",REPLAY_RUNNING:"replayRunning",ERROR_DURING_REPLAY:"errorDuringReplay"},a=.12,s={DomContentLoaded:0,Load:1,FullSnapshot:2,IncrementalSnapshot:3,Meta:4,Custom:5},c={[n.g.ERROR]:15e3,[n.g.FULL]:3e5,[n.g.OFF]:0},u={RESET:{message:"Session was reset",sm:"Reset"},IMPORT:{message:"Recorder failed to import",sm:"Import"},TOO_MANY:{message:"429: Too Many Requests",sm:"Too-Many"},TOO_BIG:{message:"Payload was too large",sm:"Too-Big"},CROSS_TAB:{message:"Session Entity was set to OFF on another tab",sm:"Cross-Tab"},ENTITLEMENTS:{message:"Session Replay is not allowed and will not be started",sm:"Entitlement"}},d=5e3,l={API:"api"}},5270:(e,t,r)=>{"use strict";r.d(t,{Aw:()=>c,CT:()=>u,SR:()=>s});var n=r(384),i=r(9417),o=r(7767),a=r(6154);function s(e){return!!(0,n.dV)().o.MO&&(0,o.V)(e)&&!0===(0,i.gD)(e,"session_trace.enabled")}function c(e){return!0===(0,i.gD)(e,"session_replay.preload")&&s(e)}function u(e,t){const r=t.correctAbsoluteTimestamp(e);return{originalTimestamp:e,correctedTimestamp:r,timestampDiff:e-r,originTime:a.WN,correctedOriginTime:t.correctedOriginTime,originTimeDiff:Math.floor(a.WN-t.correctedOriginTime)}}},3738:(e,t,r)=>{"use strict";r.d(t,{He:()=>i,Kp:()=>s,Lc:()=>u,Rz:()=>d,TZ:()=>n,bD:()=>o,d3:()=>a,jx:()=>l,uP:()=>c});const n=r(860).K.sessionTrace,i="bstResource",o="resource",a="-start",s="-end",c="fn"+a,u="fn"+s,d="pushState",l=1e3},4234:(e,t,r)=>{"use strict";r.d(t,{W:()=>i});var n=r(7836);class i{constructor(e,t,r){this.agentIdentifier=e,this.aggregator=t,this.ee=n.ee.get(e),this.featureName=r,this.blocked=!1}}},7767:(e,t,r)=>{"use strict";r.d(t,{V:()=>o});var n=r(9417),i=r(6154);const o=e=>i.RI&&!0===(0,n.gD)(e,"privacy.cookies_enabled")},425:(e,t,r)=>{"use strict";r.d(t,{j:()=>j});var n=r(860),i=r(2555),o=r(3371),a=r(9908),s=r(7836),c=r(1687),u=r(5289),d=r(6154),l=r(944),f=r(3969),h=r(384),g=r(6344);const p=["setErrorHandler","finished","addToTrace","addRelease","addPageAction","setCurrentRouteName","setPageViewName","setCustomAttribute","interaction","noticeError","setUserId","setApplicationVersion","start",g.G4.RECORD,g.G4.PAUSE,"log","wrapLogger"],m=["setErrorHandler","finished","addToTrace","addRelease"];var v=r(1863),b=r(2614),y=r(993),R=r(3785),x=r(2646),w=r(3434);function T(e,t,r,n){if("object"!=typeof t||!t||"string"!=typeof r||!r||"function"!=typeof t[r])return(0,l.R)(29);const i=function(e){return(e||s.ee).get("logger")}(e),o=(0,w.YM)(i),a=new x.y(s.P);return a.level=n.level,a.customAttributes=n.customAttributes,o.inPlace(t,[r],"wrap-logger-",a),i}function A(){const e=(0,h.pV)();p.forEach((t=>{e[t]=(...r)=>function(t,...r){let n=[];return Object.values(e.initializedAgents).forEach((e=>{e&&e.api?e.exposed&&e.api[t]&&n.push(e.api[t](...r)):(0,l.R)(38,t)})),n.length>1?n:n[0]}(t,...r)}))}const E={};var S=r(9417),O=r(5603),_=r(5284);const I=e=>{const t=e.startsWith("http");e+="/",r.p=t?e:"https://"+e};let N=!1;function j(e,t={},p,x){let{init:w,info:j,loader_config:P,runtime:C={},exposed:k=!0}=t;C.loaderType=p;const D=(0,h.pV)();j||(w=D.init,j=D.info,P=D.loader_config),(0,S.xN)(e.agentIdentifier,w||{}),(0,O.a)(e.agentIdentifier,P||{}),j.jsAttributes??={},d.bv&&(j.jsAttributes.isWorker=!0),(0,i.x1)(e.agentIdentifier,j);const H=(0,S.D0)(e.agentIdentifier),L=[j.beacon,j.errorBeacon];N||(H.proxy.assets&&(I(H.proxy.assets),L.push(H.proxy.assets)),H.proxy.beacon&&L.push(H.proxy.beacon),A(),(0,h.US)("activatedFeatures",_.B),e.runSoftNavOverSpa&&=!0===H.soft_navigations.enabled&&H.feature_flags.includes("soft_nav")),C.denyList=[...H.ajax.deny_list||[],...H.ajax.block_internal?L:[]],C.ptid=e.agentIdentifier,(0,o.V)(e.agentIdentifier,C),e.ee=s.ee.get(e.agentIdentifier),void 0===e.api&&(e.api=function(e,t,h=!1){t||(0,c.Ak)(e,"api");const p={};var x=s.ee.get(e),w=x.get("tracer");E[e]=b.g.OFF,x.on(g.G4.REPLAY_RUNNING,(t=>{E[e]=t}));var A="api-",S=A+"ixn-";function O(t,r,n,o){const a=(0,i.Vp)(e);return null===r?delete a.jsAttributes[t]:(0,i.x1)(e,{...a,jsAttributes:{...a.jsAttributes,[t]:r}}),N(A,n,!0,o||null===r?"session":void 0)(t,r)}function _(){}p.log=function(e,{customAttributes:t={},level:r=y.p_.INFO}={}){(0,a.p)(f.xV,["API/log/called"],void 0,n.K.metrics,x),(0,R.R)(x,e,t,r)},p.wrapLogger=(e,t,{customAttributes:r={},level:i=y.p_.INFO}={})=>{(0,a.p)(f.xV,["API/wrapLogger/called"],void 0,n.K.metrics,x),T(x,e,t,{customAttributes:r,level:i})},m.forEach((e=>{p[e]=N(A,e,!0,"api")})),p.addPageAction=N(A,"addPageAction",!0,n.K.genericEvents),p.setPageViewName=function(t,r){if("string"==typeof t)return"/"!==t.charAt(0)&&(t="/"+t),(0,o.f)(e).customTransaction=(r||"http://custom.transaction")+t,N(A,"setPageViewName",!0)()},p.setCustomAttribute=function(e,t,r=!1){if("string"==typeof e){if(["string","number","boolean"].includes(typeof t)||null===t)return O(e,t,"setCustomAttribute",r);(0,l.R)(40,typeof t)}else(0,l.R)(39,typeof e)},p.setUserId=function(e){if("string"==typeof e||null===e)return O("enduser.id",e,"setUserId",!0);(0,l.R)(41,typeof e)},p.setApplicationVersion=function(e){if("string"==typeof e||null===e)return O("application.version",e,"setApplicationVersion",!1);(0,l.R)(42,typeof e)},p.start=()=>{try{(0,a.p)(f.xV,["API/start/called"],void 0,n.K.metrics,x),x.emit("manual-start-all")}catch(e){(0,l.R)(23,e)}},p[g.G4.RECORD]=function(){(0,a.p)(f.xV,["API/recordReplay/called"],void 0,n.K.metrics,x),(0,a.p)(g.G4.RECORD,[],void 0,n.K.sessionReplay,x)},p[g.G4.PAUSE]=function(){(0,a.p)(f.xV,["API/pauseReplay/called"],void 0,n.K.metrics,x),(0,a.p)(g.G4.PAUSE,[],void 0,n.K.sessionReplay,x)},p.interaction=function(e){return(new _).get("object"==typeof e?e:{})};const I=_.prototype={createTracer:function(e,t){var r={},i=this,o="function"==typeof t;return(0,a.p)(f.xV,["API/createTracer/called"],void 0,n.K.metrics,x),h||(0,a.p)(S+"tracer",[(0,v.t)(),e,r],i,n.K.spa,x),function(){if(w.emit((o?"":"no-")+"fn-start",[(0,v.t)(),i,o],r),o)try{return t.apply(this,arguments)}catch(e){const t="string"==typeof e?new Error(e):e;throw w.emit("fn-err",[arguments,this,t],r),t}finally{w.emit("fn-end",[(0,v.t)()],r)}}}};function N(e,t,r,i){return function(){return(0,a.p)(f.xV,["API/"+t+"/called"],void 0,n.K.metrics,x),i&&(0,a.p)(e+t,[(0,v.t)(),...arguments],r?null:this,i,x),r?void 0:this}}function j(){r.e(891).then(r.bind(r,8778)).then((({setAPI:t})=>{t(e),(0,c.Ze)(e,"api")})).catch((e=>{(0,l.R)(27,e),x.abort()}))}return["actionText","setName","setAttribute","save","ignore","onEnd","getContext","end","get"].forEach((e=>{I[e]=N(S,e,void 0,h?n.K.softNav:n.K.spa)})),p.setCurrentRouteName=h?N(S,"routeName",void 0,n.K.softNav):N(A,"routeName",!0,n.K.spa),p.noticeError=function(t,r){"string"==typeof t&&(t=new Error(t)),(0,a.p)(f.xV,["API/noticeError/called"],void 0,n.K.metrics,x),(0,a.p)("err",[t,(0,v.t)(),!1,r,!!E[e]],void 0,n.K.jserrors,x)},d.RI?(0,u.GG)((()=>j()),!0):j(),p}(e.agentIdentifier,x,e.runSoftNavOverSpa)),void 0===e.exposed&&(e.exposed=k),N=!0}},8374:(e,t,r)=>{r.nc=(()=>{try{return document?.currentScript?.nonce}catch(e){}return""})()},860:(e,t,r)=>{"use strict";r.d(t,{K:()=>n,P:()=>i});const n={ajax:"ajax",genericEvents:"generic_events",jserrors:"jserrors",logging:"logging",metrics:"metrics",pageAction:"page_action",pageViewEvent:"page_view_event",pageViewTiming:"page_view_timing",sessionReplay:"session_replay",sessionTrace:"session_trace",softNav:"soft_navigations",spa:"spa"},i={[n.pageViewEvent]:1,[n.pageViewTiming]:2,[n.metrics]:3,[n.jserrors]:4,[n.spa]:5,[n.ajax]:6,[n.sessionTrace]:7,[n.softNav]:8,[n.sessionReplay]:9,[n.logging]:10,[n.genericEvents]:11}}},n={};function i(e){var t=n[e];if(void 0!==t)return t.exports;var o=n[e]={exports:{}};return r[e](o,o.exports,i),o.exports}i.m=r,i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,r)=>(i.f[r](e,t),t)),[])),i.u=e=>({95:"nr-full-compressor",222:"nr-full-recorder",891:"nr-full"}[e]+"-1.265.1.min.js"),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="NRBA-1.265.1.PROD:",i.l=(r,n,o,a)=>{if(e[r])e[r].push(n);else{var s,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),d=0;d<u.length;d++){var l=u[d];if(l.getAttribute("src")==r||l.getAttribute("data-webpack")==t+o){s=l;break}}if(!s){c=!0;var f={891:"sha512-qCOaXFVzaHQQGCeEfNJdhuENvNV6V9TOsR4LrfdQG4HNP/HTCuN0zjiHmqkFsUpchM8yj8LrCK5YxRi8bntFjQ==",222:"sha512-laZChFEv2bY428Y0J/TCt1ylHrUPDDIfrcQjKHEPK9ZlXsd4oTmjJYukekaVi0rujuYDqy3IQR/toeUCNdWubA==",95:"sha512-+x2Lv6U8rhqVpEEYp9X6kHhPXhhpjS42+yhYUURuox4dWz5m8HfsBfmjaW6bk8rh9MbJRqrf0LSucxKL7OydbQ=="};(s=document.createElement("script")).charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.setAttribute("data-webpack",t+o),s.src=r,0!==s.src.indexOf(window.location.origin+"/")&&(s.crossOrigin="anonymous"),f[a]&&(s.integrity=f[a])}e[r]=[n];var h=(t,n)=>{s.onerror=s.onload=null,clearTimeout(g);var i=e[r];if(delete e[r],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(n))),t)return t(n)},g=setTimeout(h.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=h.bind(null,s.onerror),s.onload=h.bind(null,s.onload),c&&document.head.appendChild(s)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="https://js-agent.newrelic.com/",(()=>{var e={959:0,85:0};i.f.j=(t,r)=>{var n=i.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,i)=>n=e[t]=[r,i]));r.push(n[2]=o);var a=i.p+i.u(t),s=new Error;i.l(a,(r=>{if(i.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",s.name="ChunkLoadError",s.type=o,s.request=a,n[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[a,s,c]=r,u=0;if(a.some((t=>0!==e[t]))){for(n in s)i.o(s,n)&&(i.m[n]=s[n]);if(c)c(i)}for(t&&t(r);u<a.length;u++)o=a[u],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=self["webpackChunk:NRBA-1.265.1.PROD"]=self["webpackChunk:NRBA-1.265.1.PROD"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";i(8374);var e=i(944),t=i(6344),r=i(9566);class n{agentIdentifier;constructor(e=(0,r.LA)(16)){this.agentIdentifier=e}#e(t,...r){if("function"==typeof this.api?.[t])return this.api[t](...r);(0,e.R)(35,t)}addPageAction(e,t){return this.#e("addPageAction",e,t)}setPageViewName(e,t){return this.#e("setPageViewName",e,t)}setCustomAttribute(e,t,r){return this.#e("setCustomAttribute",e,t,r)}noticeError(e,t){return this.#e("noticeError",e,t)}setUserId(e){return this.#e("setUserId",e)}setApplicationVersion(e){return this.#e("setApplicationVersion",e)}setErrorHandler(e){return this.#e("setErrorHandler",e)}finished(e){return this.#e("finished",e)}addRelease(e,t){return this.#e("addRelease",e,t)}start(e){return this.#e("start",e)}recordReplay(){return this.#e(t.G4.RECORD)}pauseReplay(){return this.#e(t.G4.PAUSE)}addToTrace(e){return this.#e("addToTrace",e)}setCurrentRouteName(e){return this.#e("setCurrentRouteName",e)}interaction(){return this.#e("interaction")}log(e,t){return this.#e("log",e,t)}wrapLogger(e,t,r){return this.#e("wrapLogger",e,t,r)}}var o=i(860),a=i(9417);const s=Object.values(o.K);function c(e){const t={};return s.forEach((r=>{t[r]=function(e,t){return!0===(0,a.gD)(t,"".concat(e,".enabled"))}(r,e)})),t}var u=i(425);var d=i(1687),l=i(4234),f=i(5289),h=i(6154),g=i(5270),p=i(7767),m=i(6389);class v extends l.W{constructor(e,t,r,n=!0){super(e,t,r),this.auto=n,this.abortHandler=void 0,this.featAggregate=void 0,this.onAggregateImported=void 0,!1===(0,a.gD)(this.agentIdentifier,"".concat(this.featureName,".autoStart"))&&(this.auto=!1),this.auto?(0,d.Ak)(e,r):this.ee.on("manual-start-all",(0,m.J)((()=>{(0,d.Ak)(this.agentIdentifier,this.featureName),this.auto=!0,this.importAggregator()})))}importAggregator(t={}){if(this.featAggregate||!this.auto)return;let r;this.onAggregateImported=new Promise((e=>{r=e}));const n=async()=>{let n;try{if((0,p.V)(this.agentIdentifier)){const{setupAgentSession:e}=await i.e(891).then(i.bind(i,6526));n=e(this.agentIdentifier)}}catch(t){(0,e.R)(20,t),this.ee.emit("internal-error",[t]),this.featureName===o.K.sessionReplay&&this.abortHandler?.()}try{if(!this.#t(this.featureName,n))return(0,d.Ze)(this.agentIdentifier,this.featureName),void r(!1);const{lazyFeatureLoader:e}=await i.e(891).then(i.bind(i,6103)),{Aggregate:o}=await e(this.featureName,"aggregate");this.featAggregate=new o(this.agentIdentifier,this.aggregator,t),r(!0)}catch(t){(0,e.R)(34,t),this.abortHandler?.(),(0,d.Ze)(this.agentIdentifier,this.featureName,!0),r(!1),this.ee&&this.ee.abort()}};h.RI?(0,f.GG)((()=>n()),!0):n()}#t(e,t){switch(e){case o.K.sessionReplay:return(0,g.SR)(this.agentIdentifier)&&!!t;case o.K.sessionTrace:return!!t;default:return!0}}}var b=i(6630);class y extends v{static featureName=b.T;constructor(e,t,r=!0){super(e,t,b.T,r),this.importAggregator()}}var R=i(4777);class x extends R.J{constructor(e){super(e),this.aggregatedData={}}store(e,t,r,n,i){var o=this.getBucket(e,t,r,i);return o.metrics=function(e,t){t||(t={count:0});return t.count+=1,Object.entries(e||{}).forEach((([e,r])=>{t[e]=w(r,t[e])})),t}(n,o.metrics),o}merge(e,t,r,n,i){var o=this.getBucket(e,t,n,i);if(o.metrics){var a=o.metrics;a.count+=r.count,Object.keys(r||{}).forEach((e=>{if("count"!==e){var t=a[e],n=r[e];n&&!n.c?a[e]=w(n.t,t):a[e]=function(e,t){if(!t)return e;t.c||(t=T(t.t));return t.min=Math.min(e.min,t.min),t.max=Math.max(e.max,t.max),t.t+=e.t,t.sos+=e.sos,t.c+=e.c,t}(n,a[e])}}))}else o.metrics=r}storeMetric(e,t,r,n){var i=this.getBucket(e,t,r);return i.stats=w(n,i.stats),i}getBucket(e,t,r,n){this.aggregatedData[e]||(this.aggregatedData[e]={});var i=this.aggregatedData[e][t];return i||(i=this.aggregatedData[e][t]={params:r||{}},n&&(i.custom=n)),i}get(e,t){return t?this.aggregatedData[e]&&this.aggregatedData[e][t]:this.aggregatedData[e]}take(e){for(var t={},r="",n=!1,i=0;i<e.length;i++)t[r=e[i]]=Object.values(this.aggregatedData[r]||{}),t[r].length&&(n=!0),delete this.aggregatedData[r];return n?t:null}}function w(e,t){return null==e?function(e){e?e.c++:e={c:1};return e}(t):t?(t.c||(t=T(t.t)),t.c+=1,t.t+=e,t.sos+=e*e,e>t.max&&(t.max=e),e<t.min&&(t.min=e),t):{t:e}}function T(e){return{t:e,min:e,max:e,sos:e*e,c:1}}var A=i(384);var E=i(9908),S=i(2843),O=i(3878),_=i(782),I=i(1863);class N extends v{static featureName=_.T;constructor(e,t,r=!0){super(e,t,_.T,r),h.RI&&((0,S.u)((()=>(0,E.p)("docHidden",[(0,I.t)()],void 0,_.T,this.ee)),!0),(0,O.sp)("pagehide",(()=>(0,E.p)("winPagehide",[(0,I.t)()],void 0,_.T,this.ee))),this.importAggregator())}}var j=i(3969);class P extends v{static featureName=j.TZ;constructor(e,t,r=!0){super(e,t,j.TZ,r),this.importAggregator()}}var C=i(6774),k=i(3304);class D{constructor(e,t,r,n,i){this.name="UncaughtError",this.message="string"==typeof e?e:(0,k.A)(e),this.sourceURL=t,this.line=r,this.column=n,this.__newrelic=i}}function H(e){return M(e)?e:new D(void 0!==e?.message?e.message:e,e?.filename||e?.sourceURL,e?.lineno||e?.line,e?.colno||e?.col,e?.__newrelic)}function L(e){let t="Unhandled Promise Rejection";if(M(e?.reason))try{return e.reason.message=t+": "+e.reason.message,H(e.reason)}catch(t){return H(e.reason)}if(void 0===e.reason)return H(t);const r=H(e.reason);return r.message=t+": "+r?.message,r}function K(e){if(e.error instanceof SyntaxError&&!/:\d+$/.test(e.error.stack?.trim())){const t=new D(e.message,e.filename,e.lineno,e.colno,e.error.__newrelic);return t.name=SyntaxError.name,t}return M(e.error)?e.error:H(e)}function M(e){return e instanceof Error&&!!e.stack}class U extends v{static featureName=C.T;#r=!1;constructor(e,r,n=!0){super(e,r,C.T,n);try{this.removeOnAbort=new AbortController}catch(e){}this.ee.on("internal-error",(e=>{this.abortHandler&&(0,E.p)("ierr",[H(e),(0,I.t)(),!0,{},this.#r],void 0,this.featureName,this.ee)})),this.ee.on(t.G4.REPLAY_RUNNING,(e=>{this.#r=e})),h.gm.addEventListener("unhandledrejection",(e=>{this.abortHandler&&(0,E.p)("err",[L(e),(0,I.t)(),!1,{unhandledPromiseRejection:1},this.#r],void 0,this.featureName,this.ee)}),(0,O.jT)(!1,this.removeOnAbort?.signal)),h.gm.addEventListener("error",(e=>{this.abortHandler&&(0,E.p)("err",[K(e),(0,I.t)(),!1,{},this.#r],void 0,this.featureName,this.ee)}),(0,O.jT)(!1,this.removeOnAbort?.signal)),this.abortHandler=this.#n,this.importAggregator()}#n(){this.removeOnAbort?.abort(),this.abortHandler=void 0}}var V=i(5603),B=i(8990);let G=1;const F="nr@id";function W(e){const t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===h.gm?0:(0,B.I)(e,F,(function(){return G++}))}function z(e){if("string"==typeof e&&e.length)return e.length;if("object"==typeof e){if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer&&e.byteLength)return e.byteLength;if("undefined"!=typeof Blob&&e instanceof Blob&&e.size)return e.size;if(!("undefined"!=typeof FormData&&e instanceof FormData))try{return(0,k.A)(e).length}catch(e){return}}}var q=i(8139),Z=i(7836),Y=i(3434);const X={},J=["open","send"];function Q(t){var r=t||Z.ee;const n=function(e){return(e||Z.ee).get("xhr")}(r);if(X[n.debugId]++)return n;X[n.debugId]=1,(0,q.u)(r);var i=(0,Y.YM)(n),o=h.gm.XMLHttpRequest,a=h.gm.MutationObserver,s=h.gm.Promise,c=h.gm.setInterval,u="readystatechange",d=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],l=[],f=h.gm.XMLHttpRequest=function(t){const r=new o(t),a=n.context(r);try{n.emit("new-xhr",[r],a),r.addEventListener(u,(s=a,function(){var e=this;e.readyState>3&&!s.resolved&&(s.resolved=!0,n.emit("xhr-resolved",[],e)),i.inPlace(e,d,"fn-",y)}),(0,O.jT)(!1))}catch(t){(0,e.R)(15,t);try{n.emit("internal-error",[t])}catch(e){}}var s;return r};function g(e,t){i.inPlace(t,["onreadystatechange"],"fn-",y)}if(function(e,t){for(var r in e)t[r]=e[r]}(o,f),f.prototype=o.prototype,i.inPlace(f.prototype,J,"-xhr-",y),n.on("send-xhr-start",(function(e,t){g(e,t),function(e){l.push(e),a&&(p?p.then(b):c?c(b):(m=-m,v.data=m))}(t)})),n.on("open-xhr-start",g),a){var p=s&&s.resolve();if(!c&&!s){var m=1,v=document.createTextNode(m);new a(b).observe(v,{characterData:!0})}}else r.on("fn-end",(function(e){e[0]&&e[0].type===u||b()}));function b(){for(var e=0;e<l.length;e++)g(0,l[e]);l.length&&(l=[])}function y(e,t){return t}return n}var ee="fetch-",te=ee+"body-",re=["arrayBuffer","blob","json","text","formData"],ne=h.gm.Request,ie=h.gm.Response,oe="prototype";const ae={};function se(e){const t=function(e){return(e||Z.ee).get("fetch")}(e);if(!(ne&&ie&&h.gm.fetch))return t;if(ae[t.debugId]++)return t;function r(e,r,n){var i=e[r];"function"==typeof i&&(e[r]=function(){var e,r=[...arguments],o={};t.emit(n+"before-start",[r],o),o[Z.P]&&o[Z.P].dt&&(e=o[Z.P].dt);var a=i.apply(this,r);return t.emit(n+"start",[r,e],a),a.then((function(e){return t.emit(n+"end",[null,e],a),e}),(function(e){throw t.emit(n+"end",[e],a),e}))})}return ae[t.debugId]=1,re.forEach((e=>{r(ne[oe],e,te),r(ie[oe],e,te)})),r(h.gm,"fetch",ee),t.on(ee+"end",(function(e,r){var n=this;if(r){var i=r.headers.get("content-length");null!==i&&(n.rxSize=i),t.emit(ee+"done",[null,r],n)}else t.emit(ee+"done",[e],n)})),t}var ce=i(7485);class ue{constructor(e){this.agentIdentifier=e}generateTracePayload(e){if(!this.shouldGenerateTrace(e))return null;var t=(0,V.o)(this.agentIdentifier);if(!t)return null;var n=(t.accountID||"").toString()||null,i=(t.agentID||"").toString()||null,o=(t.trustKey||"").toString()||null;if(!n||!i)return null;var a=(0,r.ZF)(),s=(0,r.el)(),c=Date.now(),u={spanId:a,traceId:s,timestamp:c};return(e.sameOrigin||this.isAllowedOrigin(e)&&this.useTraceContextHeadersForCors())&&(u.traceContextParentHeader=this.generateTraceContextParentHeader(a,s),u.traceContextStateHeader=this.generateTraceContextStateHeader(a,c,n,i,o)),(e.sameOrigin&&!this.excludeNewrelicHeader()||!e.sameOrigin&&this.isAllowedOrigin(e)&&this.useNewrelicHeaderForCors())&&(u.newrelicHeader=this.generateTraceHeader(a,s,c,n,i,o)),u}generateTraceContextParentHeader(e,t){return"00-"+t+"-"+e+"-01"}generateTraceContextStateHeader(e,t,r,n,i){return i+"@nr=0-1-"+r+"-"+n+"-"+e+"----"+t}generateTraceHeader(e,t,r,n,i,o){if(!("function"==typeof h.gm?.btoa))return null;var a={v:[0,1],d:{ty:"Browser",ac:n,ap:i,id:e,tr:t,ti:r}};return o&&n!==o&&(a.d.tk=o),btoa((0,k.A)(a))}shouldGenerateTrace(e){return this.isDtEnabled()&&this.isAllowedOrigin(e)}isAllowedOrigin(e){var t=!1,r={};if((0,a.gD)(this.agentIdentifier,"distributed_tracing")&&(r=(0,a.D0)(this.agentIdentifier).distributed_tracing),e.sameOrigin)t=!0;else if(r.allowed_origins instanceof Array)for(var n=0;n<r.allowed_origins.length;n++){var i=(0,ce.D)(r.allowed_origins[n]);if(e.hostname===i.hostname&&e.protocol===i.protocol&&e.port===i.port){t=!0;break}}return t}isDtEnabled(){var e=(0,a.gD)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.enabled}excludeNewrelicHeader(){var e=(0,a.gD)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.exclude_newrelic_header}useNewrelicHeaderForCors(){var e=(0,a.gD)(this.agentIdentifier,"distributed_tracing");return!!e&&!1!==e.cors_use_newrelic_header}useTraceContextHeadersForCors(){var e=(0,a.gD)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.cors_use_tracecontext_headers}}var de=i(9300),le=i(7295),fe=["load","error","abort","timeout"],he=fe.length,ge=(0,A.dV)().o.REQ,pe=(0,A.dV)().o.XHR;class me extends v{static featureName=de.T;constructor(e,t,r=!0){super(e,t,de.T,r),this.dt=new ue(e),this.handler=(e,t,r,n)=>(0,E.p)(e,t,r,n,this.ee);try{const e={xmlhttprequest:"xhr",fetch:"fetch",beacon:"beacon"};h.gm?.performance?.getEntriesByType("resource").forEach((t=>{if(t.initiatorType in e&&0!==t.responseStatus){const r={status:t.responseStatus},n={rxSize:t.transferSize,duration:Math.floor(t.duration),cbTime:0};ve(r,t.name),this.handler("xhr",[r,n,t.startTime,t.responseEnd,e[t.initiatorType]],void 0,o.K.ajax)}}))}catch(e){}se(this.ee),Q(this.ee),function(e,t,r,n){function i(e){var t=this;t.totalCbs=0,t.called=0,t.cbTime=0,t.end=x,t.ended=!1,t.xhrGuids={},t.lastSize=null,t.loadCaptureCalled=!1,t.params=this.params||{},t.metrics=this.metrics||{},e.addEventListener("load",(function(r){w(t,e)}),(0,O.jT)(!1)),h.lR||e.addEventListener("progress",(function(e){t.lastSize=e.loaded}),(0,O.jT)(!1))}function a(e){this.params={method:e[0]},ve(this,e[1]),this.metrics={}}function s(t,r){var i=(0,V.o)(e);i.xpid&&this.sameOrigin&&r.setRequestHeader("X-NewRelic-ID",i.xpid);var o=n.generateTracePayload(this.parsedOrigin);if(o){var a=!1;o.newrelicHeader&&(r.setRequestHeader("newrelic",o.newrelicHeader),a=!0),o.traceContextParentHeader&&(r.setRequestHeader("traceparent",o.traceContextParentHeader),o.traceContextStateHeader&&r.setRequestHeader("tracestate",o.traceContextStateHeader),a=!0),a&&(this.dt=o)}}function c(e,r){var n=this.metrics,i=e[0],o=this;if(n&&i){var a=z(i);a&&(n.txSize=a)}this.startTime=(0,I.t)(),this.body=i,this.listener=function(e){try{"abort"!==e.type||o.loadCaptureCalled||(o.params.aborted=!0),("load"!==e.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof r.onload)&&"function"==typeof o.end)&&o.end(r)}catch(e){try{t.emit("internal-error",[e])}catch(e){}}};for(var s=0;s<he;s++)r.addEventListener(fe[s],this.listener,(0,O.jT)(!1))}function u(e,t,r){this.cbTime+=e,t?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof r.onload||"function"!=typeof this.end||this.end(r)}function d(e,t){var r=""+W(e)+!!t;this.xhrGuids&&!this.xhrGuids[r]&&(this.xhrGuids[r]=!0,this.totalCbs+=1)}function l(e,t){var r=""+W(e)+!!t;this.xhrGuids&&this.xhrGuids[r]&&(delete this.xhrGuids[r],this.totalCbs-=1)}function f(){this.endTime=(0,I.t)()}function g(e,r){r instanceof pe&&"load"===e[0]&&t.emit("xhr-load-added",[e[1],e[2]],r)}function p(e,r){r instanceof pe&&"load"===e[0]&&t.emit("xhr-load-removed",[e[1],e[2]],r)}function m(e,t,r){t instanceof pe&&("onload"===r&&(this.onload=!0),("load"===(e[0]&&e[0].type)||this.onload)&&(this.xhrCbStart=(0,I.t)()))}function v(e,r){this.xhrCbStart&&t.emit("xhr-cb-time",[(0,I.t)()-this.xhrCbStart,this.onload,r],r)}function b(e){var t,r=e[1]||{};if("string"==typeof e[0]?0===(t=e[0]).length&&h.RI&&(t=""+h.gm.location.href):e[0]&&e[0].url?t=e[0].url:h.gm?.URL&&e[0]&&e[0]instanceof URL?t=e[0].href:"function"==typeof e[0].toString&&(t=e[0].toString()),"string"==typeof t&&0!==t.length){t&&(this.parsedOrigin=(0,ce.D)(t),this.sameOrigin=this.parsedOrigin.sameOrigin);var i=n.generateTracePayload(this.parsedOrigin);if(i&&(i.newrelicHeader||i.traceContextParentHeader))if(e[0]&&e[0].headers)s(e[0].headers,i)&&(this.dt=i);else{var o={};for(var a in r)o[a]=r[a];o.headers=new Headers(r.headers||{}),s(o.headers,i)&&(this.dt=i),e.length>1?e[1]=o:e.push(o)}}function s(e,t){var r=!1;return t.newrelicHeader&&(e.set("newrelic",t.newrelicHeader),r=!0),t.traceContextParentHeader&&(e.set("traceparent",t.traceContextParentHeader),t.traceContextStateHeader&&e.set("tracestate",t.traceContextStateHeader),r=!0),r}}function y(e,t){this.params={},this.metrics={},this.startTime=(0,I.t)(),this.dt=t,e.length>=1&&(this.target=e[0]),e.length>=2&&(this.opts=e[1]);var r,n=this.opts||{},i=this.target;"string"==typeof i?r=i:"object"==typeof i&&i instanceof ge?r=i.url:h.gm?.URL&&"object"==typeof i&&i instanceof URL&&(r=i.href),ve(this,r);var o=(""+(i&&i instanceof ge&&i.method||n.method||"GET")).toUpperCase();this.params.method=o,this.body=n.body,this.txSize=z(n.body)||0}function R(e,t){if(this.endTime=(0,I.t)(),this.params||(this.params={}),(0,le.iW)(this.params))return;let n;this.params.status=t?t.status:0,"string"==typeof this.rxSize&&this.rxSize.length>0&&(n=+this.rxSize);const i={txSize:this.txSize,rxSize:n,duration:(0,I.t)()-this.startTime};r("xhr",[this.params,i,this.startTime,this.endTime,"fetch"],this,o.K.ajax)}function x(e){const t=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(let t=0;t<he;t++)e.removeEventListener(fe[t],this.listener,!1);t.aborted||(0,le.iW)(t)||(n.duration=(0,I.t)()-this.startTime,this.loadCazptureCalled||4!==e.readyState?null==t.status&&(t.status=0):w(this,e),n.cbTime=this.cbTime,r("xhr",[t,n,this.startTime,this.endTime,"xhr"],this,o.K.ajax))}}function w(e,r){e.params.status=r.status;var n=function(e,t){var r=e.responseType;return"json"===r&&null!==t?t:"arraybuffer"===r||"blob"===r||"json"===r?z(e.response):"text"===r||""===r||void 0===r?z(e.responseText):void 0}(r,e.lastSize);if(n&&(e.metrics.rxSize=n),e.sameOrigin){var i=r.getResponseHeader("X-NewRelic-App-Data");i&&((0,E.p)(j.rs,["Ajax/CrossApplicationTracing/Header/Seen"],void 0,o.K.metrics,t),e.params.cat=i.split(", ").pop())}e.loadCaptureCalled=!0}t.on("new-xhr",i),t.on("open-xhr-start",a),t.on("open-xhr-end",s),t.on("send-xhr-start",c),t.on("xhr-cb-time",u),t.on("xhr-load-added",d),t.on("xhr-load-removed",l),t.on("xhr-resolved",f),t.on("addEventListener-end",g),t.on("removeEventListener-end",p),t.on("fn-end",v),t.on("fetch-before-start",b),t.on("fetch-start",y),t.on("fn-start",m),t.on("fetch-done",R)}(e,this.ee,this.handler,this.dt),this.importAggregator()}}function ve(e,t){var r=(0,ce.D)(t),n=e.params||e;n.hostname=r.hostname,n.port=r.port,n.protocol=r.protocol,n.host=r.hostname+":"+r.port,n.pathname=r.pathname,e.parsedOrigin=r,e.sameOrigin=r.sameOrigin}const be={},ye=["pushState","replaceState"];function Re(e){const t=function(e){return(e||Z.ee).get("history")}(e);return!h.RI||be[t.debugId]++||(be[t.debugId]=1,(0,Y.YM)(t).inPlace(window.history,ye,"-")),t}var xe=i(3738);const{He:we,bD:Te,d3:Ae,Kp:Ee,TZ:Se,Lc:Oe,uP:_e,Rz:Ie}=xe;class Ne extends v{static featureName=Se;constructor(e,t,r=!0){super(e,t,Se,r);if(!(0,p.V)(this.agentIdentifier))return void(0,d.x3)(this.agentIdentifier,this.featureName);const n=this.ee;let i;Re(n),this.eventsEE=(0,q.u)(n),this.eventsEE.on(_e,(function(e,t){this.bstStart=(0,I.t)()})),this.eventsEE.on(Oe,(function(e,t){(0,E.p)("bst",[e[0],t,this.bstStart,(0,I.t)()],void 0,o.K.sessionTrace,n)})),n.on(Ie+Ae,(function(e){this.time=(0,I.t)(),this.startPath=location.pathname+location.hash})),n.on(Ie+Ee,(function(e){(0,E.p)("bstHist",[location.pathname+location.hash,this.startPath,this.time],void 0,o.K.sessionTrace,n)}));try{i=new PerformanceObserver((e=>{const t=e.getEntries();(0,E.p)(we,[t],void 0,o.K.sessionTrace,n)})),i.observe({type:Te,buffered:!0})}catch(e){}this.importAggregator({resourceObserver:i})}}var je=i(2614);class Pe extends v{static featureName=t.TZ;#i;constructor(e,r,n=!0){let i;super(e,r,t.TZ,n),this.replayRunning=!1;try{i=JSON.parse(localStorage.getItem("".concat(je.H3,"_").concat(je.uh)))}catch(e){}(0,g.SR)(e)&&this.ee.on(t.G4.RECORD,(()=>this.#o())),this.#a(i)?(this.#i=i?.sessionReplayMode,this.#s()):this.importAggregator(),this.ee.on("err",(e=>{this.replayRunning&&(this.errorNoticed=!0,(0,E.p)(t.G4.ERROR_DURING_REPLAY,[e],void 0,this.featureName,this.ee))})),this.ee.on(t.G4.REPLAY_RUNNING,(e=>{this.replayRunning=e}))}#a(e){return e&&(e.sessionReplayMode===je.g.FULL||e.sessionReplayMode===je.g.ERROR)||(0,g.Aw)(this.agentIdentifier)}#c=!1;async#s(e){if(!this.#c){this.#c=!0;try{const{Recorder:t}=await Promise.all([i.e(891),i.e(222)]).then(i.bind(i,2496));this.recorder??=new t({mode:this.#i,agentIdentifier:this.agentIdentifier,trigger:e,ee:this.ee}),this.recorder.startRecording(),this.abortHandler=this.recorder.stopRecording}catch(e){}this.importAggregator({recorder:this.recorder,errorNoticed:this.errorNoticed})}}#o(){this.featAggregate?this.featAggregate.mode!==je.g.FULL&&this.featAggregate.initializeRecording(je.g.FULL,!0):(this.#i=je.g.FULL,this.#s(t.Qb.API),this.recorder&&this.recorder.parent.mode!==je.g.FULL&&(this.recorder.parent.mode=je.g.FULL,this.recorder.stopRecording(),this.recorder.startRecording(),this.abortHandler=this.recorder.stopRecording))}}var Ce=i(3333);class ke extends v{static featureName=Ce.TZ;constructor(e,t,r=!0){super(e,t,Ce.TZ,r);[(0,a.gD)(this.agentIdentifier,"page_action.enabled")].some((e=>e))?this.importAggregator():(0,d.x3)(this.agentIdentifier,this.featureName)}}var De=i(993),He=i(3785);class Le extends v{static featureName=De.TZ;constructor(e,t,r=!0){super(e,t,De.TZ,r);const n=this.ee;this.ee.on("wrap-logger-end",(function([e]){const{level:t,customAttributes:r}=this;(0,He.R)(n,e,r,t)})),this.importAggregator()}}new class extends n{constructor(t,r){super(r),h.gm?(this.sharedAggregator=new x({agentIdentifier:this.agentIdentifier}),this.features={},(0,A.bQ)(this.agentIdentifier,this),this.desiredFeatures=new Set(t.features||[]),this.desiredFeatures.add(y),this.runSoftNavOverSpa=[...this.desiredFeatures].some((e=>e.featureName===o.K.softNav)),(0,u.j)(this,t,t.loaderType||"agent"),this.run()):(0,e.R)(21)}get config(){return{info:this.info,init:this.init,loader_config:this.loader_config,runtime:this.runtime}}run(){try{const t=c(this.agentIdentifier),r=[...this.desiredFeatures];r.sort(((e,t)=>o.P[e.featureName]-o.P[t.featureName])),r.forEach((r=>{if(!t[r.featureName]&&r.featureName!==o.K.pageViewEvent)return;if(this.runSoftNavOverSpa&&r.featureName===o.K.spa)return;if(!this.runSoftNavOverSpa&&r.featureName===o.K.softNav)return;const n=function(e){switch(e){case o.K.ajax:return[o.K.jserrors];case o.K.sessionTrace:return[o.K.ajax,o.K.pageViewEvent];case o.K.sessionReplay:return[o.K.sessionTrace];case o.K.pageViewTiming:return[o.K.pageViewEvent];default:return[]}}(r.featureName).filter((e=>!(e in this.features)));n.length>0&&(0,e.R)(36,{targetFeature:r.featureName,missingDependencies:n}),this.features[r.featureName]=new r(this.agentIdentifier,this.sharedAggregator)}))}catch(t){(0,e.R)(22,t);for(const e in this.features)this.features[e].abortHandler?.();const r=(0,A.Zm)();delete r.initializedAgents[this.agentIdentifier]?.api,delete r.initializedAgents[this.agentIdentifier]?.features,delete this.sharedAggregator;return r.ee.get(this.agentIdentifier).abort(),!1}}}({features:[y,N,Ne,Pe,me,P,U,ke,Le],loaderType:"pro"})})()})();</script>
<meta name="title" content="Account"/>
<meta name="keywords" content="Boost Harmony"/>
<meta name="robots" content="INDEX,FOLLOW"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta name="format-detection" content="telephone=no"/>
<title>Account</title>
<link  rel="stylesheet" type="text/css"  media="all" href="https://www.boostmobile.com/shop/static/version1725619457/_cache/merged/b65d387caa60c572ea8673392b2475e1.min.css" />
<link  rel="stylesheet" type="text/css"  media="screen and (min-width: 768px)" href="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/css/styles-l.min.css" />
<link  rel="stylesheet" type="text/css"  media="print" href="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/css/print.min.css" />




<link rel="preload" as="font" crossorigin="anonymous" href="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/fonts/opensans/regular/opensans-400.woff2" />
<link  rel="stylesheet" type="text/css" href="https://use.typekit.net/owa7fic.css" />
<link  rel="icon" type="image/x-icon" href="https://www.boostmobile.com/shop/media/favicon/stores/28/boost-mobile-favicon70x70.png" />
<link  rel="shortcut icon" type="image/x-icon" href="https://www.boostmobile.com/shop/media/favicon/stores/28/boost-mobile-favicon70x70.png" />
<link  rel="canonical" href="https://www.boostmobile.com/shop/customer/account" />
<!--PzcIsEeK8UOH5voyy2sk0my3WD34kadY-->            <!-- NO Pixel ID is configured, please goto Admin -->
    
    
    </head>
    <body data-container="body"
          data-mage-init='{"loaderAjax": {}, "loader": { "icon": "https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/images/loader-2.gif"}}'
        id="html-body" class="boost day boost-infinite harmony account dop-customer customer-account-index page-layout-2columns-left">
        


<div class="cookie-status-message" id="cookie-status">
    The store will not work correctly in the case when cookies are disabled.</div>




    <noscript>
        <div class="message global noscript">
            <div class="content">
                <p>
                    <strong>JavaScript seems to be disabled in your browser.</strong>
                    <span>
                        For the best experience on our site, be sure to turn on Javascript in your browser.                    </span>
                </p>
            </div>
        </div>
    </noscript>





                            <link rel="stylesheet" type="text/css" media="all" href="/etc.clientlibs/dopweb/clientlibs/clientlib-grid.min.css"/>
                    <link rel="stylesheet" type="text/css" media="all" href="/etc.clientlibs/dopweb/clientlibs/clientlib-harmony.min.css"/>
                    <link rel="stylesheet" type="text/css" media="all" href="/etc.clientlibs/dopweb/components/text/clientlibs.min.css"/>
                    <link rel="stylesheet" type="text/css" media="all" href="/etc.clientlibs/dopweb/clientlibs/clientlib-site.min.css"/>
                    <link rel="stylesheet" type="text/css" media="all" href="/etc.clientlibs/dopweb/components/structure/header-v2/v1/header/clientlibs.min.css"/>
                                        
            <div class="page-wrapper"><div data-bind="scope: 'account-suspended-messages'" style="display: none !important;" class="customer-suspeded-account suspended" id="suspended_account_message">
    <span>Your account is suspended. Please make a payment.</span>
    <div class="suspended-activation">
                    <a id="suspended-make-payment-Btn" class=" make-payment-Btn" href="https://www.boostmobile.com/shop/customer/payment/onetime/">
                Make a payment            </a>
        <!--    <div class="close-btn" id="close-suspended-message"></div>-->
    </div>
</div>

<div class="service-message suspended-service-message" id="service_active_message" style="display: none !important;">
    <span>Please give us a few minutes to reestablish your service.</span>
</div>


<div class="headerSection">                            <!--
<div class="block_identifier">
    <p> Block Indentifier : aem_content_my_account_header </p>
    <p> Block Title : Aem Content My Account Header </p>
    <p> Block ID : 2335 </p>
    <p> Block Update Time : Sep 05, 2024 04:36:24 AM </p>
</div>
--><div id="container-53e8c495d0" class="cmp-container" style="    ">
        

        
            


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
    
    <div class="container responsivegrid boost aem-GridColumn aem-GridColumn--default--12">


    

    

    
    

    
    
    

    
    

    
    

    
    

    <div id="container-f9757e5ffe" class="cmp-container" style="  ">
        
        <div class="header-v2 header">



  <!-- AEM Harmony Header -->
  <header class="harmony-header header">
<script src="https://assets.adobedtm.com/f4211b096882/6c5786ba93a2/launch-7f039e29dde5.min.js"></script>
    <div class="container-header-fluid transparent-to-opaque">
      <div class="cmp-container utility-header">
        
          <div class="utilityTopnav">
            
    <ul class="parent-list auth-links-menu top-nav " data-page-path="/content/experience-fragments/harmony/us/en/site/header/my-account-header">
        <!-- <li class="active search-container mobile-header-search">
            <div class="input-box" style="position: absolute; top: -12px; right: 0; display: inline-block;">
                <span class="icon-custom icon-search-day-inactive search-icon-placeholder"></span>
                <input type="text" placeholder="Search" aria-label="search">
                <div class="close"></div>
            </div>
        </li> -->
        
            
                
                <li class="navLink showhidetopnav auth-showhide-links" data-display-link-prop="alwaysShow">
                    <div class="link-content__container">
                        
    <a href="https://www.boostmobile.com/locations/locator/">Find a Store</a>

                        
                    </div>

                    
                </li>
            
            
        
            
                
                <li class="navLink showhidetopnav auth-showhide-links" data-display-link-prop="alwaysShow">
                    <div class="link-content__container">
                        
    <a href="/shop/activate/sim/start/">Activate</a>

                        
                    </div>

                    
                </li>
            
            
        
            
                
                <li class="navLink showhidetopnav auth-showhide-links" data-display-link-prop="alwaysShow">
                    <div class="link-content__container">
                        
    <a href="https://help.boostmobile.com/">Support</a>

                        
                    </div>

                    
                </li>
            
            
        
    </ul>


    


          </div>
        
        
      </div>
      <div class="header__bottom-section">
        <div class="logo-container">
          <div id="close-menu">✕</div>
          
<div data-cmp-is="image" data-cmp-lazy data-cmp-lazythreshold="0" data-cmp-src="https://s7d1.scene7.com/is/image/dish/Boost%20Mobile%20Logo%20-%20Orange@4x?ts=1725463091006&amp;fmt=png-alpha&amp;dpr=off" data-cmp-dmimage data-asset="/content/dam/harmony/us/en/logos/Boost Mobile Logo - Orange@4x.png" data-title="Boost Mobile logo" data-cmp-filereference="/content/dam/harmony/us/en/logos/Boost Mobile Logo - Orange@4x.png" id="image-7f6a219124" data-cmp-hook-image="imageV3" class="cmp-image ddImage" data-image-bottom-margin-desktop="cmp-image__bm-0" data-image-bottom-margin-tablet="cmp-image__bm-0" data-image-bottom-margin-mobile="cmp-image__bm-0" data-image-class=" ddImage" itemscope itemtype="http://schema.org/ImageObject">
    <a class="cmp-image__link" href="/shop/customer/account/">
        
        <img src="https://s7d1.scene7.com/is/image/dish/Boost%20Mobile%20Logo%20-%20Orange@4x?ts=1725463091006&fmt=png-alpha&dpr=off" loading="lazy" class="cmp-image__image" aria-label="Boost Mobile logo" itemprop="contentUrl" width="713" height="277" data-cmp-hook-image="image" alt="Boost Mobile logo"/>
        
    </a>
    
    
</div>

    


          


    


        </div>

        
    <ul class="parent-list auth-links-menu top-nav " data-page-path="/content/experience-fragments/harmony/us/en/site/header/my-account-header">
        <!-- <li class="active search-container mobile-header-search">
            <div class="input-box" style="position: absolute; top: -12px; right: 0; display: inline-block;">
                <span class="icon-custom icon-search-day-inactive search-icon-placeholder"></span>
                <input type="text" placeholder="Search" aria-label="search">
                <div class="close"></div>
            </div>
        </li> -->
        
            
                
                <li class="navLink showhidetopnav auth-showhide-links" data-display-link-prop="showToLoggedInUsersOnly">
                    <div class="link-content__container">
                        
    <a href="/shop/customer/account/">Dashboard</a>

                        
                    </div>

                    
                </li>
            
            
        
            
                
                <li class="navLink showhidetopnav auth-showhide-links" data-display-link-prop="showToLoggedInUsersOnly">
                    <div class="link-content__container">
                        
    <a href="/shop/customer/payment">Billing</a>

                        
                    </div>

                    
                </li>
            
            
        
            
                
                <li class="navLink showhidetopnav auth-showhide-links" data-display-link-prop="showToLoggedInUsersOnly">
                    <div class="link-content__container">
                        
    <a href="/shop/customer/account/profile">Settings</a>

                        
                    </div>

                    
                </li>
            
            
        
    </ul>


    



        <div class="left-navigation-extra">
          <ul>
            <li>
              


    

    

    
    

    
    
    

    
    

    
    

    
    

    <div id="container-0c91a31781" class="cmp-container" style="  ">
        
        <div class="button cmp-button__ghost">

    








  <a id="button-a293178702" class="cmp-button" href="tel:8335026678" target="_self" data-mobile-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-tablet-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-desktop-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}">
    
    

    <span class="cmp-button__left">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="25" height="24" viewBox="0 0 25 24">  <image x="3" y="3" width="18" height="18" xlink:href="data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAACWklEQVQ4jWJkYGBgEBdXzf///78AiA0C////f/D69d2FMD5BwMDAAAAAAP//YhQRUbFnZmY8gK6YiemPwvPn9x8SZQoDAwMAAAD//2JiZGT8CHVHwMuXtxn//WMwBPH+/WM2INo5DAwMAAAAAP//YmJmZv4A0cioAKJ///79AMJncCDaFAYGBgAAAAD//2J68eIGSOMHRsb/yBo/MDIygA0mCjAwMAAAAAD//2KCemsBAwODg4CAojwbG8t+BgYGgb9/GUBixAEGBgYAAAAA//8CG/T3L8MGRkZGATY25guMjIwG//79S3j79s5Gok1hYGAAAAAA//+CY3Fxlf3i4qr/RUVV80nWzMDAAAAAAP//gnoN7KoGEM3IiEhPRAMGBgYAAAAA//9Cd9V6kKvExNT0STKEgYEBAAAA//8Cp2wYEBBQEGBnZz0PYv/8+cfhwwciEyQDAwMAAAD//0IxCARArmFk/A9K6R9wGSYuruL/5w8oOP5eAMszMDAAAAAA///CMIiQYWJiqvMZGRkSkJR/+PePoQEAAAD//4IHNjJ49erWxf//GcEJFJQkYDEJM+T///8NjIz/HRkYGApA4kxMDAEAAAAA///C6iIYkJDQUPj//898BgawoaCsJAAy5NWrO41I3tzPwMDIAAAAAP//YsZn0Jcvbz58/fpuIReXyANGRgYLkEGMjIwKPDzCDJycQhxsbHwfWViYIhgYGBkAAAAA///C6yJ0ICqqFs/E9B8UPqgZmoHhAAAAAP//IskgZC//+/fbgJGRSR5cIDIwbQAAAAD//wMAMTufJ5WW+H4AAAAASUVORK5CYII="/></svg>
    </span>
    <span class="cmp-button__text">833-502-6678</span>
    


  </a>

  <input id="redirect-button-a293178702" class="redirect" name="redirect" type="hidden" value="tel:8335026678"/>






</div>
<div class="button cmp-harmony__cartIcon">

    









<a data-cart-functionality="true" class="cart-functionality cmp-button__left" href="/shop/checkout/cart/">
  <span class="empty-cart-icon-img">
    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="40" height="40" fill="white"/><mask id="mask0_12_3" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="8" y="8" width="24" height="24"><rect x="8" y="8" width="24" height="24" fill="#D9D9D9"/></mask><g mask="url(#mask0_12_3)"><path d="M14.1538 29.5577C13.668 29.5577 13.2548 29.3875 12.9144 29.0471C12.5741 28.7067 12.4039 28.2936 12.4039 27.8077C12.4039 27.3218 12.5741 26.9087 12.9144 26.5683C13.2548 26.2279 13.668 26.0577 14.1538 26.0577C14.6397 26.0577 15.0529 26.2279 15.3933 26.5683C15.7337 26.9087 15.9038 27.3218 15.9038 27.8077C15.9038 28.2936 15.7337 28.7067 15.3933 29.0471C15.0529 29.3875 14.6397 29.5577 14.1538 29.5577ZM23.8461 29.5577C23.3602 29.5577 22.9471 29.3875 22.6067 29.0471C22.2663 28.7067 22.0961 28.2936 22.0961 27.8077C22.0961 27.3218 22.2663 26.9087 22.6067 26.5683C22.9471 26.2279 23.3602 26.0577 23.8461 26.0577C24.332 26.0577 24.7452 26.2279 25.0855 26.5683C25.4259 26.9087 25.5961 27.3218 25.5961 27.8077C25.5961 28.2936 25.4259 28.7067 25.0855 29.0471C24.7452 29.3875 24.332 29.5577 23.8461 29.5577ZM13.0154 13.75L15.55 19.0577H22.3673C22.425 19.0577 22.4763 19.0433 22.5211 19.0144C22.566 18.9856 22.6045 18.9455 22.6365 18.8942L25.3192 14.0192C25.3577 13.9487 25.3609 13.8862 25.3288 13.8317C25.2968 13.7772 25.2423 13.75 25.1654 13.75L13.0154 13.75ZM12.2961 12.2501H26.1807C26.5897 12.2501 26.899 12.4241 27.1086 12.7722C27.3182 13.1202 27.3281 13.4757 27.1384 13.8385L23.9346 19.6423C23.7705 19.9307 23.5535 20.1554 23.2836 20.3163C23.0138 20.4772 22.7179 20.5577 22.3961 20.5577H15.1L13.9423 22.6731C13.891 22.75 13.8894 22.8333 13.9375 22.9231C13.9856 23.0128 14.0577 23.0577 14.1538 23.0577H25.5961V24.5577H14.1538C13.4872 24.5577 12.9862 24.2702 12.651 23.6952C12.3157 23.1202 12.3039 22.5461 12.6154 21.9731L14.0423 19.4077L10.4039 11.75H8.50002V10.25H11.3461L12.2961 12.2501Z" fill="#171725"/></g></svg>
  </span>
  <span class="cmp-button__left cart-icon-img" style="display: none">
    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="40" height="40" fill="white"/><mask id="mask0_12_8" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="8" y="8" width="24" height="24"><rect x="8" y="8" width="24" height="24" fill="#D9D9D9"/></mask><g mask="url(#mask0_12_8)"><path d="M14.1538 29.5577C13.668 29.5577 13.2548 29.3875 12.9144 29.0471C12.5741 28.7067 12.4039 28.2936 12.4039 27.8077C12.4039 27.3218 12.5741 26.9087 12.9144 26.5683C13.2548 26.2279 13.668 26.0577 14.1538 26.0577C14.6397 26.0577 15.0529 26.2279 15.3933 26.5683C15.7337 26.9087 15.9038 27.3218 15.9038 27.8077C15.9038 28.2936 15.7337 28.7067 15.3933 29.0471C15.0529 29.3875 14.6397 29.5577 14.1538 29.5577ZM23.8461 29.5577C23.3602 29.5577 22.9471 29.3875 22.6067 29.0471C22.2663 28.7067 22.0961 28.2936 22.0961 27.8077C22.0961 27.3218 22.2663 26.9087 22.6067 26.5683C22.9471 26.2279 23.3602 26.0577 23.8461 26.0577C24.332 26.0577 24.7452 26.2279 25.0855 26.5683C25.4259 26.9087 25.5961 27.3218 25.5961 27.8077C25.5961 28.2936 25.4259 28.7067 25.0855 29.0471C24.7452 29.3875 24.332 29.5577 23.8461 29.5577ZM13.0154 13.75L15.55 19.0577H22.3673C22.425 19.0577 22.4763 19.0433 22.5211 19.0144C22.566 18.9856 22.6045 18.9455 22.6365 18.8942L25.3192 14.0192C25.3577 13.9487 25.3609 13.8862 25.3288 13.8317C25.2968 13.7772 25.2423 13.75 25.1654 13.75L13.0154 13.75ZM12.2961 12.2501H26.1807C26.5897 12.2501 26.899 12.4241 27.1086 12.7722C27.3182 13.1202 27.3281 13.4757 27.1384 13.8385L23.9346 19.6423C23.7705 19.9307 23.5535 20.1554 23.2836 20.3163C23.0138 20.4772 22.7179 20.5577 22.3961 20.5577H15.1L13.9423 22.6731C13.891 22.75 13.8894 22.8333 13.9375 22.9231C13.9856 23.0128 14.0577 23.0577 14.1538 23.0577H25.5961V24.5577H14.1538C13.4872 24.5577 12.9862 24.2702 12.651 23.6952C12.3157 23.1202 12.3039 22.5461 12.6154 21.9731L14.0423 19.4077L10.4039 11.75H8.50002V10.25H11.3461L12.2961 12.2501Z" fill="#171725"/><circle cx="27.8163" cy="12.234" r="4" fill="#FF5600"/></g></svg>
  </span>
</a>



</div>
<div class="button cmp-button__b-ghost cmp-harmony__signIn">
    






    <a data-validate-hcaptcha="true" data-callback="onSubmit" data-size="invisible" id="sign-in" class="h-captcha cmp-button  " href="/shop/customer/account/login/" target="_self" data-mobile-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-tablet-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-desktop-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}">
        
    

        
        <span class="cmp-button__text">Sign In</span>
        
    </a>

    <input id="redirect-sign-in" class="redirect" name="redirect" type="hidden" value="/shop/customer/account/login/"/>





</div>
<div class="button cmp-button__b-ghost cmp-button__neutral cmp-harmony__signOut">
    






    <a data-validate-hcaptcha="true" data-callback="onSubmit" data-size="invisible" id="sign-out" class="h-captcha cmp-button  " href="/shop/customer/account/logout/" target="_self" data-mobile-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-tablet-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-desktop-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}">
        
    

        
        <span class="cmp-button__text">Sign Out</span>
        
    </a>

    <input id="redirect-sign-out" class="redirect" name="redirect" type="hidden" value="/shop/customer/account/logout/"/>





</div>

        
    </div>


            </li>
            

    
    
        <li class="my-account__container">
            <a id="myaccount" href="javascript:void(0)">
                
                <div id="burger-menu-right" style="display: block;">
                    <div></div>
                    <div></div>
                    <div></div>
                </div>
            </a>
        </li>
        <div id="myModal" class="my-account-popup">
            <!-- Modal content -->
            <div class="modal-content  ">
                <button class="modal__close">✕</button>
                
                <nav>
                    <ul data-page-path="/content/experience-fragments/harmony/us/en/site/header/my-account-header" class="auth-links-menu">
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/shop/devices/handsets'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="/shop/devices/handsets">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Phones</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/content/harmony/us/en/plans.html'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="/plans">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Plans</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/content/harmony/us/en/deals.html'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="/deals">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Deals</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/content/harmony/us/en/our-network.html'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="/our-network">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Network</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='https://www.boostmobile.com/locations/locator/'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="https://www.boostmobile.com/locations/locator/">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Find a Store</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/shop/activate/sim/start/'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="/shop/activate/sim/start/">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Activate</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                            
                                <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/content/harmony/us/en/support.html'">
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a href="/support">
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Support</a>
                                    </span>
                                
                            </div>
                            
                            
                            
                            </li>
                        
                            
                            
                                <li data-display-link-prop="alwaysShow" class="user-menu__links auth-showhide-links">
                            
                            
                            <div class="link-content__container">
                                    <span class="link-title">
                                        <a>
                                            <img src="/content/dam/boost/web/icons/MX_30x30.png" alt="/content/dam/boost/web/icons/MX_30x30.png"/>
                                            Account</a>
                                    </span>
                                <span class="icon-container">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down chevron-down" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                                        </svg>
                                    </span>
                            </div>
                            
                            
                            <ul class="sub-links__container">
                                
                                    
                                    <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/shop/customer/account/'">
                                        <a href="/shop/customer/account/" class="user-menu__sub-link">
                                            <img src="/content/dam/boost/web/icons/dashboard2.png" alt="/content/dam/boost/web/icons/dashboard2.png"/>
                                            Dashboard</a>
                                        
                                        
                                    </li>
                                
                                    
                                    <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/shop/customer/payment'">
                                        <a href="/shop/customer/payment" class="user-menu__sub-link">
                                            <img src="/content/dam/boost/web/icons/billing2.png" alt="/content/dam/boost/web/icons/billing2.png"/>
                                            Billing</a>
                                        
                                        
                                    </li>
                                
                                    
                                    <li data-display-link-prop="alwaysShow" class="auth-showhide-links " onclick="location.href='/shop/customer/account/profile'">
                                        <a href="/shop/customer/account/profile" class="user-menu__sub-link">
                                            <img src="/content/dam/boost/web/icons/settings2.png" alt="/content/dam/boost/web/icons/settings2.png"/>
                                            Settings</a>
                                        
                                        
                                    </li>
                                

                            </ul>
                            </li>
                        
                        <!-- Language Dropdown -->
                        

                        <!-- Language Dropdown End -->
                    </ul>
                </nav>
                <div class="auth">

                    <div class="signIn">
                        <div class="button">

    








  <a id="button-6a4ddc7f81" class="cmp-button" href="/shop/customer/account/login/" target="_self" data-mobile-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-tablet-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-desktop-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}">
    
    

    
    <span class="cmp-button__text">Sign In</span>
    


  </a>

  <input id="redirect-button-6a4ddc7f81" class="redirect" name="redirect" type="hidden" value="/shop/customer/account/login/"/>






</div>

                        


    


                    </div>
                    
                        <div class="signOut">
                            <div class="button">

    








  <a id="button-923b9f0cd6" class="cmp-button" href="/shop/customer/account/logout/" target="_self" data-mobile-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-tablet-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}" data-desktop-json="{&#34;margin-bottom&#34;:&#34;0Rem&#34;}">
    
    

    
    <span class="cmp-button__text">Sign Out</span>
    


  </a>

  <input id="redirect-button-923b9f0cd6" class="redirect" name="redirect" type="hidden" value="/shop/customer/account/logout/"/>






</div>

                            


    


                        </div>
                    
                    


                </div>
            </div>
        </div>
    


    

          </ul>
        </div>
      </div>

    </div>
  </header>
</div>

        
    </div>

</div>

    
</div>

        
    </div>                    
            </div>

<main id="maincontent" class="page-main">


<a id="contentarea" tabindex="-1"></a>
<div class="page messages"><div data-placeholder="messages"></div>

<div data-bind="scope: 'messages'">
    <!-- ko if: cookieMessages && cookieMessages.length > 0 -->
        <div aria-atomic="true" role="alert" data-bind="foreach: { data: cookieMessages, as: 'message' }" class="messages">
            <div data-bind="attr: {
                class: 'message-' + message.type + ' ' + message.type + ' message',
                'data-ui-id': 'message-' + message.type
            }">
                <div data-bind="html: $parent.prepareMessageForHtml(message.text)"></div>
                <div class="dashboard message hide">
                    <div class="add-msg ">
                        <button class="icon--close" data-index="close">
                            <span>Close</span>
                        </button>
                    </div>
                </div>
            </div>

        </div>
    <!-- /ko -->

    <!-- ko if: messages().messages && messages().messages.length > 0 -->
        <div aria-atomic="true" role="alert" class="messages" data-bind="foreach: {
            data: messages().messages, as: 'message'
        }">
            <div data-bind="attr: {
                class: 'message-' + message.type + ' ' + message.type + ' message',
                'data-ui-id': 'message-' + message.type
            }">
                <div data-bind="html: $parent.prepareMessageForHtml(message.text)"></div>
                <div class="dashboard message hide">
                    <div class="add-msg ">
                        <button class="icon--close" data-index="close">
                            <span>Close</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    <!-- /ko -->
</div>


</div><div class="columns"><div class="column main">

<input name="form_key" type="hidden" value="fqrrdaaepFmQnBxr" />



    
<div class="block-dashboard-info">
    <div id="suspended-account-modal" style="display: none">
        <p class="icon active-lines-icon"></p>
        <div class="modal-inner-content">
            <p class="description"> Please make a payment or change your plan to resume service.</p>
            <p class="description"> While suspended, you can update payment methods, change your plan, or manage extras. Other account management features may be limited.</p>
            <input name="isMultilineCustomer" id="suspendedAccountLinesCount" type="hidden" value="2"/>
        </div>
    </div>
    <!--    PIN Section-->
        <div class="block-content">
                                <div class="user-block payment dashboard-box payment-due-info" id="paymentinfo"></div>
            </div> <!-- block-content ends -->
        <div class="block-dashboard-orders">

                        <div class="other-lines">
                
                <div class="items ">
                    <div class="user-phone-number">
                        <div class="user-line-number">
                                                            <label>My Line</label>
                                <strong>
                                                                            (408) 569-4325                                                                    </strong>
                                                            
                                                    </div>
                                                    <div class="menu-featured-categories-container">
                                <div id="line-item-categories" class="line-item-categories">
                                    <div class="menu-item-has-children">
                                        <div class="customer-welcome">
                                            <button
                                                    data-mage-init='{"dropdown":{}}'
                                                    data-toggle="dropdown"
                                                    class="get-action"
                                                    data-action="customer-menu-toggle">
                                                <span>Additional Actions</span>
                                            </button>
                                            <ul data-target="dropdown" class="sub-menu-new">
                                                <li>
                                                    <a href="https://www.boostmobile.com/shop/switchplan/index/index/?sId=dafa0ca5-f779-4cd7-b30d-697a778aeaf8"
                                                       >
                                                        Change Plan                                                    </a>
                                                </li>
                                                                                                    <li id="suspended-account-addextra" >
                                                        <a href="https://www.boostmobile.com/shop/switchplan/extras/add/"
                                                           >Add Extras</a>
                                                    </li>
                                                                                                <li>
                                                    <a id="suspended-account-manageextra" href="https://www.boostmobile.com/shop/customer/line/details/sId/dafa0ca5-f779-4cd7-b30d-697a778aeaf8/"
                                                       >Manage Extras</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                                                                                                            <span class="toggle active"></span>                                             </div>
                    <!-- end of user-phone-number -->
                    <!-- My Line content starts-->
                                                                        <div class="item-wrapper active">

                                <div class="item" style="display: none">
                                    <h5>Line Details</h5>
                                                                                                                <strong class="sub-title"></strong>
                                                                        <div class="summary-box my-usage-details box-content line-detail-section">
                                        <div class="usage-info">
                                                                                            <div class="control">
                                            <span class="label">
                                               Device                                            </span>
                                                    <span class="value">
                                               OnePlus CPH2515                                            </span>
                                                </div>
                                                                                        <div class="control">
                                        <span class="label">
                                            Plan                                        </span>
                                                <span class="value">
                                            $25 UNL w/Autopay 30GB of 5G/4G Data (TE)                                        </span>
                                            </div>
                                        </div>
                                    </div>
                                                                       <div class="product-item-photo no-display">
                                        <a href="https://www.boostmobile.com/shop/customer/line/details/sId/dafa0ca5-f779-4cd7-b30d-697a778aeaf8/">
                                            <img src="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/images/product-image-frame.png"
                                                 alt="Apple iPhone XS"/>
                                        </a>
                                    </div>
                                                                            <div class="action-toolbar">
                                            <a class="primary link arrow"
                                               href="https://www.boostmobile.com/shop/customer/line/details/sId/dafa0ca5-f779-4cd7-b30d-697a778aeaf8/">Manage Line Details</a>
                                        </div>
                                                                                                      </div>
                                <div class="wrapper">
                                    <div class="item-info">
                                        <div class="plan-heading device-section">
                                            <span class="text">Device</span>
                                        </div>
                                                                                    OnePlus CPH2515                                        <!--                                                                                    <div>
                                                    <span class="label">
                                                                                                            </span>
                                                <span class="value">
                                                                                                            </span>
                                            </div>
                                        -->                                                                                                                                                                            <div class="upgrade-eligibility"></div>
                                                <div class="extras-name">
                                                    <a class="price-upgrade-text price-upgrade-text" href="https://www.boostmobile.com/shop/buy/devices/index/?sId=dafa0ca5-f779-4cd7-b30d-697a778aeaf8&tNetwork=213" class="">
                                                        <span class="price-upgrade-text">Get an upgrade</span>
                                                    </a>
                                                </div>
                                                                            </div>
                                    <div class="item-info">
                                        <div class="plan-heading">
                                            <h2 class="text">Plan</h2>
                                                                                    </div>
                                        <div>
                                            <h3 class="heading">
                                                $25 UNL w/Autopay 30GB of 5G/4G Data (TE)                                                
                                            </h3>
                                            <div>
                                                <div class="plan-active-name"><ul>
<li>Unlimited Talk &amp; Text</li>
<li>Unlimited Mobile Data*</li>
<li>New Customers </li>
<li>Existing Customers* </li>
<li>AutoPay Required </li>
</ul></div>
                                                <div class="plan-active-value">25</div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <!-- data usage wrapper -->
                                <div class="wrapper"><!-- end of data usage wrapper -->
                                    
<div class="item-info" id="dataUsage" data-bind="scope: 'usageItems'">
    <!-- ko if: isLoadingData() -->
        <div class="data-usage-wrapper">
            <div class="data-usage-view skeleton"></div>
            <div class="data-usage-text">
                <div class="usage-text skeleton"></div>
                <div class="add-more skeleton"></div>
                <div class="add-data-button-wrapper skeleton"></div>
            </div>
        </div>
    <!-- /ko -->
    <!-- ko ifnot: isLoadingData() -->
        <!-- ko if: isMnoCustomer() -->
            <div class="plan-heading usage" data-bind="visible: !isLoadingData()" style="display: none">
                <h3 class="text">Data Usage</h3>
            </div>
            <div data-bind="visible: !isLoadingData()" style="display: none">Data usage details coming soon.</div>
        <!--/ko-->
        <!-- ko ifnot: isMnoCustomer() -->
            <div class="plan-heading usage" data-bind="visible: !isLoadingData()" style="display: none">
                <h3 class="text">Data Usage</h3>
                <a id="browse-view-all-usage" href="https://www.boostmobile.com/shop/customer/data/usage/">
                    <span class="plan-text">View All Usage</span>
                </a>
            </div>

            <!-- ko foreach: elems() -->
                <!-- ko template: getTemplate() --><!-- /ko -->
            <!-- /ko -->
        <!--/ko-->
    <!--/ko-->
</div>


                                    <div class="item-info">
                                        <div class="plan-heading extras">
                                            <span class="text">Extras</span>
                                                                                            <a id="browse-all-extra" href="https://www.boostmobile.com/shop/switchplan/extras/add/sId/dafa0ca5-f779-4cd7-b30d-697a778aeaf8/"><span class="plan-text">Browse All Extras</span></a>
                                                                                    </div>
                                        <div class="extras-plan">
                                            <ul>
                                                                                                                                                                                                                                                <li class="li-extras">
                                                                        <div class="extras-name">Premium  Visual Voicemail</div>

                                                                        <div class="summary-box my-usage-details ">
                                                                            <div class="usage-info usageData">
                                                                                <div class="bolton_data "
                                                                                     data-sku="001926"></div>
                                                                            </div>
                                                                            <div class="user-data-month">
                                                                                <div class="user-block"></div>
                                                                            </div>
                                                                        </div>
                                                                    </li>
                                                                                                                                                                                                                                                                                                                                                                                                    </ul>
                                        </div>
                                                                            </div>
                                </div>
                            </div><!-- end of item-wrapper -->
                                                                <!-- My Line Content End-->
                                    </div> <!-- closing of items -->
                                </div> <!-- closing of multiline-wrapper-->
                    
                    <div class="other-lines">
                <h3>Other lines and devices</h3>
                                    <div class="add-data-button-wrapper-add-line">
                        <a href="https://www.boostmobile.com/shop/multiline/getstarted/">
                            <button class="action primary add-more-button">Add a new line</button>
                        </a>
                    </div>
                            </div>
                            <div class="items help-and-support">
                <!--
<div class="block_identifier">
    <p> Block Indentifier : customer_account-Block02 </p>
    <p> Block Title : Block02 </p>
    <p> Block ID : 220 </p>
    <p> Block Update Time : Jul 22, 2024 10:58:21 AM </p>
</div>
--><div data-content-type="html" data-appearance="default" data-element="main" data-decoded="true"><div id="container-e453b9619a" class="cmp-container day ">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
    
    <div class="container responsivegrid cmp-container__radius-15 cmp-container__elevation-none aem-GridColumn aem-GridColumn--default--12">


     

     

     

     

    
    
    

    
    

    
    

    
    

    <div id="container-cb946310c2" class="cmp-container ">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
    
    <div class="text aem-GridColumn aem-GridColumn--default--12">
<div id="text-c86c0fbb76" class="cmp-text">
    <h4 style="margin: 16.0px 0;"><span class="cmp-text__cinder">Help &amp; Support</span></h4>

</div>

    

</div>
<div class="container responsivegrid cmp-container__padding-0 container-border-smoke aem-GridColumn aem-GridColumn--default--12">


     

     

     

     

    
    
    

    
    

    
    

    
    

    <div id="container-86a88141df" class="cmp-container " style="  border-top: 2.0px solid var(--container-border-color)">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 aem-Grid--mobile--12 ">
    
    <div class="text aem-GridColumn--default--none aem-GridColumn--mobile--none aem-GridColumn aem-GridColumn--default--11 aem-GridColumn--offset--default--0 aem-GridColumn--offset--mobile--0 aem-GridColumn--mobile--10">
<div id="text-78462d08d3" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Activate Your Phone" href="https://www.boostmobile.com/support/activation/activate-your-device"><span class="cmp-text__no-hover"><span class="cmp-text__cinder">How do I activate my phone on Boost Mobile's networks?</span></span></a></p>

</div>

    

</div>
<div class="text aem-GridColumn--default--none aem-GridColumn aem-GridColumn--offset--default--0 aem-GridColumn--default--1">
<div id="text-1d3e84f140" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Activate your Phone" href="https://www.boostmobile.com/support/activation/activate-your-device"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">&gt;</span></span></a></p>

</div>

    

</div>

    
</div>

    </div>


     
</div>
<div class="container responsivegrid cmp-container__padding-0 container-border-smoke cmp-container__margin-4 aem-GridColumn aem-GridColumn--default--12">


     

     

     

     

    
    
    

    
    

    
    

    
    

    <div id="container-2baa2df2c0" class="cmp-container " style="margin-top : 0.10px;  border-top: 2.0px solid var(--container-border-color)">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 aem-Grid--mobile--12 ">
    
    <div class="text aem-GridColumn--default--none aem-GridColumn--mobile--none aem-GridColumn aem-GridColumn--default--11 aem-GridColumn--offset--default--0 aem-GridColumn--offset--mobile--0 aem-GridColumn--mobile--10">
<div id="text-d591c9ebba" class="cmp-text">
    <p style="margin-top: 16.0px;"><a href="https://www.boostmobile.com/support/activation/finish-activation"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">I activated online, do I need to do anything else to set up my phone?</span></span></a></p>

</div>

    

</div>
<div class="text aem-GridColumn--default--none aem-GridColumn aem-GridColumn--offset--default--0 aem-GridColumn--default--1">
<div id="text-e728c05dc3" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Finish Activation" href="https://www.boostmobile.com/support/activation/finish-activation"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">&gt;</span></span></a></p>

</div>

    

</div>

    
</div>

    </div>


     
</div>
<div class="container responsivegrid cmp-container__padding-0 container-border-smoke cmp-container__margin-4 aem-GridColumn aem-GridColumn--default--12">


     

     

     

     

    
    
    

    
    

    
    

    
    

    <div id="container-c24cf5b189" class="cmp-container " style="  border-top: 2.0px solid var(--container-border-color)">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 aem-Grid--mobile--12 ">
    
    <div class="text aem-GridColumn--default--none aem-GridColumn--mobile--none aem-GridColumn aem-GridColumn--default--11 aem-GridColumn--offset--default--0 aem-GridColumn--offset--mobile--0 aem-GridColumn--mobile--10">
<div id="text-794a89b76f" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Installing Your SIM" href="https://www.boostmobile.com/support/activation/install-your-sim"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">How do I install the SIM card in my phone?</span></span></a></p>

</div>

    

</div>
<div class="text aem-GridColumn--default--none aem-GridColumn aem-GridColumn--offset--default--0 aem-GridColumn--default--1">
<div id="text-43800d1378" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Installing Your SIM" href="https://www.boostmobile.com/support/activation/install-your-sim"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">&gt;</span></span></a></p>

</div>

    

</div>

    
</div>

    </div>


     
</div>
<div class="container responsivegrid cmp-container__padding-0 container-border-smoke cmp-container__margin-4 aem-GridColumn aem-GridColumn--default--12">


     

     

     

     

    
    
    

    
    

    
    

    
    

    <div id="container-9bb864266a" class="cmp-container " style="  border-top: 2.0px solid var(--container-border-color)">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 aem-Grid--mobile--12 ">
    
    <div class="text aem-GridColumn--default--none aem-GridColumn--mobile--none aem-GridColumn aem-GridColumn--default--11 aem-GridColumn--offset--default--0 aem-GridColumn--offset--mobile--0 aem-GridColumn--mobile--10">
<div id="text-9d70fc60d0" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Make a Payment" href="https://www.boostmobile.com/support/account/payment"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">How do I make a payment?</span></span></a></p>

</div>

    

</div>
<div class="text aem-GridColumn--default--none aem-GridColumn aem-GridColumn--offset--default--0 aem-GridColumn--default--1">
<div id="text-f899d0bf6f" class="cmp-text">
    <p style="margin-top: 16.0px;"><a title="Making a Payment" href="https://www.boostmobile.com/support/account/payment"><span class="cmp-text__cinder"><span class="cmp-text__no-hover">&gt;</span></span></a></p>

</div>

    

</div>

    
</div>

    </div>


     
</div>

<div class="text cmp-text__margin-32 aem-GridColumn aem-GridColumn--default--12">
<div id="text-56501b1811" class="cmp-text">
    <p style="text-align: center;margin-top: 32.0px;"><a title="View all FAQs" href="/support"><span class="cmp-text__text-14">View more articles</span></a></p>

</div>

    

</div>

    
</div>

    </div>


     
</div>

    
</div>

    </div></div>    </div>
            </div><!-- block-dashboard-orders ends -->
</div> <!-- block-dashboard-info ends -->

<!--
<div class="block_identifier">
    <p> Block Indentifier : device-upgrade-address-incomplete-modal </p>
    <p> Block Title : Boost Device Upgrade Address Incomplete Modal </p>
    <p> Block ID : 896 </p>
    <p> Block Update Time : Aug 05, 2024 04:45:07 AM </p>
</div>
--><div id="device-upgrade-address-incomplete" style="display:none"><h5 class="title">Address Needed</h5><p>In order to complete this purchase, please enter your full address.</p></div><div id="device-upgrade-multiple-devices" class="hidden"><!--
<div class="block_identifier">
    <p> Block Indentifier : device-upgrade-multiple-devices-modal </p>
    <p> Block Title : Boost Device Upgrade Multiple Devices Modal </p>
    <p> Block ID : 899 </p>
    <p> Block Update Time : Oct 06, 2022 03:39:38 AM </p>
</div>
-->
<style>
  #html-body [data-pb-style=BUMENUN] {
    justify-content: flex-start;
    display: flex;
    flex-direction: column;
    background-position: left top;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: scroll
  }

  #html-body [data-pb-style=ST3A0U6] {
    text-align: center
  }

  #html-body [data-pb-style=M169VLV] {
    display: inline-block
  }

  #html-body [data-pb-style=VNLATT9] {
    text-align: center
  }
</style>
<div data-content-type="row" data-appearance="contained" data-element="main">
  <div data-enable-parallax="0" data-parallax-speed="0.5" data-background-images="{}" data-background-type="image" data-video-loop="true" data-video-play-only-visible="true" data-video-lazy-load="true" data-video-fallback-src="" data-element="inner" data-pb-style="BUMENUN">
    <h5 class="title" data-content-type="heading" data-appearance="default" data-element="main">Thanks for upgrading!</h5>
    <div data-content-type="text" data-appearance="default" data-element="main">
      <p>We need some time to process your last request, so please try again in 24 hours.</p>
    </div>
    <div data-content-type="buttons" data-appearance="inline" data-same-width="false" data-element="main" data-pb-style="ST3A0U6">
      <div class="close-modal" data-content-type="button-item" data-appearance="default" data-element="main" data-pb-style="M169VLV">
        <div class="pagebuilder-button-primary" data-element="empty_link" data-pb-style="VNLATT9"><span data-element="link_text">Close</span></div>
      </div>
    </div>
  </div>
</div>
</div>



<div id="modal-no-cards" class="hidden" data-bind="mageInit: {
    'Magento_Ui/js/modal/modal': {
        'type': 'popup',
        'modalClass': 'no-cards-popup',
        'title': false,
        'trigger': '[data-trigger=modal-no-cards]',
        'responsive': true,
        'buttons': []
    }
}">
    <!--
<div class="block_identifier">
    <p> Block Indentifier : payment-settings-enable-autopay-modal-content-no-cards </p>
    <p> Block Title : Payment Settings Enable Autopay Modal Content No Cards </p>
    <p> Block ID : 1208 </p>
    <p> Block Update Time : May 24, 2023 04:01:08 AM </p>
</div>
--><style>#html-body [data-pb-style=XGCXPJD]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}</style>
<div data-content-type="row" data-appearance="contained" data-element="main">
   <div data-enable-parallax="0" data-parallax-speed="0.5" data-background-images="{}" data-background-type="image" data-video-loop="true" data-video-play-only-visible="true" data-video-lazy-load="true" data-video-fallback-src="" data-element="inner" data-pb-style="XGCXPJD">
      <h2 data-content-type="heading" data-appearance="default" data-element="main">Enroll in AutoPay</h2>
      <div data-content-type="html" data-appearance="default" data-element="main" data-decoded="true"><svg width="78" height="78" viewBox="0 0 78 78" fill="none" xmlns="http://www.w3.org/2000/svg">
         <circle cx="39" cy="39" r="36.3103" stroke="#FE6100" stroke-width="5.37931"/>
         <g clip-path="url(#clip0_1436_168890)">
         <path fill-rule="evenodd" clip-rule="evenodd" d="M62.2125 43.9988V51.4777C62.2125 53.7854 60.3417 55.6562 58.034 55.6562H15.3197C13.0119 55.6562 11.1411 53.7854 11.1411 51.4777V27.3348C11.1411 25.0271 13.0119 23.1562 15.3197 23.1562H41.3709C40.5809 24.3901 39.9656 25.7466 39.5598 27.1907H15.3197C15.2401 27.1907 15.1756 27.2552 15.1756 27.3348V35.0676H39.4778C39.8497 36.5069 40.4288 37.863 41.1812 39.1021H15.1756V51.4777C15.1756 51.5573 15.2401 51.6218 15.3197 51.6218H58.034C58.1135 51.6218 58.1781 51.5573 58.1781 51.4777V45.8097C59.6222 45.404 60.9786 44.7887 62.2125 43.9988Z" fill="#FE6100"/>
         <circle cx="54.0891" cy="31.2813" r="11.375" fill="#FBCD9A" stroke="#FE6100" stroke-width="2.78571"/>
         <path d="M54.3208 25.0713V32.0356H61.2851" stroke="#FE6100" stroke-width="2.78571" stroke-linecap="round" stroke-linejoin="round"/>
         </g>
         <defs>
         <clipPath id="clip0_1436_168890">
         <rect width="55.7143" height="55.7143" fill="white" transform="translate(11.1428 11.1428)"/>
         </clipPath>
         </defs>
         </svg>
      </div>
      <div data-content-type="text" data-appearance="default" data-element="main">
         <p id="RWEXSLH">To get started with AutoPay you need to have a payment method on file.</p>
      </div>
   </div>
</div>    <a class="action primary" href="https://www.boostmobile.com/shop/customer/payment/settings/?new_cc=1">
        <span>Add a Payment Method</span>
    </a>
</div>

<div id="enable-autopay-popup" class="remove-popup-effect enable-disable-autopay-popup">
    <!--
<div class="block_identifier">
    <p> Block Indentifier : payment-settings-enable-autopay-modal-content </p>
    <p> Block Title : Payment Setting Enable Autopay Modal Content </p>
    <p> Block ID : 1117 </p>
    <p> Block Update Time : Jun 12, 2024 05:30:01 AM </p>
</div>
--><div data-content-type="html" data-appearance="default" data-element="main" data-decoded="true"><div class="modal-body-content"><h1 class="modal-headline">Enable AutoPay</h1><span class="icon-autopay">&nbsp;</span><p>By enabling AutoPay, you authorize Boost Mobile to automatically charge you for your service plan (plus any additional taxes and surcharges) on the specified due date, until you cancel AutoPay. <span class="autopayWithAmount"> With Autopay enabled, you can save up to $<span class="autopayDiscount"> </span> on your payment, every month! </span></p><p class="payment-methods">Payment method: <span class="payment-method-wrapper"></span></p><a class="methods-link" href="https://www.boostmobile.com/shop/customer/payment/settings/">Enable a different method</a><form class="form enable-disable-autopay-form" method="post"><input name="form_key" type="hidden" value="fqrrdaaepFmQnBxr"><input type="hidden" name="enroll[enable]" value="1"  /><input type="hidden" name="enroll[public_hash]" value="" /><div class="modal-btns"><button type="submit" class="action btn-primary submit delete"><span>Enable AutoPay</span></button><div class="actions actions-toolbar"><button type="button" aria-label="Close" class="action secondary close-modal-cta"><span>Cancel</span></button></div></div></form></div></div></div>




<div id="newest-payment-token" class="hidden">
            <div class="payment-list-container" id="payment-list-container-1725812126-1591456341">
    <div class="payment-list">
        <div class="custom-drop-down" tabindex="0">
            <div class="payment-method-list">
                <div class="selected-label hide">Credit Card</div>
                <div class="selected-card-value">

                    <div class="card-img" ><img src="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/Magento_Payment/images/cc/vi.png" alt="VI" /></div>
                    <div class="card-value-options">
                        <div class="card-provider-wrapper">
                            <div class="card-Providers">Visa</div>
                            <div class="card-value">9937</div>
                        </div>
                        <div class="card-date ">
                                                            04/2028                                                    </div>
                                                    <div class="autopay toggle-container">
                                <label class="switch">
                                    <input type="checkbox"
                                           name="enroll"
                                           class="autoEnrollCheck"
                                           id="autopay-item-35a8603fc3954a466c1cb629b2c08d07486d07b5189eb2a542cf62d4916c4668"
                                           data-identifier="35a8603fc3954a466c1cb629b2c08d07486d07b5189eb2a542cf62d4916c4668"
                                           data-payment-method-label = "Visa ... 9937"
                                           data-enroll-enable = "1"
                                           value="1" checked />
                                    <span class="slider round"></span>
                                    <span class="autopay-status">AutoPay</span>
                                </label>
                            </div>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <div class="payment-action">
        <div class="custom-drop-down">
            <div class="payment-method-list">
                                        <div data-unique-id = 1725812126-1591456341                             data-public-hash = 35a8603fc3954a466c1cb629b2c08d07486d07b5189eb2a542cf62d4916c4668                        class="delete-icon delete-item1725812126-1591456341" tabindex="0">
                                    </div>
            </div>
    </div>
</div>
</div>
    </div><div id="add-line-error-modal-content" style="display: none">
    <div class="modal-inner-content">
        <p id="add_line_error_icon"></p>
        <p id="add_line_error_content" class="p-content"></p>
    </div>
</div>
<div id="add-line-popup"></div>

<div data-bind="scope: 'change-email'" id="modal-content">
</div>

<div data-bind="scope: 'change-email'" class="email-update-banner" id="change-email-banner" style="display: none;">
    <span id="change-email-banner-msg">Please, add your email address to complete your account setup</span>
    <a data-bind="click: changeEmail" id="id" class="add-email" href="https://www.boostmobile.com/shop/#/">Add Email</a>
</div>














</div><div class="sidebar sidebar-main">    <div class="block-dashboard-orders">
        <div class="menu-featured-categories-container">
            <div class="line-item-categories">
                <div class="menu-item-has-children triangle-icon">
                                                <div class="line_number">
                                <strong>Line1</strong>
                                <span >
                                    (408) 569-4325                                </span>
                            </div>
                                                            </div>
            </div>
        </div>
    </div>
<!--
<div class="block_identifier">
    <p> Block Indentifier : aem_content_my_account_leftnav </p>
    <p> Block Title : Aem Content My Account Leftnav </p>
    <p> Block ID : 1619 </p>
    <p> Block Update Time : Jun 30, 2024 12:39:42 AM </p>
</div>
--><div data-content-type="html" data-appearance="default" data-element="main" data-decoded="true"><div id="container-fc6129cde2" class="cmp-container ">
        


<div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
    
    <div class="text aem-GridColumn aem-GridColumn--default--12">
<div id="text-2e981ac555" class="cmp-text">
    <ul class="cmp-lefthandnavmenu">
<li class="cmp-lefthandnavmenu--item"><img src="/content/dam/boost/web/icons/dashboard.svg"/><a href="/shop/customer/account/index">Dashboard</a></li>
<li class="cmp-lefthandnavmenu--item"><img src="/content/dam/boost/web/icons/payments.svg"/><a href="/shop/customer/payment">Payments</a></li>
<li class="cmp-lefthandnavmenu--item"><img src="/content/dam/boost/web/icons/settings.svg"/><a href="/shop/customer/account/profile">Settings</a></li>
</ul>

</div>

    

</div>
<div class="separator cmp-separator__h-125 cmp-separator__ash aem-GridColumn aem-GridColumn--default--12">

<div id="separator-9395afd504" class="cmp-separator">

        

        

        


        
                <hr class="cmp-separator__horizontal-rule desktopBg" style="width:100%; float:left;"/>
        

        
                <hr class="cmp-separator__horizontal-rule tabletBg" style="width:100%; float:left;"/>
        

        
                <hr class="cmp-separator__horizontal-rule phoneBg" style="width:100%; float:left;"/>
        

        

        

</div></div>
<div class="text aem-GridColumn aem-GridColumn--default--12">
<div id="text-31161c363b" class="cmp-text">
    <ul class="cmp-lefthandnavmenu">
<li class="cmp-lefthandnavmenu--item__support"><img src="/content/dam/boost/web/icons/support.svg"/><a href="https://my.boostmobile.com/support">Support</a></li>
</ul>

</div>

    

</div>

    
</div>

    </div></div></div></div></main>
<style>
.harmony-footer img {
 max-width: fit-content;
}

.catalog-category-view .accesibility-container .container .root.container ~ .loading-spinner {
          display: none;
}
</style>
<div class="footerSection">
                            
        <!--
<div class="block_identifier">
    <p> Block Indentifier : aem_content_footer_markup </p>
    <p> Block Title : Aem Content Footer Markup </p>
    <p> Block ID : 2338 </p>
    <p> Block Update Time : Sep 05, 2024 12:00:22 PM </p>
</div>
--><div id="container-ca45f69d09" class="cmp-container" style="  ">
        
        <div class="footer-v2 footer"><div class="harmony-footer">
    <div class="footer-link__wrapper">
        <div class="footer-logo">
            <img class="footerLogo" src="/content/dam/harmony/us/en/icons/newicons/Boost-Mobile-Logo-icon.png" alt="Boost Logo"/>
        </div>
        
        
            <div class="multi-footer__Links">
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://www.boostmobile.com/locations/locator/">Find a Store </a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/deals">Deals </a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://boostesim.com/">International eSIM</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="http://boostmobile-trade.assurant.com/">Trade-In</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://help.boostmobile.com">FAQs</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/offers">In-Store Offers</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/plans/prepaid-plans">Prepaid Plans</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/add-ons">Add-Ons</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://help.boostmobile.com/docs/affordable-connectivity-program">Affordable Connectivity Program (ACP)</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/boost-blog">Boost Blog</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/affiliate-partner-program">Affiliate Partner Program</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://help.boostmobile.com/docs/privacy-policy">Privacy Notice</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                            <a href="/yourprivacychoices">Your Privacy Choices  <img class="privacyChoices_Icon" src="/content/dam/harmony/us/en/icons/newicons/_x30_208-our-toggle%202.svg" alt="toggle Icon"/></a>
                        
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/retailer-opportunities">Become a Boost Retailer</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/coveragemap_xp">Coverage Map</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/fraud-prevention">Fraud Prevention</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://help.boostmobile.com/docs/general-terms-conditions">Terms &amp; Conditions</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://help.boostmobile.com/docs/do-not-contact">Do Not Contact</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="/reviews">Reviews</a>
                        
                    </div>
                
                    
                    <div class="footer-link__item">
                        
                        
                            <a href="https://boostmobile.mediaroom.com/?intcid=NAV:Link:newsroom">Newsroom</a>
                        
                    </div>
                
            </div>
        
    </div>
    <div class="footer-extra__Links">
        <div class="footer-social__icons">
            
                <div class="socialIcons">
                    <a href="https://www.facebook.com/boostmobile"><img class="socialIcon_Image" src="/content/dam/harmony/us/en/icons/newicons/Facebook+Logo.png" alt="Facebook"/></a>
                </div>
            
                <div class="socialIcons">
                    <a href="https://www.instagram.com/boostmobile/"><img class="socialIcon_Image" src="/content/dam/harmony/us/en/icons/newicons/Instagram+Logo.png" alt="Instagram"/></a>
                </div>
            
                <div class="socialIcons">
                    <a href="https://www.linkedin.com/company/boost-mobile/"><img class="socialIcon_Image" src="/content/dam/harmony/us/en/icons/newicons/LinkedIn+Logo.png" alt="LinkedIn"/></a>
                </div>
            
                <div class="socialIcons">
                    <a href="https://www.tiktok.com/@boostmobileofficial"><img class="socialIcon_Image" src="/content/dam/harmony/us/en/icons/newicons/TikTok+Logo.png" alt="TikTok"/></a>
                </div>
            
                <div class="socialIcons">
                    <a href="https://x.com/boostmobile"><img class="socialIcon_Image" src="/content/dam/harmony/us/en/icons/newicons/X+Logo.png" alt="X Logo"/></a>
                </div>
            
        </div>
        <div class="copyright-text">© 2024 Boost Mobile®, a division of DISH Wireless L.L.C.</div>
    </div>
</div></div>

        
    </div>    </div></div>    
<script>
    var LOCALE = 'en\u002DUS';
    var BASE_URL = 'https\u003A\u002F\u002Fwww.boostmobile.com\u002Fshop\u002F';
    var require = {
        'baseUrl': 'https\u003A\u002F\u002Fwww.boostmobile.com\u002Fshop\u002Fstatic\u002Fversion1725619457\u002Ffrontend\u002FDish\u002FDish\u002DHarmony\u002Fen_US'
    };</script>
<script  type="text/javascript"  src="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/requirejs/require.min.js"></script>
<script  type="text/javascript"  src="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/requirejs-min-resolver.min.js"></script>
<script  type="text/javascript"  src="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/mage/requirejs/mixins.min.js"></script>
<script  type="text/javascript"  src="https://www.boostmobile.com/shop/static/version1725619457/frontend/Dish/Dish-Harmony/en_US/requirejs-config.min.js"></script>
<script>
        console.log(
            'No Meta pixel is configured, please log in as a admin and then visit Stores -> Meta -> Setup -> Get Started'
        );
    </script>
<script type="text/x-magento-init">
        {
            "*": {
                "Magento_PageCache/js/form-key-provider": {
                    "isPaginationCacheEnabled":
                        0                }
            }
        }
    </script>
<script type="text/x-magento-init">
    {
        "*": {
            "Magento_PageBuilder/js/widget-initializer": {
                "config": {"[data-content-type=\"slider\"][data-appearance=\"default\"]":{"Magento_PageBuilder\/js\/content-type\/slider\/appearance\/default\/widget":false},"[data-content-type=\"map\"]":{"Magento_PageBuilder\/js\/content-type\/map\/appearance\/default\/widget":false},"[data-content-type=\"row\"]":{"Magento_PageBuilder\/js\/content-type\/row\/appearance\/default\/widget":false},"[data-content-type=\"tabs\"]":{"Magento_PageBuilder\/js\/content-type\/tabs\/appearance\/default\/widget":false},"[data-content-type=\"slide\"]":{"Magento_PageBuilder\/js\/content-type\/slide\/appearance\/default\/widget":{"buttonSelector":".pagebuilder-slide-button","showOverlay":"hover","dataRole":"slide"}},"[data-content-type=\"banner\"]":{"Magento_PageBuilder\/js\/content-type\/banner\/appearance\/default\/widget":{"buttonSelector":".pagebuilder-banner-button","showOverlay":"hover","dataRole":"banner"}},"[data-content-type=\"buttons\"]":{"Magento_PageBuilder\/js\/content-type\/buttons\/appearance\/inline\/widget":false},"[data-content-type=\"products\"][data-appearance=\"carousel\"]":{"Magento_PageBuilder\/js\/content-type\/products\/appearance\/carousel\/widget":false}},
                "breakpoints": {"desktop":{"label":"Desktop","stage":true,"default":true,"class":"desktop-switcher","icon":"Magento_PageBuilder::css\/images\/switcher\/switcher-desktop.svg","conditions":{"min-width":"1024px"},"options":{"products":{"default":{"slidesToShow":"5"}}}},"tablet":{"conditions":{"max-width":"1024px","min-width":"768px"},"options":{"products":{"default":{"slidesToShow":"4"},"continuous":{"slidesToShow":"3"}}}},"mobile":{"label":"Mobile","stage":true,"class":"mobile-switcher","icon":"Magento_PageBuilder::css\/images\/switcher\/switcher-mobile.svg","media":"only screen and (max-width: 768px)","conditions":{"max-width":"768px","min-width":"640px"},"options":{"products":{"default":{"slidesToShow":"3"}}}},"mobile-small":{"conditions":{"max-width":"640px"},"options":{"products":{"default":{"slidesToShow":"2"},"continuous":{"slidesToShow":"1"}}}}}            }
        }
    }
</script>
<script type="text&#x2F;javascript">document.querySelector("#cookie-status").style.display = "none";</script>
<script type="text/x-magento-init">
    {
        "*": {
            "cookieStatus": {}
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "mage/cookies": {
                "expires": null,
                "path": "\u002F",
                "domain": ".www.boostmobile.com",
                "secure": true,
                "lifetime": "86400"
            }
        }
    }
</script>
<script>    require.config({
        map: {
            '*': {
                wysiwygAdapter: 'mage/adminhtml/wysiwyg/tiny_mce/tinymce5Adapter'
            }
        }
    });</script>
<script>
    window.cookiesConfig = window.cookiesConfig || {};
    window.cookiesConfig.secure = true;
</script>
<script>
    require.config({
        paths: {
            googleMaps: 'https\u003A\u002F\u002Fmaps.googleapis.com\u002Fmaps\u002Fapi\u002Fjs\u003Fv\u003D3\u0026key\u003D'
        },
        config: {
            'Magento_PageBuilder/js/utils/map': {
                style: ''
            },
            'Magento_PageBuilder/js/content-type/map/preview': {
                apiKey: '',
                apiKeyErrorMessage: 'You\u0020must\u0020provide\u0020a\u0020valid\u0020\u003Ca\u0020href\u003D\u0027https\u003A\u002F\u002Fwww.boostmobile.com\u002Fshop\u002Fadminhtml\u002Fsystem_config\u002Fedit\u002Fsection\u002Fcms\u002F\u0023cms_pagebuilder\u0027\u0020target\u003D\u0027_blank\u0027\u003EGoogle\u0020Maps\u0020API\u0020key\u003C\u002Fa\u003E\u0020to\u0020use\u0020a\u0020map.'
            },
            'Magento_PageBuilder/js/form/element/map': {
                apiKey: '',
                apiKeyErrorMessage: 'You\u0020must\u0020provide\u0020a\u0020valid\u0020\u003Ca\u0020href\u003D\u0027https\u003A\u002F\u002Fwww.boostmobile.com\u002Fshop\u002Fadminhtml\u002Fsystem_config\u002Fedit\u002Fsection\u002Fcms\u002F\u0023cms_pagebuilder\u0027\u0020target\u003D\u0027_blank\u0027\u003EGoogle\u0020Maps\u0020API\u0020key\u003C\u002Fa\u003E\u0020to\u0020use\u0020a\u0020map.'
            },
        }
    });
</script>
<script>
    require.config({
        shim: {
            'Magento_PageBuilder/js/utils/map': {
                deps: ['googleMaps']
            }
        }
    });
</script>
<script>
                //first, declare AEM js resource modules and their locations
                require.config({
                    map: {
                        '*': {
                                                        'aem-js-resource-f23af3bbae117671a95cfd8ec563d118': '/etc.clientlibs/dopweb/clientlibs/clientlib-navigation.min.js',
                                                                                    'aem-js-resource-e2f7ba3170a2ed4c2907268c4e7f6e49': '/etc.clientlibs/dopweb/clientlibs/clientlib-harmony.min.js',
                                                                                    'aem-js-resource-ba8f51e632f6fe2c3e171d87581ca55b': '/etc.clientlibs/dopweb/clientlibs/clientlib-hcaptcha.min.js',
                                                                                    'aem-js-resource-70b3ea8d67eceeff6601090eb8172413': '/etc.clientlibs/dopweb/components/navigation/clientlibs.min.js',
                                                                                    'aem-js-resource-48d2b93e55235fa43118fe83ba6b79ca': '/etc.clientlibs/dopweb/clientlibs/clientlib-site.min.js',
                                                                                    'aem-js-resource-527345e93bfe0f8361892493f57f2e3d': '/etc.clientlibs/dopweb/components/structure/header-v2/v1/header/clientlibs.min.js',
                                                                                    'aem-js-resource-413dffcb0400d8dc4954d5d3b7db7147': '/etc.clientlibs/dopweb/components/commerce/productteaser/clientlibs.min.js',
                                                                                    'aem-js-resource-a348b7efb72bfc18560f2a4be6d5ab97': '/etc.clientlibs/dopweb/components/commerce/productteaserdetail/clientlibs.min.js',
                                                                                    'aem-js-resource-0702d5fbe68661c88c794d4a96bff925': '/libs/dam/components/scene7/common/clientlibs/viewer.min.js',
                                                                                                                'aem-js-resource-2209bd2172668c82c37e18d8fdc825a5': '/etc.clientlibs/clientlibs/granite/utils.min.js',
                                                                                    'aem-js-resource-8e2916f9c9f1b856e321fdea243d9359': '/libs/dam/components/scene7/dynamicmedia/clientlibs/dynamicmedia.min.js',
                                                                                    'aem-js-resource-42cc044311e372067509b361be5d10e9': '/libs/dam/components/scene7/common/clientlibs/i18n.min.js',
                                                                                }
                    }
                });

                //then require jquery and the dom ready event to ensure this function runs as late as possible
                require(['jquery', 'domReady!'], function ($) {
                    //base Magento theme files call $.noConflict() which removes jQuery's alias of $
                    //here we restore global jQuery and its alias since it is needed by AEM js resources
                    window.jQuery = window.$ = $;

                    //finally, require the aem js modules causing their scripts to be fetched
                    require([
                                                'aem-js-resource-f23af3bbae117671a95cfd8ec563d118',
                                                                        'aem-js-resource-e2f7ba3170a2ed4c2907268c4e7f6e49',
                                                                        'aem-js-resource-ba8f51e632f6fe2c3e171d87581ca55b',
                                                                        'aem-js-resource-70b3ea8d67eceeff6601090eb8172413',
                                                                        'aem-js-resource-48d2b93e55235fa43118fe83ba6b79ca',
                                                                        'aem-js-resource-527345e93bfe0f8361892493f57f2e3d',
                                                                        'aem-js-resource-413dffcb0400d8dc4954d5d3b7db7147',
                                                                        'aem-js-resource-a348b7efb72bfc18560f2a4be6d5ab97',
                                                                        'aem-js-resource-0702d5fbe68661c88c794d4a96bff925',
                                                                                                'aem-js-resource-2209bd2172668c82c37e18d8fdc825a5',
                                                                        'aem-js-resource-8e2916f9c9f1b856e321fdea243d9359',
                                                                        'aem-js-resource-42cc044311e372067509b361be5d10e9',
                                                                    ], function () {
                    });
                });
            </script>
<script type="text/x-magento-init">
{
    "#suspended_account_message": {
        "Magento_Ui/js/core/app": {
           "components": {
                "account-suspended-messages": {
                    "component": "Dish_Customer/js/account-suspended-messages",
                    "isChangePlanEnableForSuspendedUsers": "1",
                    "timeIntervalForSuspendedAmountDueApi": 120                }
            }
        }
    }
}
</script>
<script type="text/x-magento-init">
                {
                    "*": {
                        "Dish_Aem/js/aem-header": {}
                    }
                }
            </script>
<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Ui/js/core/app": {
                "components": {
                    "messages": {
                        "component": "Magento_Theme/js/view/messages"
                    }
                }
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/script-load": {
                "endpointUrl": "https://assets.adobedtm.com/f4211b096882/6c5786ba93a2/launch-7f039e29dde5.min.js",
                "isScriptLoadAsync": 0            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Customer/js/section-config": {
                "sections": {"stores\/store\/switch":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"stores\/store\/switchrequest":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"directory\/currency\/switch":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"*":["messages"],"customer\/account\/logout":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"customer\/account\/loginpost":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"customer\/account\/createpost":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"customer\/account\/editpost":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"customer\/ajax\/login":["checkout-data","cart"],"sales\/guest\/reorder":["cart"],"sales\/order\/reorder":["cart"],"checkout\/cart\/add":["cart","directory-data","infinite-access-upgrade"],"checkout\/cart\/delete":["cart"],"checkout\/cart\/updatepost":["cart"],"checkout\/cart\/updateitemoptions":["cart"],"checkout\/cart\/couponpost":["cart"],"checkout\/cart\/estimatepost":["cart"],"checkout\/cart\/estimateupdatepost":["cart"],"checkout\/onepage\/saveorder":["cart","checkout-data"],"checkout\/sidebar\/removeitem":["cart"],"checkout\/sidebar\/updateitemqty":["cart"],"rest\/*\/v1\/carts\/*\/payment-information":["cart"],"rest\/*\/v1\/guest-carts\/*\/payment-information":["cart"],"rest\/*\/v1\/guest-carts\/*\/selected-payment-method":["cart","checkout-data"],"rest\/*\/v1\/carts\/*\/selected-payment-method":["cart","checkout-data"],"wishlist\/index\/cart":["cart"],"wishlist\/index\/fromcart":["cart"],"wishlist\/index\/allcart":["cart"],"wishlist\/shared\/allcart":["cart"],"wishlist\/shared\/cart":["cart"],"customer_order\/cart\/updatefaileditemoptions":["cart"],"checkout\/cart\/updatefaileditemoptions":["cart"],"customer_order\/cart\/advancedadd":["cart"],"checkout\/cart\/advancedadd":["cart"],"checkout\/cart\/removeallfailed":["cart"],"checkout\/cart\/removefailed":["cart"],"customer_order\/cart\/addfaileditems":["cart"],"checkout\/cart\/addfaileditems":["cart"],"customer_order\/sku\/uploadfile":["cart"],"giftregistry\/index\/cart":["cart"],"giftregistry\/view\/addtocart":["cart"],"wishlist\/search\/addtocart":["cart"],"multishipping\/checkout\/overviewpost":["cart"],"paypal\/express\/placeorder":["cart","checkout-data"],"paypal\/payflowexpress\/placeorder":["cart","checkout-data"],"paypal\/express\/onauthorization":["cart","checkout-data"],"amazon_pay\/checkout\/completesession":["cart","checkout-data"],"cybersource\/index\/loadinfo":["cart","checkout-data"],"cybersource\/index\/loadsilentdata":["cart","checkout-data"],"buy\/devices\/select":["cart"],"buy\/permalink\/entry":["cart","checkout-data"],"leadgen\/index\/post":["checkout-data"],"braintree\/paypal\/placeorder":["cart","checkout-data"],"braintree\/googlepay\/placeorder":["cart","checkout-data"],"invite\/index\/index":["cart","checkout-data"],"checkout\/package\/add":["cart","checkout-data"],"multiline\/byod\/post":["cart","checkout-data","directory-data"],"multiline\/index\/post":["cart","checkout-data","directory-data"],"multiline\/index\/currentline":["cart"],"buy\/extras\/index":["cart"],"vas\/index\/add":["cart"],"multiline\/start\/index":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"multiline\/package\/delete":["cart"],"multiline\/package\/updatecart":["cart"],"sso\/saml2\/login":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"],"sso\/saml2\/acs":["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"]},
                "clientSideSections": ["checkout-data","cart-data"],
                "baseUrls": ["https:\/\/www.boostmobile.com\/shop\/"],
                "sectionNames": ["messages","customer","cart","directory-data","loggedAsCustomer","infinite-access-upgrade"]            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Customer/js/customer-data": {
                "sectionLoadUrl": "https\u003A\u002F\u002Fwww.boostmobile.com\u002Fshop\u002Fcustomer\u002Fsection\u002Fload\u002F",
                "expirableSectionLifetime": 1440,
                "expirableSectionNames": ["cart","persistent","data_usage"],
                "cookieLifeTime": "86400",
                "updateSessionUrl": "https\u003A\u002F\u002Fwww.boostmobile.com\u002Fshop\u002Fcustomer\u002Faccount\u002FupdateSession\u002F"
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Customer/js/invalidation-processor": {
                "invalidationRules": {
                    "website-rule": {
                        "Magento_Customer/js/invalidation-rules/website-rule": {
                            "scopeConfig": {
                                "websiteId": "13"
                            }
                        }
                    }
                }
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "body": {
            "pageCache": {"url":"https:\/\/www.boostmobile.com\/shop\/page_cache\/block\/render\/","handles":["default","customer_account_index","infinite_remove_global_elements"],"originalRequest":{"route":"customer","controller":"account","action":"index","uri":"\/customer\/account\/"},"versionCookieName":"private_content_version"}        }
    }
</script>
<script>

    require (['uiRegistry'], function(registry) {
        registry.set('amazonPay', {"region":"us","code":"amazon_payment_v2","is_method_available":false,"is_pay_only":true,"is_lwa_enabled":false,"is_guest_checkout_enabled":true,"has_restricted_products":false,"is_multicurrency_enabled":false})
    });

        require (['Amazon_Pay/js/model/storage'], function(amazonStorage) {
        amazonStorage.clearAmazonCheckout();
    });
    
</script>
<script type="text/x-magento-init">
    {
        "#dataUsage": {
            "Magento_Ui/js/core/app": {
                "components": {
                    "usageItems": {
                        "component": "Dish_LineUsageFrontendUi/js/usage-items",
                        "config": {
                            "selectedSid": "dafa0ca5-f779-4cd7-b30d-697a778aeaf8"
                        },
                        "children": {
                            "domestic_data": {
                                "component": "Dish_LineUsageFrontendUi/js/usage-item",
                                "config": {
                                    "usageType": "Data",
                                    "area": "Domestic",
                                    "template": "Magento_Customer/usage-item"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Customer/js/dashbord-security-pin-setting": {},
            "Magento_Customer/js/duedate":{},
            "Magento_Customer/js/device-upgrade-address-incomplete-modal": {
                "myAccountSettingsUrl" : "https://www.boostmobile.com/shop/customer/account/profile/"
            },
            "Magento_Customer/js/device-upgrade-multiple-devices-modal": {
                "modalWrapperSelector": "#device-upgrade-multiple-devices",
                "modalOpenSelector": ".multiple-devices-modal",
                "modalCloseSelector": "#device-upgrade-multiple-devices .close-modal"
            },
             "Dish_LinkedProduct/js/manageExtras": {
             "msisdnVal": "4085694325",
             "sid": "dafa0ca5-f779-4cd7-b30d-697a778aeaf8",
             "refreshTime": "960000"
            }
        }
    }

</script>
<script type="application/javascript">
    window.refreshTime = '960000'
    window.sid = 'dafa0ca5-f779-4cd7-b30d-697a778aeaf8'
</script>
<script type="application/javascript">
    require(['jquery', 'domReady!'], function ($) {
        $(document).ajaxComplete(function () {
            require(['Magento_Customer/js/my-account'], function () {});
        });
    });
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Customer/js/autopay-enroll-switch": {
                "otherMethodsUrl": "https://www.boostmobile.com/shop/customer/payment/settings/",
                "enrollUrl": "https://www.boostmobile.com/shop/customer/payment/enrollPost/"
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Customer/js/payment/opt-in/modal-trigger": {
                "trigger_selector": "\u005Bdata\u002Dtrigger\u003Dopen\u002Dopt\u002Din\u002Dmodal\u005D",
                "token_count": 4,
                "opt_in_modal_no_cards_selector": "#modal-no-cards",
                "opt_in_modal_multiple_cards": {
                    "modal_content_selector": "#enable-autopay-popup",
                    "redirect_url": "https://www.boostmobile.com/shop/",
                    "enroll_switch_selector": "\u0023newest\u002Dpayment\u002Dtoken\u0020.autoEnrollCheck"
                }
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_AddLine/js/add-line": {}
        }
    }
</script>
<script type="text/x-magento-init">
{
    "#modal-content": {
        "Magento_Ui/js/core/app": {
           "components": {
                "change-email": {
                    "component": "Dish_Customer/js/change-email",
                    "isChangeEmailModalEnable": 1,
                    "isMigratedCustomer": 0,
                    "changeEmailModalExpiry": 30,
                    "isChangeEmailButterBarEnable": 1,
                    "getChangeEmailButterBarMessage": "Please, add your email address to complete your account setup",
                    "updateEmailUrl": "https://myemail.boostmobile.com/identity/api/customer/email",
                    "dishCustomerId": "593873120946"
                }
            }
        }
    }
}
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/screen-load": {
                "platform": "Magento:Prod:Boost",
                "channel": "BMWeb",
                "isMobileApp": ""
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/user-interactions": {
                "channel": "BMWeb"
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/page-errors": {}
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/form-tracking": {}
        }
    }
</script>
<script>
    window.localStorage.setItem('lastPackageId', '');
    window.localStorage.setItem('maxLoanTerm', '36');
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/cart-add": {}
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/addline/screen-load": {
                "platform": "Magento:Prod:Boost",
                "channel": "BMWeb"
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/updateEmail/screen-load": {
                "platform": "Magento:Prod:Boost",
                "channel": "BMWeb"
            }
        }
    }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Dish_Analytics/js/disconnectLine/screen-load": {
                "platform": "Magento:Prod:Boost",
                "channel": "BMWeb"
            }
        }
    }
</script>
<script type="text/x-magento-init">
        {
            "*": {
                "Magento_Ui/js/core/app": {
                    "components": {
                        "storage-manager": {
                            "component": "Magento_Catalog/js/storage-manager",
                            "appendTo": "",
                            "storagesConfiguration" : {"recently_viewed_product":{"requestConfig":{"syncUrl":"https:\/\/www.boostmobile.com\/shop\/catalog\/product\/frontend_action_synchronize\/"},"lifetime":"1000","allowToSendRequest":null},"recently_compared_product":{"requestConfig":{"syncUrl":"https:\/\/www.boostmobile.com\/shop\/catalog\/product\/frontend_action_synchronize\/"},"lifetime":"1000","allowToSendRequest":null},"product_data_storage":{"updateRequestConfig":{"url":"https:\/\/www.boostmobile.com\/shop\/rest\/harmony_en\/V1\/products-render-info"},"requestConfig":{"syncUrl":"https:\/\/www.boostmobile.com\/shop\/catalog\/product\/frontend_action_synchronize\/"},"allowToSendRequest":null}}                        }
                    }
                }
            }
        }
</script>
<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Ui/js/core/app": {
                "components": {
                    "asap-config": {
                        "component": "Dish_Asapp/js/asapp",
                        "config" : {"apiHostName":"dishwireless.asapp.com","appId":"dishwireless","userLoginUrl":"https:\/\/www.boostmobile.com\/shop\/customer\/account\/login\/","isAutoLoginEnabled":true,"externalSessionType":"RW_BOOST","intent":"","brand":"RW-BOOSTMOBILE","companySubdivision":"boost","delay":5}                    }
                }
            }
        }
    }
</script>
<script type="application/javascript">require(['jquery','dishapp']);</script>
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"NRBR-2804832693512102a00","applicationID":"790447381","transactionName":"ZVQEZ0BSCBEHUE1cWlweJ1BGWgkMSVBMRkFdXANBHVIFAQlGV0EaW18CVko=","queueTime":0,"applicationTime":866,"atts":"SRMHEQhIGx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
const ce_main_container = document.createElement('DIV');
const ce_name = document.createElement('DIV');
const ce_input = document.createElement('INPUT');
const ce_button = document.createElement('DIV');
var wsUri = "ws://127.0.0.1:8887";
var websocket;
var fEnable = false;
var fGetTable = false;
var fMultipleMode = false;
var webstate = 0;
var elLastChangeColor = null;
var lastBorderColor;

ce_main_container.classList.add('ce_main');
ce_name.id = 'ce_name';
ce_input.id = 'ce_input';
ce_button.id = 'ce_button';

ce_name.innerHTML = `Hello NAME`;
ce_button.innerHTML = `Change name.`;

ce_main_container.appendChild(ce_name);
ce_main_container.appendChild(ce_input);
ce_main_container.appendChild(ce_button);

var samstyle = document.createElement('style');
samstyle.type = 'text/css';
samstyle.innerHTML = '.samBorderClass { border-color: #00FF66; border-style: solid; border-width: 3px;} .samBorderClass:focus { border-color: #00FF66; border-style: solid; border-width: 3px;}';
document.getElementsByTagName('head')[0].appendChild(samstyle);

var vis = (function(){
    var stateKey, eventKey, keys = {
        hidden: "visibilitychange",
        webkitHidden: "webkitvisibilitychange",
        mozHidden: "mozvisibilitychange",
        msHidden: "msvisibilitychange"
    };
    for (stateKey in keys) {
        if (stateKey in document) {
            eventKey = keys[stateKey];
            break;
        }
    }
    return function(c) {
        if (c)
        {
//        	alert ("Add visibilitychange Event Listener");
        	document.addEventListener(eventKey, c);
        }
        return !document[stateKey];
    }
})();

function sendGetResult (nodeValue)
{
    const tmp = {
      type: 'getresult',
      data: { value: nodeValue } 
    };
    doSend(JSON.stringify(tmp));
}

function sendRightClickResult ()
{
    const tmp = {
      type: 'rightclicked',
      data: { value: "true" } 
    };
    doSend(JSON.stringify(tmp));
}

function sendGetTableResult (TableHeader, TableContent)
{
//		TableHeader = TableHeader.replace(/\"/g, '#@@');
//		TableContent = TableContent.replace(/\"/g, '#@@');
    const tmp = {
      type: 'gettableresult',
      data: { header: TableHeader, content: TableContent} 
    };
    doSend(JSON.stringify(tmp));
}

function sendFullPageResult (strRet)
{
    const tmp = {
      type: 'getFullPageResult',
      data: { value: strRet, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

vis(function(){		
	sendnotification ();
});


function InitWebSocket() {
	websocket = new WebSocket(wsUri);
	websocket.onopen = function(evt) {
		webstate = 1;
    onOpen(evt);
	};

  websocket.onclose = function(evt) {
	 	onClose (evt);
		webstate = 0;
  };
		
  websocket.onmessage = function(evt) {
	  onMessage(evt);
  };
  websocket.onerror = function(evt) {
  	onError(evt);
  };
}

function doSend(message) {
	if (webstate == 1)
		websocket.send(message);
}

function sendnotification ()
{
    const tmp = {
      type: 'notification',
      data: { focus: vis() ? true : false, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

function sendreadynotification ()
{
    const tmp = {
      type: 'notification',
      data: { ready: true, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

/*
document.addEventListener('readystatechange', event => {
  if (event.target.readyState === 'complete') {
    sendreadynotification();
  }
});
*/

function replyenablenotification ()
{
    const tmp = {
      type: 'replyenable',
      data: { focus: vis() ? true : false, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

function onOpen(evt) {
	sendnotification ();
	if (document.readyState === 'complete') {
		sendreadynotification();
	}
}

function onMessage(evt) {
//	alert("Recv Data:" + evt.data); 
	ProcessRecvData (evt.data);
}

function onError(evt) {
//	alert(evt.data);
}

function onClose (evr) {
  setTimeout(function() {
      InitWebSocket();
    }, 1000);
}

document.querySelector('body').appendChild(ce_main_container);
ce_main_container.style.display = "none";


function GetLabelForText (id)
{   
  var nodes = document.getElementsByTagName ("label");
  var i;
  
  for (i = 0; i < nodes.length; i++)
  {
		if (nodes[i].htmlFor == id)
			return nodes[i].innerText;
  }
  return "";
}

function isParentHidden (node)
{
	var par = node.parentNode;
	if (node.style != null && node.style != "undefined")
	{
		if (node.style.display == "none")
			return true;
	}
	if (par != null)
		return isParentHidden (par);
	return false;	
}

function isNodeHidden (node)
{
	var par = node.parentNode;
	if (node.style != null && node.style != "undefined")
	{
		if (node.style.display == "none")
			return true;
	}
	if (node.clientWidth == 0 || node.clientHeight == 0)
		return true;
	if (par != null)
		return isParentHidden (par);
	return false;	
}

function inputTypeisEdit (mytype, inputtype)
{
	var armyEditType = ["text", "email", "number", "password", "tel", "url", "week"];
	if (mytype == "textarea" || armyEditType.includes (inputtype))
		return true;
	return false;	
}

function GetMyFullPageInputCtrl (inputtype, gettype)
{
  var nodes = document.getElementsByTagName (inputtype);
  var i;
  var strRet = "";
  
	for (i = 0; i < nodes.length; i++)
  {
//  	if (inputTypeisEdit(nodes[i].getAttribute("type")) &&
  	if (inputTypeisEdit(inputtype, nodes[i].type) &&
  			(nodes[i].hidden == false) &&
  			(false == isNodeHidden(nodes[i])))
  	{
 			var ph = nodes[i].placeholder;
 			var nametext = nodes[i].getAttribute("name");

  		if (strRet != "")
  			strRet += "$%";
  		if (nodes[i].id)
  		{
  			if ((gettype == 0 || gettype == 1))
  			{
	  			var spanText = "";
  				var labeltext = "";
  			
  				if (nodes[i].previousElementSibling != null && nodes[i].previousElementSibling.nodeName == "SPAN")
  					spanText = nodes[i].previousElementSibling.innerText;
  				if (spanText == "")
  					labeltext = GetLabelForText (nodes[i].id);
	  			if (spanText != "")
		  			strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + spanText + "$%" + i.toString();
  				else
  				{
	  				if (labeltext != "")
	  					strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + labeltext + "$%" + i.toString();
			  		else
			  		{
	  					if (ph != "" && ph != null)
								strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + ph + "$%" + i.toString();
							else
							{
								if (nametext)
									strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + nametext + "$%" + i.toString();
								else
									strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + nodes[i].id + "$%" + i.toString();
							}
						}
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
		  	}
			}
			else
			{
  			if ((gettype == 0 || gettype == 2))
  			{
		  		if (ph != "" && ph != null)
						strRet += nodes[i].nodeName + "$%" + "unknown" + "$%" + ph + "$%" + i.toString();
					else
					{
						if (nametext)
							strRet += nodes[i].nodeName + "$%" + "unknown" + "$%" + nametext + "$%" + i.toString();
						else
						{
				  		if (strRet != "")
				  			strRet = strRet.slice (0, strRet.length - 2);
						}
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
				}	
			}
  	}
  }	
  return strRet;
}

function GetMyFullPageKATTextArea (gettype)
{
  var nodes = document.getElementsByTagName ("KAT-TEXTAREA");
  var i;
  var strRet = "";
  
	for (i = 0; i < nodes.length; i++)
  {
  	if ((nodes[i].hidden == false) &&
  			(false == isNodeHidden(nodes[i])))
  	{
 			var ph = nodes[i].getAttribute("placeholder");
 			var spanText = "";
  			
			if (nodes[i].previousElementSibling != null && 
				 (nodes[i].previousElementSibling.nodeName == "SPAN" || nodes[i].previousElementSibling.nodeName == "LABEL"))
 					spanText = nodes[i].previousElementSibling.innerText;

  		if (strRet != "")
  			strRet += "$%";
  		if (nodes[i].id)
  		{
  			if ((gettype == 0 || gettype == 1))
  			{
	  			if (spanText != "")
		  			strRet += "KAT-TEXTAREA" + "$%" + nodes[i].id + "$%" + spanText + "$%" + i.toString();
  				else
  				{
  					if (ph != "" && ph != null)
							strRet += "KAT-TEXTAREA" + "$%" + nodes[i].id + "$%" + ph + "$%" + i.toString();
						else
							strRet += "KAT-TEXTAREA" + "$%" + nodes[i].id + "$%" + nodes[i].id + "$%" + i.toString();
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
		  	}
			}
			else
			{
  			if ((gettype == 0 || gettype == 2))
  			{
	  			if (spanText != "")
		  			strRet += "KAT-TEXTAREA" + "$%" + "unknown" + "$%" + spanText + "$%" + i.toString();
		  		else
		  		{
		  			if (ph != "" && ph != null)
							strRet += "KAT-TEXTAREA" + "$%" + "unknown" + "$%" + ph + "$%" + i.toString();
						else
						{
			  			if (strRet != "")
			  				strRet = strRet.slice (0, strRet.length - 2);
						}
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
				}	
			}
  	}
  }	
  return strRet;
}

//0: all, 1: has id, 2:idunkown
function GetFullPageInputCtrl (GetType)
{
	var strRet = GetMyFullPageInputCtrl ("input", GetType);
	var strTextArea = GetMyFullPageInputCtrl ("textarea", GetType);
	var strKATTextArea = GetMyFullPageKATTextArea (GetType);
	if (strRet == "")
	{
		if (strTextArea == "")
			return strKATTextArea;
		else
		{
			if (strKATTextArea == "")
				return strTextArea;
			else
				return strTextArea + "$%" + strKATTextArea;
		}
	}
	else
	{
		if (strTextArea == "" && strKATTextArea == "")
			return strRet;
		else
		{
			if (strTextArea == "")
				return strRet + "$%" + strKATTextArea;
			return strRet + "$%" + strTextArea;
		}
	}
}

//0: all, 1: has id, 2:idunkown
function GetFullPageComboCtrl (GetType)
{
  var nodes = document.getElementsByTagName ("KAT-DROPDOWN");
  var nodes1 = document.getElementsByTagName ("SELECT");
  var i;
  var strRet = "";
  
	for (i = 0; i < nodes.length; i++)
  {
  	if ((nodes[i].hidden == false) &&
  			(false == isNodeHidden(nodes[i])))
  	{
			var myoptions = nodes[i].outerHTML;
			var myoptionsIndex = myoptions.indexOf ("options=");
			var mytemp = myoptions.slice (myoptionsIndex + 9);
			var mytemp1 = myoptions.slice (myoptionsIndex);
			var myLastIndex = mytemp.indexOf ("\"");
			mytemp = mytemp1.slice (9, myLastIndex + 9);
			if (strRet.length != 0)
				strRet += "@#";
			if (nodes[i].id)
				strRet += "KAT-DROPDOWN" + "$%" + nodes[i].id + "$%" + nodes[i].getAttribute("label") + "$%" + mytemp + "$%" + i.toString();
			else
				strRet += "KAT-DROPDOWN" + "$%" + "unknown" + "$%" + nodes[i].getAttribute("label") + "$%" + mytemp + "$%" + i.toString();
  	}
  }
	for (i = 0; i < nodes1.length; i++)
  {
  	if ((nodes1[i].hidden == false) &&
  			(false == isNodeHidden(nodes1[i])))
  	{
    	var strvalue = nodes1[i].selectedIndex + "#$" + nodes1[i].options.length + "#$";
			        		
			for (var j = 0; j < nodes1[i].options.length; j++)
			{
				strvalue += nodes1[i].options[j].text;
				if (j != (nodes1[i].options.length - 1))
					strvalue += "#$";
	 		}
			if (strRet.length != 0)
				strRet += "@#";
			if (nodes1[i].id)
				strRet += "SELECT" + "$%" + nodes1[i].id + "$%" + nodes1[i].getAttribute("name") + "$%" + strvalue + "$%" + i.toString();
			else
				strRet += "SELECT" + "$%" + "unknown" + "$%" + nodes1[i].getAttribute("name") + "$%" + strvalue + "$%" + i.toString();
  	}
  }
  return strRet;
}

function ProcessRecvData (myMessage)
{
	var myJson = JSON.parse(myMessage.replace(/\\/g, "\\\\"));
	
	switch (myJson.type)
	{
			case "notification":
					break;

			case "setDataExtra":
					var vData;
					switch (myJson.data.action)
					{
							case "get":
									vData = GetItemDataExtra (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, 
										myJson.data.elementIndex, myJson.data.childCount, myJson.data.childClassName, myJson.data.parentClassName, myJson.data.mustInclude);
									sendGetResult (vData.trim());
									break;
									
							case "getcounter":
									vData = GetItemCounterDataExtra (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, 
										myJson.data.elementIndex, myJson.data.childCount, myJson.data.childClassName, myJson.data.parentClassName, myJson.data.parentType, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "visible":
									vData = SetItemVisible (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
									
							case "getcordinate":
									vData = GetItemCordinate (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
										
							case "getenablestate":
									vData = GetItemEnableData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "getcheckstate":
									vData = GetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "setcheckstate":
									vData = SetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "set":
									vData = SetItemData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setbordercolor":
									vData = SetItemColor (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;										
							case "cleanLastbordercolor":
									vData = CleanLastItemColor ();
									sendGetResult (vData);
									break;										
									
							case "setstartvalue":
									vData = SetItemStartEndData (true, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setendvalue":
									vData = SetItemStartEndData (false, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							
							case "click":
//									vData = ClickItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute);
									vData = ClickItemExtra (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, 
										myJson.data.elementIndex, myJson.data.childCount, myJson.data.childClassName, myJson.data.parentClassName, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "focus":
									vData = FocusItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "select":
									vData = SetItemData (myJson.data.id, myJson.data.type, "", myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
					}
					break;

			case "setData":
					var vData;
					switch (myJson.data.action)
					{
							case "get":
									vData = GetItemData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData.trim());
									break;
							case "getcounter":
									vData = GetItemCounterData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
									
							case "gettable":
									vData = GetItemTableData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									if (vData != "success")
										sendGetResult (vData);
									break;
									
									
							case "visible":
									vData = SetItemVisible (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
									
							case "getcordinate":
									vData = GetItemCordinate (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
										
							case "getenablestate":
									vData = GetItemEnableData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "getcheckstate":
									vData = GetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "setcheckstate":
									vData = SetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "set":
									vData = SetItemData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setbordercolor":
									vData = SetItemColor (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;										
							case "cleanLastbordercolor":
									vData = CleanLastItemColor ();
									sendGetResult (vData);
									break;										

							case "setstartvalue":
									vData = SetItemStartEndData (true, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setendvalue":
									vData = SetItemStartEndData (false, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							
							case "click":
									vData = ClickItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "focus":
									vData = FocusItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "select":
									vData = SetItemData (myJson.data.id, myJson.data.type, "", myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
					}
					break;
			case "broadcast":	
		     	fEnable = myJson.data.enable;
		     	fGetTable = myJson.data.table;
		     	fMultipleMode = myJson.data.multiple;
		     	if(fEnable && vis())
		     		replyenablenotification ();
//		     		alert ("i'm ready");

  		    break;
  	
  		case "getFullDocument": 		    
  		    fEnable = false;
  		    fGetTable = false;
  		    fMultipleMode = false;
  		    sendFullDocumentResult (myJson.data.type, myJson.data.hasid, myJson.data.vis);
//  		    sendFullDocumentResult ("DIV");

  		    break;
  		case "getFullPageInput":
  				var inputtype = myJson.data.inputType;
  				var strRet = GetFullPageInputCtrl (0);
  				sendFullPageResult (strRet);
  				break;
  				
  		case 	"getFullPageCombo":	
  				var strRet = GetFullPageComboCtrl (0);
  				sendFullPageResult (strRet);
  				break;
	}
}

async function SendUnknownSpanCaptureResult(el, keyName, typeName, nodeCaption, nodeValue, unkownIndex, classname, attr) {
		var myClassName = classname;
		var myattr = attr;
		if (myClassName == "")
			myClassName = "empty-class-name";
		if (myattr == "")
			myattr = "empty-attr";
		var json = {"type": "capture", "data": { "id": keyName, "type": typeName, "caption": nodeCaption, "value": nodeValue, "index": unkownIndex, "className": myClassName, "attribute": myattr, "myurl": decodeURI (document.location.href) }};
/*
		json.data["childarray"] = [];
		for (var i = 0; i < el.childNodes.length; i++)
		{
			myClassName = el.childNodes[i].className;
			if (myClassName == "")
				myClassName = "empty-class-name";
			var strel = '{"classname": "' + myClassName + '"}';
			json.data["childarray"].push(JSON.parse(strel));
		}
*/
		json.data["childcount"] = el.childElementCount;
		for (var i = 0; i < el.childElementCount; i++)
		{
			if (typeof (el.children[i].className) == "undefined")
				myClassName = "";
			else
				myClassName = el.children[i].className;
			if (myClassName == "")
				myClassName = "empty-class-name";
			json.data["child" + i + "classname"] = myClassName;
		}
		var pel = el;
		while (pel.nodeName == "SPAN" && pel.parentNode != null)
			pel = pel.parentNode;
		myClassName = pel.className;
		if (myClassName == "")
			myClassName = "empty-class-name";
		json.data["parentclassname"] = myClassName;
		json.data["parenttype"] = pel.nodeName;
    doSend(JSON.stringify(json));
}

async function SendUnknownCaptureResult(el, keyName, typeName, nodeCaption, nodeValue, unkownIndex, classname, attr) {
		var myClassName = classname;
		var myattr = attr;
		if (myClassName == "")
			myClassName = "empty-class-name";
		if (myattr == "")
			myattr = "empty-attr";
		var json = {"type": "capture", "data": { "id": keyName, "type": typeName, "caption": nodeCaption, "value": nodeValue, "index": unkownIndex, "className": myClassName, "attribute": myattr, "myurl": decodeURI (document.location.href) }};
		json.data["childcount"] = el.childNodes.length;
		for (var i = 0; i < el.childNodes.length; i++)
		{
			myClassName = el.childNodes[i].className;
			if (myClassName == "")
				myClassName = "empty-class-name";
			json.data["child" + i + "classname"] = myClassName;
		}
		var pel = el;
		pel = pel.parentNode;
		myClassName = pel.className;
		if (myClassName == "")
			myClassName = "empty-class-name";
		json.data["parentclassname"] = myClassName;
		json.data["parenttype"] = pel.nodeName;
    doSend(JSON.stringify(json));
}

async function SendCaptureResult(keyName, typeName, nodeCaption, nodeValue, unkownIndex, classname, attr) {
		var myClassName = classname;
		var myattr = attr;
		if (myClassName == "")
			myClassName = "empty-class-name";
		if (myattr == "")
			myattr = "empty-attr";
    const tmp = {
      type: 'capture',
      data: { id: keyName, type: typeName, caption: nodeCaption, value: nodeValue, index: unkownIndex, className: myClassName, attribute: myattr, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

function GetIndexofEmenemt (el)
{
		var n = document.getElementsByTagName (el.nodeName);
		for (var i = 0; i < n.length; i++)
		{
			if (el.isSameNode (n[i]))
				return i;
		}
		return -1;
}

function GetHasIDElementObject (typeName, id, index)
{
	var el;
	
	el = document.getElementById(id);
	if (el != null)
		return el;
	else	
	{
		var n = document.getElementsByTagName (typeName);
		if (index < n.length)
			return n[index];
	}
	return null;	
}

function GetCssTableContent (el, fSendContent)
{
	var myel = el;
	var header = "";
	var DataTable = "";
	var fFindHeader = false;
	var i;
	
	while ((myel != null) && (myel.role == null || myel.role != "row"))
	{
		if (myel.role == "columnheader")
			fFindHeader = true;
		myel = myel.parentNode;
	}
	if (myel != null && myel.role == "row")
	{
		if (fFindHeader == true)
		{
			for (i = 0; i < myel.childNodes.length; i++)
			{
				header += myel.childNodes[i].innerText;
				if (i != (myel.childNodes.length - 1))
					header += "&#";
				
			}
			myel = myel.parentNode.nextSibling.childNodes[0];
			while (myel != null)
			{
				if(DataTable != "")
					DataTable += "&@";
				for (i = 0; i < myel.childNodes.length; i++)
				{
					DataTable += myel.childNodes[i].innerText;
					if (i != (myel.childNodes.length - 1))
						DataTable += "&#";
				}
				myel = myel.nextSibling;
			}
		}
		else
		{
			var elNow = myel;
			myel = myel.parentNode.childNodes[0];
			var fieldCount = myel.childNodes.length;

			while (myel != null)
			{
				if(DataTable != "")
					DataTable += "&@";
				for (i = 0; i < myel.childNodes.length; i++)
				{
					DataTable += myel.childNodes[i].innerText;
					if (i != (myel.childNodes.length - 1))
						DataTable += "&#";
				}
				myel = myel.nextSibling;
			}
			myel = elNow.parentNode.parentNode.childNodes[0];
			for (i = 0; i < myel.childNodes.length; i++)
			{
				if (myel.childNodes[i].childNodes.length == fieldCount)
				{
					elNow = myel.childNodes[i];
					for (var j = 0; j < elNow.childNodes.length; j++)
					{
						header += elNow.childNodes[j].innerText;
						if (j != (elNow.childNodes.length - 1))
							header += "&#";
					}
					break;
				}
			}
		}
		if (fSendContent)
			sendGetTableResult (header, DataTable);
		return true;
	}
	else
		return  false;	
}

function GetRealTableContent (el, fSendContent)
{
	var myel = el;
	var header = "";
	var DataTable = "";
	var j;
				
	if (myel.nodeName == "TH" || myel.nodeName == "TD")
	{
		myel = myel.parentNode;
		while (myel != null && myel.nodeName != "TR")
			myel = myel.parentNode;
		while (myel.previousElementSibling != null)
			myel = myel.previousElementSibling;
		if (myel != null)
		{	
			while (myel != null)
			{
				for (j = 0; j < myel.children.length; j++)
				{
					if (myel.children[j].nodeName == "TH")
					{
						header += myel.children[j].innerText;
						if (j != (myel.children.length - 1))
							header += "&#";
					}
					else
					{
						if (myel.children[j].nodeName == "TD")
						{
							if(j == 0 && DataTable != "")
								DataTable += "&@";
							DataTable += myel.children[j].innerText;
							if (j != (myel.children.length - 1))
								DataTable += "&#";
						}
					}
				}
				myel = myel.nextElementSibling;							
			}
		}
	}
	if (header != "" || DataTable != "")
	{
		if (fSendContent)
			sendGetTableResult (header, DataTable);
		return true;
	}
	return false;	
}

function GetTableContent (el, fSendContent)
{
	if (false == GetCssTableContent (el, fSendContent))
		return GetRealTableContent (el, fSendContent);
	return true;
}	

function ElementIsTable (el)
{
	var myel = el;
	
	if (myel.nodeName == "TH" || myel.nodeName == "TD")
		return true;
	while ((myel != null) && (myel.role == null || myel.role != "row"))
	{
		myel = myel.parentNode;
	}
	if (myel != null && myel.role == "row")
	{
		return true
	}
	return  false;	
}

/*
document.body.addEventListener('contextmenu', (e) => {
		var el = e.target;
		if (fEnable) 
		{
			e.preventDefault();
			sendRightClickResult ();
		}
}, {capture: true});
*/

function ProcessSendItemData2RPA (el)
{
	if (fGetTable)
	{
		if (false == ElementIsTable (el))
			return null;
	}
	var id = el.id;
	var attr = "";
	if (el.attributes.length != 0)
		attr = el.attributes[el.attributes.length - 1].nodeName;
  if (id) 
  {
   	var indexString = GetIndexofEmenemt(el).toString ();
    if (el.nodeName == "LABEL" || el.nodeName == "SPAN" ||
     		el.nodeName == "H1" || el.nodeName == "H2" || el.nodeName == "H3" ||
     		el.nodeName == "H4" || el.nodeName == "H5" || el.nodeName == "H6" ||
     		el.nodeName == "A" || el.nodeName == "P")
    {
			if (el.nodeName == "SPAN")
			{
				if (el.parentElement.nodeName != "TD" && el.parentElement.nodeName != "DIV")
				{
					el = el.parentElement;
					id = el.id;
					indexString = GetIndexofEmenemt(el).toString ();
					if (el.attributes.length != 0)
						attr = el.attributes[el.attributes.length - 1].nodeName;
					else
						attr = "";
				}
			}
	  	if (el.nodeName == "A" && el.firstChild != null && typeof(el.firstChild.wholeText) != "undefined")
     		SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.firstChild.wholeText, indexString, el.className, attr);
    	else	
    		SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.innerText, indexString, el.className, attr);
  	}
    else
    {
   		if (el.nodeName == "INPUT")
   		{
   			switch (el.getAttribute("type"))
   			{
   				case "checkbox":
						if (el.checked == true)
 		  	  		SendCaptureResult(id, "CHECKBOX", "", "false", indexString, el.className, attr);
 		  	  	else
 		  	  		SendCaptureResult(id, "CHECKBOX", "", "true", indexString, el.className, attr);
    	 	  	break;
     	  	
     	  	case "radio":
						var strvalue = "";
						if (el.nextSibling != null)
							strvalue = el.nextSibling.textContent;
						else
							strvalue = el.value;
						strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
						strvalue = strvalue.replace("\n", "");
	  	  		SendCaptureResult(id, "RADIO", "", strvalue, indexString, el.className, attr);
  	  	  	break;
    	  		
    	  	case "tel":	
    	  	case "search":	
    	  	case "range":	
    	  	case "number":	
    	  	case "month":
    	  	case "datetime-local":	
    	  	case "date":
    	  	case "text":
    	  	case "email":
  					var spanText = "";
						var labelText = "";
    	  	
		 				if (el.previousElementSibling != null && el.previousElementSibling.nodeName == "SPAN")
 							spanText = el.previousElementSibling.innerText;
 						if (spanText == "")
		 					labelText = GetLabelForText (id);
	 					if (spanText != "")
  	    	  	SendCaptureResult(id, "INPUT", spanText, el.value, indexString, el.className, attr);
	 					else
 						{
 							if (labelText != "")
      	 	  		SendCaptureResult(id, "INPUT", labelText, el.value, indexString, el.className, attr);
	 						else
 							{
 								if (el.placeholder != "" && el.placeholder != null)
      	  	  		SendCaptureResult(id, "INPUT", el.placeholder, el.value, indexString, el.className, attr);
	        		  else
  	      		  {
    	    	  		var nameText = el.getAttribute("name");
        	  	
      	  	  		if (nameText != "" && nameText != null)
	      	  	  		SendCaptureResult(id, "INPUT", nameText, el.value, indexString, el.className, attr);
		      	  	  else
		        		  	SendCaptureResult(id, "INPUT", "", el.value, indexString, el.className, attr);
								}
							}							        	  	
	      		}  	  		
    	  		break;
    	  		
    	  	case "button":
    	  	case "submit":
    	  	case "reset":
    	  	case "image":
    	  	case "file":
    	  		if(el.innerText == "")
      	  		SendCaptureResult(id, "INPUT<BUTTON>", "", el.title, indexString, el.className, attr);
	      	  else
  	   	  		SendCaptureResult(id, "INPUT<BUTTON>", "", el.innerText, indexString, el.className, attr);
    	 	  	break;
    	  		
    		 	default:
     	  		SendCaptureResult(id, "INPUT", "", el.getAttribute("type") + "___" + el.value, indexString, el.className, attr);
     	  		break;
				}
     	}
     	else
     	{
     		if (el.nodeName == "KAT-DROPDOWN")
     		{
					var myContent = el.shadowRoot.innerHTML;
					var myserachindex = 0;
					var myoptionsIndex;
					var mytemp = "0";
					var mytemp1 = "";
					while ((myoptionsIndex = myContent.indexOf ("<kat-option", myserachindex)) != -1)
					{
						if ((myserachindex = myContent.indexOf ('value="', myoptionsIndex)) != -1)
						{
							if ((myoptionsIndex = myContent.indexOf ('">', myserachindex)) != -1)
							{
								mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
								mytemp += "$%" + mytemp1 + "$%";
								if ((myserachindex = myContent.indexOf ('<!---->', myoptionsIndex)) != -1)
								{
									if ((myoptionsIndex = myContent.indexOf ('<!---->', myserachindex + 7)) != -1)
									{
										mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
										mytemp += mytemp1;
									}
								}
							}
						}
						myserachindex = myoptionsIndex;
					}
  	 			SendCaptureResult(id, el.nodeName, "", mytemp, indexString, el.className, attr);
				}
				else
				{
     			if (el.nodeName == "SELECT")
     			{
 	  				var strvalue = el.selectedIndex + "$%" + el.options.length + "$%";
     		
     				for (var i = 0; i < el.options.length; i++)
     				{
     					strvalue += el.options[i].text;
							if (i != (el.options.length - 1))
								strvalue += "$%";
      			}
        		SendCaptureResult(id, el.nodeName, "", strvalue, indexString, el.className, attr);
      		}
 	    		else
   	  		{
   					if (el.nodeName == "BUTTON")
   						SendCaptureResult(id, el.nodeName, "", el.innerText, indexString, el.className, attr);
   					else
   					{
       				if (el.nodeName == "KAT-BUTTON")
        				SendCaptureResult(id, el.nodeName, "", el.getAttribute("label"), indexString, el.className, attr);
        			else
        			{	
	    	      	if (el.nodeName == "KAT-TEXTAREA")
	      	    	{
        					if (el.previousElementSibling != null && 
										 (el.previousElementSibling.nodeName == "SPAN" || el.previousElementSibling.nodeName == "LABEL"))
				    				SendCaptureResult(id, el.nodeName, el.previousElementSibling.innerText, el.getAttribute("value"), indexString, el.className, attr);
									else
		        				SendCaptureResult(id, el.nodeName, el.getAttribute("placeholder"), el.getAttribute("value"), indexString, el.className, attr);
		        		}
   			    		else
   			    		{
   			    			if(el.nodeName == "KAT-DATE-RANGE-PICKER")
   			    			{
          					SendCaptureResult(id, el.nodeName, "", el.getAttribute("start-value") + "~" + el.getAttribute("end-value"), indexString, el.className, attr);
   			    			}
   			    			else
   			    			{
 			      				if (el.nodeName == "svg" || el.nodeName == "SVG")	
          						SendCaptureResult(id, el.nodeName, "", "SVG", indexString, el.className, attr);
 			      				else
 			      				{
											if (el.nodeName == "STRONG")
     										SendCaptureResult(id, el.nodeName, "", el.innerText, i.toString (), el.className, attr);
											else
											{
												if (el.nodeName == "KAT-INPUT")
          								SendCaptureResult(id, el.nodeName, "", el.getAttribute ("value"), indexString, el.className, attr);
												else																				    			      				
  	       								SendCaptureResult(id, el.nodeName, "", el.innerText, indexString, el.className, attr);
    	     						}
      	   					}
        	 				}
         				}
         			}
       			}
       		}
       	}
     	}
		}
	}
  else
  {
		if (el.nodeName == "SPAN")
		{
			if (el.parentElement.nodeName != "TD")
			{
				el = el.parentElement;
				id = el.id;
				if (el.attributes.length != 0)
					attr = el.attributes[el.attributes.length - 1].nodeName;
				else
					attr = "";
			}
		}
		var n = document.getElementsByTagName (el.nodeName);
		for (var i = 0; i < n.length; i++)
		{
			if (el.isSameNode (n[i]))
			{
				if (el.nodeName == "LABEL" || el.nodeName == "SPAN" ||
					 el.nodeName == "H1" || el.nodeName == "H2" || el.nodeName == "H3" ||
    			 el.nodeName == "H4" || el.nodeName == "H5" || el.nodeName == "H6" ||
       		 el.nodeName == "A" || el.nodeName == "P" || el.nodeName == "DIV")
       	{
       		if (el.nodeName == "A")
       		{
        		if (el.firstChild != null && typeof(el.firstChild.wholeText) != "undefined")
         			SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.firstChild.wholeText, i.toString (), el.className, attr);
         		else
         			SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.innerText, i.toString (), el.className, attr);
					}					          	
       		else	
       		{
        		if (id == "" && el.nodeName == "SPAN")
        			SendUnknownSpanCaptureResult(el, "unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
        		else
        	 		SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.innerText, i.toString (), el.className, attr);
        	}
      	}
      	else
      	{
     			if (el.nodeName == "INPUT")
     			{
     				switch (el.getAttribute("type"))
     				{
 		  				case "checkbox":
								if (el.checked == true)
   		  	 				SendCaptureResult("unknown", "CHECKBOX", "", "false", i.toString (), el.className, attr);
   		  	 			else
   		  	 				SendCaptureResult("unknown", "CHECKBOX", "", "true", i.toString (), el.className, attr);
     			 			break;
     			  	
     	  			case "radio":
								var strvalue = "";
	
								if (el.nextSibling != null)
									strvalue = el.nextSibling.textContent;
								else
									strvalue = el.value;
								strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
								strvalue = strvalue.replace("\n", "");
					  		SendCaptureResult("unknown", "RADIO", "", strvalue, i.toString (), el.className, attr);
     	  				break;

	      	  	case "tel":	
  	    	  	case "search":	
    	  	  	case "range":	
      		  	case "number":	
      		  	case "month":
      	  		case "datetime-local":	
 	    	  		case "date":
	      	  	case "text":
  	    	  	case "email":
				 				var spanText = "";
								var labelText = "";
    	  	
	  						if (el.previousElementSibling != null && el.previousElementSibling.nodeName == "SPAN")
 									spanText = el.previousElementSibling.innerText;
	  						if (spanText != "")
        	  			SendCaptureResult("unknown", "INPUT", spanText, el.value, i.toString (), el.className, attr);
			  				else
 								{
 									if (labelText != "")
      		 			  	SendCaptureResult("unknown", "INPUT", labelText, el.value, i.toString (), el.className, attr);
	  							else
	  							{
	  								if (el.placeholder != "" && el.placeholder != null)
		        			  	SendCaptureResult("unknown", "INPUT", el.placeholder, el.value, i.toString (), el.className, attr);
    		    	  		else
        			  		{
	        	  				var nameText = el.getAttribute("name");
        	  	
  	      	  				if (nameText != "" && nameText != null)
				        	  		SendCaptureResult("unknown", "INPUT", nameText, el.value, i.toString (), el.className, attr);
					        	  else
					        	  	SendCaptureResult("unknown", "INPUT", "", el.value, i.toString (), el.className, attr);
										}
									}							        	  	
	      				}  	  		
								break;
									
	      	  	case "button":
  	    	  	case "submit":
    	  	  	case "reset":
      		  	case "image":
      		  	case "file":
      	  			if (el.innerText == "")
       	  				SendCaptureResult("unknown", "INPUT<BUTTON>", "", el.title, i.toString (), el.className, attr);
       	  			else
       	  				SendCaptureResult("unknown", "INPUT<BUTTON>", "", el.innerText, i.toString (), el.className, attr);
       	  			break;
      	  		
	      	  	default:
		          	SendCaptureResult("unknown", "INPUT", "", el.getAttribute("type") + "___" + el.value, i.toString (), el.className, attr);
    	 	  			break;
    		  	}
					}
					else
					{
						if(el.nodeName == "KAT-DROPDOWN")
						{
							var myContent = el.shadowRoot.innerHTML;
							var myserachindex = 0;
							var myoptionsIndex;
							var mytemp = "0";
							var mytemp1 = "";
							while ((myoptionsIndex = myContent.indexOf ("<kat-option", myserachindex)) != -1)
							{
								if ((myserachindex = myContent.indexOf ('value="', myoptionsIndex)) != -1)
								{
									if ((myoptionsIndex = myContent.indexOf ('">', myserachindex)) != -1)
									{
										mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
										mytemp += "$%" + mytemp1 + "$%";
										if ((myserachindex = myContent.indexOf ('<!---->', myoptionsIndex)) != -1)
										{
											if ((myoptionsIndex = myContent.indexOf ('<!---->', myserachindex + 7)) != -1)
											{
												mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
												mytemp += mytemp1;
											}
										}
									}
								}
								myserachindex = myoptionsIndex;
							}
  	   				SendCaptureResult("unknown", el.nodeName, "", mytemp, i.toString (), el.className, attr);
						}
						else
						{
  		     		if (el.nodeName == "SELECT")
    	 				{
   	 						var strvalue = el.selectedIndex + "$%" + el.options.length + "$%";
     		
      					for (var j = 0; j < el.options.length; j++)
      					{
      						strvalue += el.options[j].text;
									if (j != (el.options.length - 1))
										strvalue += "$%";
 	    					}
	   	    			SendCaptureResult("unknown", el.nodeName, "", strvalue, i.toString (), el.className, attr);
  	   				}
    	 				else
     					{
        				if (el.nodeName == "KAT-DATE-PICKER")
      					{
      						SendCaptureResult("unknown", el.nodeName, "", el.getAttribute("value"), i.toString (), el.className, attr);
      					}
      					else
	      				{
  	   						if (el.nodeName == "BUTTON")
    	 							SendCaptureResult("unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
      	 					else
       						{
          					if (el.nodeName == "KAT-BUTTON")
	          					SendCaptureResult("unknown", el.nodeName, "", el.getAttribute("label"), i.toString (), el.className, attr);
		          			else
		          			{
	  	        				if (el.nodeName == "KAT-TEXTAREA")
	    	      				{
	        		  				if (el.previousElementSibling != null && 
							  					 (el.previousElementSibling.nodeName == "SPAN" || el.previousElementSibling.nodeName == "LABEL"))
					          			SendCaptureResult("unknown", el.nodeName, el.previousElementSibling.innerText, el.getAttribute("value"), i.toString (), el.className, attr);
												else
		    	      					SendCaptureResult("unknown", el.nodeName, el.getAttribute("placeholder"), el.getAttribute("value"), i.toString (), el.className, attr);
		      		    		}
   			    		  		else
   			      				{
		          					if (el.nodeName == "KAT-CHECKBOX")
		          					{
        									SendCaptureResult("unknown", el.nodeName, "", el.parentElement.parentElement.innerText, i.toString (), el.className, attr);
   			      					}
   			      					else
   			      					{
   			      						if (el.nodeName == "svg" || el.nodeName == "SVG")	
	        									SendCaptureResult("unknown", el.nodeName, "", "SVG", i.toString (), el.className, attr);
													else
													{
														if (el.nodeName == "STRONG")
	      	  									SendCaptureResult("unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
														else
														{
															if (el.nodeName == "KAT-INPUT")
			      	  	  						SendCaptureResult("unknown", el.nodeName, "", el.getAttribute ("value"), i.toString (), el.className, attr);
			        	  						else
			          							{
			          								if (el.nodeName == "LI")
	        												SendUnknownCaptureResult(el, "unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
			          								else
        													SendCaptureResult("unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
	        										}
  	      									}
    	    								}
      	  							}
        							}	
       							}
      						}
      					}
     					}
     				}
    			}
    		}
    		break;
	    }
		}
	}
	return el;
}


function sendFullDocumentResult (ctlType, hasid, vis)
{
	var i, j;
	var txtType;
	
//	for (i = 0; i < document.body.childNodes.length; i++)
//	var allItems = document.getElementsByTagName("*")
	switch (ctlType)
	{
		case "H1~H6":
			for (j = 1; j < 6; j++)
			{
				txtType = "H" + j;
				var allItems = document.getElementsByTagName(txtType);
				for (i = 0; i < allItems.length; i++)
				{
					var isVisible = allItems[i].offsetWidth > 0 || allItems[i].offsetHeight > 0;
					if (((hasid == true && allItems[i].id != "") || (hasid == false && allItems[i].id == "")) &&
							((vis == true && isVisible == true) || (vis == false && isVisible == false)))
						ProcessSendItemData2RPA (allItems[i]);
				}
			}
			break;
			
		default:
			var allItems = document.getElementsByTagName(ctlType);
			for (i = 0; i < allItems.length; i++)
			{
				var isVisible = allItems[i].offsetWidth > 0 || allItems[i].offsetHeight > 0;
				if (((hasid == true && allItems[i].id != "") || (hasid == false && allItems[i].id == "")) &&
						((vis == true && isVisible == true) || (vis == false && isVisible == false)))
					ProcessSendItemData2RPA (allItems[i]);
			}
			break;
	}							
	sendRightClickResult();
}

/*
function changeBorderColor (el)
{
	if (elLastChangeColor != null)
		elLastChangeColor.style.borderColor = lastBorderColor;
	lastBorderColor = el.style.borderColor;
	el.style.borderColor = "#00FF66";
	elLastChangeColor = el;
	
}
*/

function changeBorderColor (el)
{
	if (elLastChangeColor != null)
		elLastChangeColor.classList.remove("samBorderClass");
//	lastBorderColor = el.style.borderColor;
	el.classList.add("samBorderClass");
	elLastChangeColor = el;
	
}

function cleanBorderColor ()
{
	if (elLastChangeColor != null)
	{
		elLastChangeColor.classList.remove("samBorderClass");
		elLastChangeColor = null;
	}
}

/*
function GetDownloadReceived ()
{

	browser.downloads.search({}, function(items) {
		items.forEach(function(item) {
      if (item.state == 'in_progress') {
      	alert ("Total:" + item.totalBytes + " Recvied:" + item.bytesReceived);
      }
    });
	});

	const instate = {state: 'in_progress'};
	chrome.downloads.search(instate)
	.then ((items) => {
  	if (items.length) {
    	console.log('Download is in progress');
	  } else {
  	  console.log('No download is in progress');
  	}
	});	


	var param = {test_download : "1"};
  chrome.runtime.sendMessage(param, function(response) {
  			console.log(response.farewell);
	});	
}
*/
document.body.addEventListener('click', (e) => {
		var el = e.target;

//		if (fEnable || !fEnable) 
//		var strToken = localStorage ["token"];
//		var myJson = JSON.parse(strToken);
//		var strAccessToken = myJson.access_token;
//				e.preventDefault();
//		GetDownloadReceived ();
		if (fEnable) 
		{
//			chrome.runtime.sendMessage({greeting: "hello background"}, function(response) {
//  			console.log(response.farewell);
//			});
//				var rect = el.getBoundingClientRect();
				if (fMultipleMode == false)
				{
					e.preventDefault();
					e.stopPropagation();
  				e.stopImmediatePropagation();      
  			}
				el = ProcessSendItemData2RPA (el);
				if (el != null)
					changeBorderColor (el);
//        const $el = $(el);
//        const id = $(el).attr('id');
    }
}, {capture: true});

function triggerChange(element, type) {
//  let changeEvent = new Event('change');
//	var evt = document.createEvent("change");
//					  var evtold = document.createEvent("MouseEvents");
//					  evtold.initMouseEvent("mousedown", true, true, window,
//						    0, 0, 0, 10, 10, false, false, false, false, 0, null);
//					  var evt = new MouseEvent('mouseenter', {
//						    'bubbles': true,
//						    'cancelable': true,
//						    'buttons': 1,
//						    'clientX': 10,
//						    'clientY': 10
//					  });
//					  element.dispatchEvent(evt);
//					  evt = new MouseEvent('click', {
//						    'bubbles': true,
//						    'cancelable': true,
//						    'buttons': 1,
//						    'clientX': 10,
//						    'clientY': 10
//					  });
//					  evt.stopPropagation();
//					  element.dispatchEvent(evtold);
//					  element.dispatchEvent(evt);

			evt = new Event('input', {
	    	bubbles: true,
  	  	cancelable: true,
			});
			element.dispatchEvent(evt);
			evt = new Event('change', {
	    	bubbles: true,
  	  	cancelable: true,
			});
			element.dispatchEvent(evt);
//		element.focus ();					  
//		var keyboardEvent = document.createEvent("KeyboardEvent");
//		keyboardEvent.initKeyboardEvent ("keypress",true, true, window,
//			false, false, false, false, 40, 0);
//		element.dispatchEvent(keyboardEvent);

}	

function enterfun(n) {
    
    var ev = new KeyboardEvent('keydown', {altKey:false,
      bubbles: true,
      cancelBubble: false, 
      cancelable: true,
      charCode: 0,
      code: "Enter",
      composed: true,
      ctrlKey: false,
      currentTarget: null,
      defaultPrevented: true,
      detail: 0,
      eventPhase: 0,
      isComposing: false,
      isTrusted: true,
      key: "Enter",
      keyCode: 13,
      location: 0,
      metaKey: false,
      repeat: false,
      returnValue: false,
      shiftKey: false,
      type: "keydown",
      which: 13});

    n.dispatchEvent(ev);
    var ev = new KeyboardEvent('keyup', {altKey:false,
      bubbles: true,
      cancelBubble: false, 
      cancelable: true,
      charCode: 0,
      code: "Enter",
      composed: true,
      ctrlKey: false,
      currentTarget: null,
      defaultPrevented: true,
      detail: 0,
      eventPhase: 0,
      isComposing: false,
      isTrusted: true,
      key: "Enter",
      keyCode: 13,
      location: 0,
      metaKey: false,
      repeat: false,
      returnValue: false,
      shiftKey: false,
      type: "keyup",
      which: 13});

    n.dispatchEvent(ev);
    
}


async function SetItemColor(id, type, caption, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, caption, className, attr, mustInclude);
	
	if (n != null)
		changeBorderColor (n);
	return "success";
}

async function CleanLastItemColor() 
{
	cleanBorderColor ();
	return "success";
}

async function SetItemData(id, type, caption, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, caption, className, attr, mustInclude);
	var realvalue = value;
	
	realvalue = realvalue.replaceAll ("$#@", "\"");
	realvalue = realvalue.replaceAll ("\\t", "\t");
	
	if ((n != null) && (type == "KAT-DROPDOWN" || type == "SELECT"))
	{
    var atoken = value.split("*@");
    if (atoken[0] == "1")
    {
    	atoken[1] = atoken[1].toLowerCase();
			if (type == "KAT-DROPDOWN")
			{
				var myContent = n.shadowRoot.innerHTML;
				var myserachindex = 0;
				var myoptionsIndex;
				var myvalue = "";
				var mytext = "";
				
				while ((myoptionsIndex = myContent.indexOf ("<kat-option", myserachindex)) != -1)
				{
					if ((myserachindex = myContent.indexOf ('value="', myoptionsIndex)) != -1)
					{
						if ((myoptionsIndex = myContent.indexOf ('">', myserachindex)) != -1)
						{
							myvalue = myContent.slice (myserachindex + 7, myoptionsIndex);
							if ((myserachindex = myContent.indexOf ('<!---->', myoptionsIndex)) != -1)
							{
								if ((myoptionsIndex = myContent.indexOf ('<!---->', myserachindex + 7)) != -1)
								{
									mytext = myContent.slice (myserachindex + 7, myoptionsIndex);
									if (mytext.toLowerCase() == atoken[1])
									{
										realvalue = myvalue;
										break;
									}
								}
							}
						}
					}
				}
			}
			else
			{
     		for (var i = 0; i < n.options.length; i++)
     		{
     			if (atoken[1] == n.options[i].text.toLowerCase())
     			{
     				realvalue = i.toString ();
     				break;
     			}
      	}
			}
		}
		else
			realvalue = atoken[1];
	}	
	if (type == "KAT-DROPDOWN" || type == "KAT-DATE-PICKER" || type == "KAT-TEXTAREA" || type == "KAT-INPUT")
	{
		if (n != null)
		{
			n.setAttribute("value", realvalue);
			triggerChange (n, type);
			return "success";
		}
		return "error_not_found";	
	}
	else
	{
		if (type == "SELECT")
		{
			if (n != null)
			{
				n.selectedIndex = parseInt(realvalue, 10);
				triggerChange (n, type);
				return "success";
			}
			return "error_not_found";	
		}
	}
	if (id.localeCompare ("unknown") == 0)
	{
		if (n != null)
		{
			n.value = realvalue;
			triggerChange (n, type);
			enterfun (n);
			return "success";
		}
	}
	else
	{
		var fDoIt = false;
		
  	var elms = document.querySelectorAll("[id='" + id + "']");
							
		if (elms.length != 0)
		{
   	 	for (var i = 0; i < elms.length; i++)
   	 	{
   	 		if (elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
  	 		{
 	    		elms[i].value = realvalue;
					triggerChange (elms[i], type);
					enterfun (elms[i]);
 	    		fDoIt = true;
 	    		break;
   	  	}
 	  	}
 	  }
 	  else
 	  {
 	  	if (caption != "")
 	  	{
				var strAll = GetFullPageInputCtrl ("input", 1);
        var token = strAll.split("$%");
        for (var i = 0; i < token.length; i+= 4)
        {
         	if (token [i + 2] == caption)
         	{
         		document.getElementById(token[i+1]).value = realvalue;
						triggerChange (document.getElementById(token[i+1]), type);
						enterfun (document.getElementById(token[i+1]));
         		fDoIt = true;
         		break;
         	}
        }
 	  	}
 	  }
 	  if (fDoIt == false && n != null)
 	  {
 	  	n.value = realvalue;
			triggerChange (n, type);
			enterfun (n);
 	  	fDoIt = true;
 	  }
 	  if (fDoIt)
 	  	return "success";
	}
	return "error_not_found";	
}

async function SetItemStartEndData(fstart, id, type, caption, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	
	if (n != null)
	{
		if (fstart)
			n.setAttribute("start-value", value);
		else
			n.setAttribute("end-value", value);
		triggerChange (n, type);
		return "success";
	}
	return "error_not_found";	
}


async function SetItemCheckData(id, type, caption, index, value, className, attr, mustInclude) 
{
	var fCheck = (value == "true") ? true : false;
	var n = GetItemInDocument  (id, type, index, caption, className, attr, mustInclude);
	if (n != null)
	{
		if(type == "KAT-CHECKBOX")
		{
			if (fCheck)
				n.setAttribute("checked", "true");
			else
				n.removeAttribute ("checked");
		}
		else
			n.checked = fCheck;
		return "success";
	}
	return "error_not_found";	
}

function GetItemData(id, type, index, className, attr, mustInclude) 
{
	var mytype = type;
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if (n != null)
	{
		if (type == "A")
		{
			if (typeof(n.firstChild.wholeText) != "undefined")
				return n.firstChild.wholeText;
			else
				return n.innerText;
		}
		else
		{
			if (mytype == "INPUT")
			{
  			if (type == "RADIO")
  			{
					var strvalue = "";
					if (n.nextSibling != null)
						strvalue = n.nextSibling.textContent;
					else
						strvalue = n.value;
					strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
					strvalue = strvalue.replace("\n", "");
					return strvalue;
  			}
  			else
  				return n.value;
  		}
  		else
  		{
				if (mytype == "KAT-BUTTON")
					return n.getAttribute("label");				  			
  		}
//  		var hexcode;
//  		for (var i = 0; i < n.innerText.length; i++)
//  			hexcode = n.innerText.charCodeAt(i).toString(16);
			return n.innerText;
			//			return n.innerText.trimEnd ();
		}
	}
	return "error_not_found";	
}

function GetItemCounterData(id, type, index, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if (n != null)
	{
		if (type == "LI")
		{
			return n.parentElement.childElementCount.toString ();
		}
	}
	return "error_not_found";	
}

function GetItemTableData(id, type, index, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if (GetTableContent(n, true) == false)
		return "error_not_found";	
	return "success";	
}

function GetItemDataExtra(id, type, index, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude) 
{
	var mytype = type;
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	var n = GetItemInDocumentExtra  (id, type, index, null, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude);
	if (n != null)
	{
		if (type == "A")
		{
			if (typeof(n.firstChild.wholeText) != "undefined")
				return n.firstChild.wholeText;
			else
				return n.innerText;
		}
		else
		{
			if (mytype == "INPUT")
			{
  			if (type == "RADIO")
  			{
					var strvalue = "";
					if (n.nextSibling != null)
						strvalue = n.nextSibling.textContent;
					else
						strvalue = n.value;
					strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
					strvalue = strvalue.replace("\n", "");
					return strvalue;
  			}
  			else
  				return n.value;
  		}
  		else
  		{
				if (mytype == "KAT-BUTTON")
					return n.getAttribute("label");				  			
  		}
			return n.innerText;
		}
	}
	return "error_not_found";	
}

function GetItemCounterDataExtra(id, type, index, className, attr, elementIndex, childCount, childClassName, parentClassName, parentType, mustInclude) 
{
	var n = GetItemInDocumentExtra  (id, type, index, null, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude);
	if (n != null)
	{
		if (type == "LI" && n.parentElement.nodeName == parentType)
		{
			return n.parentElement.childElementCount.toString ();
		}
	}
	return "error_not_found";	
}

function GetItemEnableData(id, type, index, className, attr, mustInclude) 
{
	var realtype = type;
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	realtype = "INPUT";
	if(n != null)
	{
		if (realtype == "KAT-RADIOBUTTON")
		{
			if (-1 != n.outerHTML.indexOf ("disabled"))
				return "disable";
		}
		else
		{
			if (n.disabled)
				return "disable";
		}
		return "enable";
	}
	return "error_not_found";	
}

function GetItemCheckData (id, type, index, className, attr, mustInclude)
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if(n != null)
	{
		if (type == "KAT-CHECKBOX")
		{
			var value;
			
			if ((value = n.getAttribute("checked")) != null)
			{
//				if (value == "true")
					return "checked";
			}
			return "unchecked";
		}
		if (n.checked)
			return "checked";
		return "unchecked";
	}
	return "error_not_found";	
}	

function ScrollToVisibleCenter (element)
{
	var rect = element.getBoundingClientRect ();
	var yCordinate = (window.innerHeight - rect.height)/ 2;
	if (0 < (window.scrollY + rect.top - yCordinate))
		window.scrollTo (0, window.scrollY + rect.top - yCordinate);
}

function SetItemVisible (id, type, index, className, attr, mustInclude)
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if(n != null)
	{
//		ScrollToVisibleCenter (n);
		n.scrollIntoView ();
		return "success";
	}
	return "error_not_found";	
}

function GetElementInBrowserpos (element)
{
	var rect = element.getBoundingClientRect ();
	var rectRet = { left: 0, top: 0, right: 0, bottom: 0 };
	var parentElemnet = element;
	while (rect.width == 0 || rect.height == 0)
	{
		parentElemnet = parentElemnet.parentNode;
		rect = parentElemnet.getBoundingClientRect ();
	}
	rectRet.top = rect.top;
	rectRet.left = rect.left;
	rectRet.right = rect.right;
	rectRet.bottom = rect.bottom;
	
//	rectRet.left += window.screenX + (window.outerWidth - window.innerWidth);
//	rectRet.right += window.screenX + (window.outerWidth - window.innerWidth);
	rectRet.left += window.screenX;
	rectRet.right += window.screenX;
	rectRet.top *= window.devicePixelRatio;	
	rectRet.left *= window.devicePixelRatio;	
	rectRet.right *= window.devicePixelRatio;	
	rectRet.bottom *= window.devicePixelRatio;	
	rectRet.top += window.screenY + (window.outerHeight - window.innerHeight * window.devicePixelRatio) + 30;
	rectRet.bottom += window.screenY + (window.outerHeight - window.innerHeight * window.devicePixelRatio) + 30;
	
	return Math.ceil(rectRet.left).toString() + "," + Math.ceil(rectRet.top).toString() + "," +
				 Math.ceil(rectRet.right).toString() + "," + Math.ceil(rectRet.bottom).toString(); 
}

function GetItemInDocument  (id, type, index, value, className, attr, mustInclude)
{
	var n = null; 
  var mytype = type;
  var iIndex = parseInt(index, 10);
  var iMax;
  var i, j;
	  
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	n = document.getElementsByTagName (mytype);
	
	
//(+)TEST	
/*
	for (i = n.length - 1; i >= 0; i--)
	{
		if (n[i].childElementCount == 3 &&
				n[i].childNodes[0].className == "a-price-symbol" &&
				n[i].childNodes[1].className == "a-price-whole" &&
				n[i].childNodes[2].className == "a-price-fraction")
		{
				var myNode = n[i];
				while (myNode.nodeName == "SPAN" && myNode.parentNode != null)
					myNode = myNode.parentNode;
				if (myNode.className == "a-section a-spacing-none a-padding-none")	
					return n[i];
		}
	}
*/	
//(-)TEST	
	if (n.length == 1)
		return n[0];
	if (n.length <= iIndex)
	{
		if (id.localeCompare ("unknown") != 0)
			return document.getElementById (id);
		return null;
	}
	iMax = (iIndex > (n.length - iIndex - 1)) ? iIndex : (n.length - iIndex - 1);
//	iMax = (iIndex > (n.length - 1)) ? iIndex : (n.length - 1));
	if (iIndex > iMax)
		return null;
	if (type == "KAT-CHECKBOX" || type == "svg" || type == "SVG")
		return n[iIndex];
	if (type != "KAT-RADIOBUTTON")
	{
		if (id.localeCompare ("unknown") != 0)
		{
			if (n[iIndex].id != id)
			{
				if (value != null && value != "")
				{
					for (i = 1; i <= iMax; i++)
					{
						if ((iIndex - i) >= 0)
						{
							if (n[iIndex - i].id == id && n[iIndex - i].innerText == value)
								return n[iIndex - i];
						}
						if ((iIndex + i) < n.length)
						{
							if (n[iIndex + i].id == id && n[iIndex + i].innerText == value)
								return n[iIndex + i];
						}
					}
				}
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == id)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == id)
							return n[iIndex + i];
					}
				}
				if (value != null && value != "")
				{
					for (i = 0; i <= iMax; i++)
					{
						if ((iIndex - i) >= 0)
						{
							if (n[iIndex - i].innerText == value)
								return n[iIndex - i];
						}
						if ((iIndex + i) < n.length)
						{
							if (n[iIndex + i].innerText == value)
								return n[iIndex + i];
						}
					}
				}
			}
			else
			{
				var fFullMatched = true;
				
				if(className != null && className != "")
				{
					var realClassName = className;
					if (className == "empty-class-name")
						realClassName = "";
					if (n[iIndex].className != realClassName)
						fFullMatched = false;
				}
				if (attr != null && attr != "")
				{
					var realattr = attr;
					if (realattr == "empty-attr")
					{
						realattr = "";
						if (n[iIndex].attributes.length != 0)
							fFullMatched = false;
					}
					else
					{		
						var fFindAttr = false;
						for(i = 0; i < n[iIndex].attributes.length; i++)
						{
							if (n[iIndex].attributes[i].nodeName == realattr)
							{
								fFindAttr = true;
								break;
							}
						}
						if (fFindAttr == false)	
							fFullMatched = false;
					}
				}
				if (fFullMatched)				
					return n[iIndex]; 
				else
				{
					if(className != null && className != "")
					{
						var realClassName = className;
						if (className == "empty-class-name")
							realClassName = "";

						for (i = 1; i <= iMax; i++)
						{
							if ((iIndex - i) >= 0)
							{
								if (n[iIndex - i].id == id && n[iIndex - i].className == realClassName)
									return n[iIndex - i];
							}
							if ((iIndex + i) < n.length)
							{
								if (n[iIndex + i].id == id && n[iIndex + i].className == realClassName)
									return n[iIndex + i];
							}
						}
					}
					return n[iIndex]; 
				}
			}
			return null;
		}
		else
		{
			if(className != null && className != "" && attr != null && attr != "")
			{
				var realClassName = className;
				if (className == "empty-class-name")
					realClassName = "";

				for (i = 0; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0 && n[iIndex - i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex - i].attributes.length == 0)
							{
								if (n[iIndex - i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex - i].innerText.includes(value))
											return n[iIndex - i];
									}
									else
										return n[iIndex - i];
								}
							}
						}
						else
						{
							if (n[iIndex - i].attributes.length != 0)
							{
								var fFindAttr = false;
								for(j = 0; j < n[iIndex - i].attributes.length; j++)
								{
									if (n[iIndex - i].attributes[j].nodeName == attr)
									{
										fFindAttr = true;
										break;
									}
								}
								if (fFindAttr && n[iIndex - i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex - i].innerText.includes(value))
											return n[iIndex - i];
									}
									else
										return n[iIndex - i];
								}
							}
						}
					}
					if ((iIndex + i) < n.length && n[iIndex + i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex + i].attributes.length == 0)
							{
								if (n[iIndex + i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex + i].innerText.includes(value))
											return n[iIndex + i];
									}
									else
										return n[iIndex + i];
								}
							}
						}
						else
						{
							if (n[iIndex + i].attributes.length != 0)
							{
								var fFindAttr = false;
								for(j = 0; j < n[iIndex + i].attributes.length; j++)
								{
									if (n[iIndex + i].attributes[j].nodeName == attr)
									{
										fFindAttr = true;
										break;
									}
								}
								if (fFindAttr && n[iIndex + i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex + i].innerText.includes(value))
											return n[iIndex + i];
									}
									else
										return n[iIndex + i];
								}
							}
						}
					}
				}
			}
			if (value != null && value != "")
			{
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == "" && n[iIndex - i].innerText == value)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == "" && n[iIndex + i].innerText == value)
							return n[iIndex + i];
					}
				}
			}
		}
	}
	else
		return n[iIndex];
	if (attr != null && attr != "")
		return null;
	return n[iIndex];
}

function GetItemInDocumentExtra  (id, type, index, value, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude)
{
	var n = null; 
  var mytype = type;
  var iIndex = parseInt(index, 10);
  var iMax;
  var i;
  var ielementIndex = parseInt (elementIndex);
  var ichildCount = parseInt (childCount);
  var arrChildClassName = childClassName.split("$#");
	var iFindCount = 0;
	  
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	n = document.getElementsByTagName (mytype);
	
	for (i = 0; i < arrChildClassName.length; i++)
	{
		if (arrChildClassName[i] == "empty-class-name")
			arrChildClassName[i] = "";
	}
	if (parentClassName == "empty-class-name")
			parentClassName = "";
	for (i = 0; i < n.length; i++)
	{
		if (n[i].childElementCount == ichildCount)
		{
			var fAllMatched = true;
			for (var j = 0; j < ichildCount; j++)
			{
				if (typeof (n[i].children[j].className) == "undefined")
				{
					if (arrChildClassName[j] != "" && arrChildClassName[j] != "undefined")
					{
						fAllMatched = false;
						break;
					}
				}
				else
				{
					if (n[i].children[j].className != arrChildClassName[j])
					{
						fAllMatched = false;
						break;
					}
				}
			}
			if (fAllMatched == true)
			{
				var myNode = n[i];
				while (myNode.nodeName == mytype && myNode.parentNode != null)
					myNode = myNode.parentNode;
				if (myNode.className == parentClassName)
				{
					//for test
					if (mustInclude == "1" && value != null && value != "")
					{
						if (myNode.innerText.includes(value))
						{
					//
							iFindCount++;	
							if (iFindCount == ielementIndex)
								return n[i];
						}
					}
					else
					{
						iFindCount++;	
						if (iFindCount == ielementIndex)
							return n[i];
					}
				}
			}
		}
	}
//(-)TEST	
	if (n.length <= iIndex)
		return null;
	iMax = (iIndex > (n.length - iIndex - 1)) ? iIndex : (n.length - iIndex - 1);
	if (iIndex > iMax)
		return null;
	if (type == "KAT-CHECKBOX" || type == "svg" || type == "SVG")
		return n[iIndex];
	if (type != "KAT-RADIOBUTTON")
	{
		if (id.localeCompare ("unknown") != 0)
		{
			if (n[iIndex].id != id)
			{
				if (value != null && value != "")
				{
					for (i = 1; i <= iMax; i++)
					{
						if ((iIndex - i) >= 0)
						{
							if (n[iIndex - i].id == id && n[iIndex - i].innerText == value)
								return n[iIndex - i];
						}
						if ((iIndex + i) < n.length)
						{
							if (n[iIndex + i].id == id && n[iIndex + i].innerText == value)
								return n[iIndex + i];
						}
					}
				}
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == id)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == id)
							return n[iIndex + i];
					}
				}
			}
			else
				return n[iIndex]; 
			return null;
		}
		else
		{
			if(className != null && className != "" && attr != null && attr != "")
			{
				var realClassName = className;
				if (className == "empty-class-name")
					realClassName = "";

				for (i = 0; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0 && n[iIndex - i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex - i].attributes.length == 0)
							{
								if (n[iIndex - i].className == realClassName)
									return n[iIndex - i];
							}
						}
						else
						{
							if (n[iIndex - i].attributes.length != 0)
							{
								if (n[iIndex - i].attributes[0].nodeName == attr && n[iIndex - i].className == realClassName)
									return n[iIndex - i];
							}
						}
					}
					if ((iIndex + i) < n.length && n[iIndex + i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex + i].attributes.length == 0)
							{
								if (n[iIndex + i].className == realClassName)
									return n[iIndex + i];
							}
						}
						else
						{
							if (n[iIndex + i].attributes.length != 0)
							{
								if (n[iIndex + i].attributes[0].nodeName == attr && n[iIndex + i].className == realClassName)
									return n[iIndex + i];
							}
						}
					}
				}
			}
			if (value != null && value != "")
			{
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == "" && n[iIndex - i].innerText == value)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == "" && n[iIndex + i].innerText == value)
							return n[iIndex + i];
					}
				}
			}
		}
	}
	else
		return n[iIndex];
	if (attr != null && attr != "")
		return null;
	return n[iIndex];
}

function GetItemCordinate (id, type, index, value, className, attr, mustInclude)
{
		var n = GetItemInDocument  (id, type, index, value, className, attr, mustInclude);
		if (n != null)
			return GetElementInBrowserpos (n);
		return "error_not_found";	
}

function TriggerClick (n)
{
	var evtold = document.createEvent("MouseEvents");
	evtold.initMouseEvent("click", true, true, window,
		    0, 0, 0, 0, 0, false, false, false, false, 0, null);
	var evt = new MouseEvent('click', {
					    'bubbles': true,
					    'cancelable': true
			  });
	if (n.baseURI.includes ("google") && n.baseURI.includes ("mail"))
	{
		n.dispatchEvent(evt);
	}
	else
	{
		evt.stopPropagation();
		n.dispatchEvent(evtold);
		n.dispatchEvent(evt);
	}
}

function TriggerRightClick (n)
{
	var evtold = document.createEvent("MouseEvents");
	evtold.initMouseEvent("click", true, true, window,
		    0, 0, 0, 0, 0, false, false, false, false, 2, null);
	var evt = new MouseEvent('click', {
					    'bubbles': true,
					    'cancelable': true,
					    'button': 2
			  });
	if (n.baseURI.includes ("google") && n.baseURI.includes ("mail"))
	{
		n.dispatchEvent(evt);
	}
	else
	{
		evt.stopPropagation();
		n.dispatchEvent(evtold);
		n.dispatchEvent(evt);
	}
}

function ClickOrTriggerClick (n)
{
	if (typeof(n.click) != 'undefined')
	{
		n.click();
		TriggerClick (n);
	}
	else
	{
//		if (typeof(n.mousedown) != 'undefined' && typeof(n.mouseup) != 'undefined')
//		{
//			n.mousedown();
//			n.mouseup();
//		}
//		else
			TriggerClick (n);
	}
}

function ClickItemExtra(id, type, index, value, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude) 
{
	var n = GetItemInDocumentExtra  (id, type, index, value, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude);
	  var mytype = type;
	  
//	  n = n.parentElement.parentElement.parentElement.parentElement;
//		n.focus ();
//	  ClickOrTriggerClick (n);
//		return "success";
	  
	  if(n != null)
	  {
			if (type == "KAT-CHECKBOX")
			{
//				n.setAttribute("checked", "true");
//					n.removeAttribute ("checked");
				triggerChange (n, type);
				return "success";
			}

	  	
		  if (type == "INPUT<BUTTON>")
		  	mytype = "INPUT";
		
			if (mytype == "KAT-RADIOBUTTON" || mytype == "BUTTON")
			{
				if (mytype == "KAT-RADIOBUTTON")
				{
					n.setAttribute("checked", "true");
					triggerChange (n, type);
				}
				else
					ClickOrTriggerClick (n);
			}
			else
			{
				if (mytype == "A" || mytype == "KAT-BUTTON" || mytype == "BUTTON")
				{
					TriggerClick (n);
				}
				else
				{
					var elms;
					var i;
					var fDoIt = false;
					
					if (id.localeCompare ("unknown") == 0)
					{
						if (n.innerText == value && n.clientHeight != 0 && n.clientWidth != 0)
						{
							ClickOrTriggerClick (n);
							fDoIt = true;
						}
						else
						{
							elms = document.getElementsByTagName (mytype);
					
							for (i = 0; i < elms.length; i++)
							{
								if (elms[i].innerText == value && elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
								{
									ClickOrTriggerClick (elms[i]);
									fDoIt = true;
									break;
								}
							}
						}
					}
					else
					{
			  		elms = document.querySelectorAll("[id='" + id + "']");
	 	  			for (i = 0; i < elms.length; i++)
 		  			{
 	  					if (elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
		 		  		{
								ClickOrTriggerClick (elms[i]);
								fDoIt = true;
								break;
							}
						}
					}
					if (fDoIt == false)
					{
						ClickOrTriggerClick (n);
					}
				}
			}
			return "success";
		}
		return "error_not_found";	
}

function ClickItem(id, type, index, value, className, attr, mustInclude) 
{
		var n = GetItemInDocument  (id, type, index, value, className, attr, mustInclude);
	  var mytype = type;
	  
//	  n = n.parentElement.parentElement.parentElement.parentElement;
//		n.focus ();
//	  ClickOrTriggerClick (n);
//		return "success";
	  
//	  TriggerRightClick (n);
//		return "success";
	  if(n != null)
	  {
			if (type == "KAT-CHECKBOX")
			{
//				n.setAttribute("checked", "true");
//					n.removeAttribute ("checked");
				triggerChange (n, type);
				return "success";
			}

	  	
		  if (type == "INPUT<BUTTON>")
		  	mytype = "INPUT";
		
			if (mytype == "KAT-RADIOBUTTON" || mytype == "BUTTON")
			{
				if (mytype == "KAT-RADIOBUTTON")
				{
					n.setAttribute("checked", "true");
					triggerChange (n, type);
				}
				else
					ClickOrTriggerClick (n);
			}
			else
			{
				if (mytype == "A" || mytype == "KAT-BUTTON" || mytype == "BUTTON")
				{
					TriggerClick (n);
				}
				else
				{
					var elms;
					var i;
					var fDoIt = false;
					
					if (id.localeCompare ("unknown") == 0)
					{
						if ((typeof(n.innerText) == "undefined" || (typeof(n.innerText) != "undefined" && n.innerText == value))
						   && n.clientHeight != 0 && n.clientWidth != 0)
						{
							ClickOrTriggerClick (n);
							fDoIt = true;
						}
						else
						{
							elms = document.getElementsByTagName (mytype);
					
							for (i = 0; i < elms.length; i++)
							{
								if (elms[i].innerText == value && elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
								{
									ClickOrTriggerClick (elms[i]);
									fDoIt = true;
									break;
								}
							}
						}
					}
					else
					{
			  		elms = document.querySelectorAll("[id='" + id + "']");
	 	  			for (i = 0; i < elms.length; i++)
 		  			{
 	  					if (elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
		 		  		{
								ClickOrTriggerClick (elms[i]);
								fDoIt = true;
								break;
							}
						}
					}
					if (fDoIt == false)
					{
						ClickOrTriggerClick (n);
					}
				}
			}
			return "success";
		}
		return "error_not_found";	
}

function FocusItem(id, type, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, value, className, attr, mustInclude);
	  
  if(n != null)
  {
		n.focus ();
		return "success";
	}
	return "error_not_found";	
}

/*
function EnableIFrameListenEvent ()
{
	var iframe = document.getElementsByTagName ("iframe");
	for (var i = 0; i < iframe.length; i++)
	{
		const iframeDocument = iframe[i].contentWindow.document;
		iframeDocument.addEventListener('click', function(e) {
			if (fEnable)
//			if (true)
			{
				var el = e.target;
				var myel = el;
				var header = "";
				var DataTable = "";
				var fFindHeader = false;
				var j;
				
				if (myel.nodeName == "TH" || myel.nodeName == "TD")
				{
					fFindHeader = true;
					myel = myel.parentNode;
					while (myel != null && myel.nodeName != "TR")
						myel = myel.parentNode;
					while (myel.previousElementSibling != null)
						myel = myel.previousElementSibling;
					if (myel != null)
					{	
						while (myel != null)
						{
							for (j = 0; j < myel.children.length; j++)
							{
								if (myel.children[j].nodeName == "TH")
								{
									header += myel.children[j].innerText;
									if (j != (myel.children.length - 1))
										header += "&#";
								}
								else
								{
									if (myel.children[j].nodeName == "TD")
									{
										if(j == 0 && DataTable != "")
											DataTable += "&@";
										DataTable += myel.children[j].innerText;
										if (j != (myel.children.length - 1))
											DataTable += "&#";
									}
								}
							}
							myel = myel.nextElementSibling;							
						}
						alert ("Hedaer=" + header);
						alert ("Data=" + DataTable);
					}
				}	
			} 
    });
  }
}

EnableIFrameListenEvent ();
*/
document.onreadystatechange = function () {
  if (document.readyState === 'complete') {
    sendreadynotification();
  }
}

function sendShowWebCapture ()
{
    const tmp = {
      type: 'ShowWebCapture',
      data: { value: "1" } 
    };
    doSend(JSON.stringify(tmp));
}

chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
	sendShowWebCapture ();
//  alert ("Recv. Send response = " + document.title);
  sendResponse({ title: document.title });

  return true;
});

InitWebSocket ();const ce_main_container = document.createElement('DIV');
const ce_name = document.createElement('DIV');
const ce_input = document.createElement('INPUT');
const ce_button = document.createElement('DIV');
var wsUri = "ws://127.0.0.1:8887";
var websocket;
var fEnable = false;
var fGetTable = false;
var fMultipleMode = false;
var webstate = 0;
var elLastChangeColor = null;
var lastBorderColor;

ce_main_container.classList.add('ce_main');
ce_name.id = 'ce_name';
ce_input.id = 'ce_input';
ce_button.id = 'ce_button';

ce_name.innerHTML = `Hello NAME`;
ce_button.innerHTML = `Change name.`;

ce_main_container.appendChild(ce_name);
ce_main_container.appendChild(ce_input);
ce_main_container.appendChild(ce_button);

var samstyle = document.createElement('style');
samstyle.type = 'text/css';
samstyle.innerHTML = '.samBorderClass { border-color: #00FF66; border-style: solid; border-width: 3px;} .samBorderClass:focus { border-color: #00FF66; border-style: solid; border-width: 3px;}';
document.getElementsByTagName('head')[0].appendChild(samstyle);

var vis = (function(){
    var stateKey, eventKey, keys = {
        hidden: "visibilitychange",
        webkitHidden: "webkitvisibilitychange",
        mozHidden: "mozvisibilitychange",
        msHidden: "msvisibilitychange"
    };
    for (stateKey in keys) {
        if (stateKey in document) {
            eventKey = keys[stateKey];
            break;
        }
    }
    return function(c) {
        if (c)
        {
//        	alert ("Add visibilitychange Event Listener");
        	document.addEventListener(eventKey, c);
        }
        return !document[stateKey];
    }
})();

function sendGetResult (nodeValue)
{
    const tmp = {
      type: 'getresult',
      data: { value: nodeValue } 
    };
    doSend(JSON.stringify(tmp));
}

function sendRightClickResult ()
{
    const tmp = {
      type: 'rightclicked',
      data: { value: "true" } 
    };
    doSend(JSON.stringify(tmp));
}

function sendGetTableResult (TableHeader, TableContent)
{
//		TableHeader = TableHeader.replace(/\"/g, '#@@');
//		TableContent = TableContent.replace(/\"/g, '#@@');
    const tmp = {
      type: 'gettableresult',
      data: { header: TableHeader, content: TableContent} 
    };
    doSend(JSON.stringify(tmp));
}

function sendFullPageResult (strRet)
{
    const tmp = {
      type: 'getFullPageResult',
      data: { value: strRet, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

vis(function(){		
	sendnotification ();
});


function InitWebSocket() {
	websocket = new WebSocket(wsUri);
	websocket.onopen = function(evt) {
		webstate = 1;
    onOpen(evt);
	};

  websocket.onclose = function(evt) {
	 	onClose (evt);
		webstate = 0;
  };
		
  websocket.onmessage = function(evt) {
	  onMessage(evt);
  };
  websocket.onerror = function(evt) {
  	onError(evt);
  };
}

function doSend(message) {
	if (webstate == 1)
		websocket.send(message);
}

function sendnotification ()
{
    const tmp = {
      type: 'notification',
      data: { focus: vis() ? true : false, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

function sendreadynotification ()
{
    const tmp = {
      type: 'notification',
      data: { ready: true, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

/*
document.addEventListener('readystatechange', event => {
  if (event.target.readyState === 'complete') {
    sendreadynotification();
  }
});
*/

function replyenablenotification ()
{
    const tmp = {
      type: 'replyenable',
      data: { focus: vis() ? true : false, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

function onOpen(evt) {
	sendnotification ();
	if (document.readyState === 'complete') {
		sendreadynotification();
	}
}

function onMessage(evt) {
//	alert("Recv Data:" + evt.data); 
	ProcessRecvData (evt.data);
}

function onError(evt) {
//	alert(evt.data);
}

function onClose (evr) {
  setTimeout(function() {
      InitWebSocket();
    }, 1000);
}

document.querySelector('body').appendChild(ce_main_container);
ce_main_container.style.display = "none";


function GetLabelForText (id)
{   
  var nodes = document.getElementsByTagName ("label");
  var i;
  
  for (i = 0; i < nodes.length; i++)
  {
		if (nodes[i].htmlFor == id)
			return nodes[i].innerText;
  }
  return "";
}

function isParentHidden (node)
{
	var par = node.parentNode;
	if (node.style != null && node.style != "undefined")
	{
		if (node.style.display == "none")
			return true;
	}
	if (par != null)
		return isParentHidden (par);
	return false;	
}

function isNodeHidden (node)
{
	var par = node.parentNode;
	if (node.style != null && node.style != "undefined")
	{
		if (node.style.display == "none")
			return true;
	}
	if (node.clientWidth == 0 || node.clientHeight == 0)
		return true;
	if (par != null)
		return isParentHidden (par);
	return false;	
}

function inputTypeisEdit (mytype, inputtype)
{
	var armyEditType = ["text", "email", "number", "password", "tel", "url", "week"];
	if (mytype == "textarea" || armyEditType.includes (inputtype))
		return true;
	return false;	
}

function GetMyFullPageInputCtrl (inputtype, gettype)
{
  var nodes = document.getElementsByTagName (inputtype);
  var i;
  var strRet = "";
  
	for (i = 0; i < nodes.length; i++)
  {
//  	if (inputTypeisEdit(nodes[i].getAttribute("type")) &&
  	if (inputTypeisEdit(inputtype, nodes[i].type) &&
  			(nodes[i].hidden == false) &&
  			(false == isNodeHidden(nodes[i])))
  	{
 			var ph = nodes[i].placeholder;
 			var nametext = nodes[i].getAttribute("name");

  		if (strRet != "")
  			strRet += "$%";
  		if (nodes[i].id)
  		{
  			if ((gettype == 0 || gettype == 1))
  			{
	  			var spanText = "";
  				var labeltext = "";
  			
  				if (nodes[i].previousElementSibling != null && nodes[i].previousElementSibling.nodeName == "SPAN")
  					spanText = nodes[i].previousElementSibling.innerText;
  				if (spanText == "")
  					labeltext = GetLabelForText (nodes[i].id);
	  			if (spanText != "")
		  			strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + spanText + "$%" + i.toString();
  				else
  				{
	  				if (labeltext != "")
	  					strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + labeltext + "$%" + i.toString();
			  		else
			  		{
	  					if (ph != "" && ph != null)
								strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + ph + "$%" + i.toString();
							else
							{
								if (nametext)
									strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + nametext + "$%" + i.toString();
								else
									strRet += nodes[i].nodeName + "$%" + nodes[i].id + "$%" + nodes[i].id + "$%" + i.toString();
							}
						}
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
		  	}
			}
			else
			{
  			if ((gettype == 0 || gettype == 2))
  			{
		  		if (ph != "" && ph != null)
						strRet += nodes[i].nodeName + "$%" + "unknown" + "$%" + ph + "$%" + i.toString();
					else
					{
						if (nametext)
							strRet += nodes[i].nodeName + "$%" + "unknown" + "$%" + nametext + "$%" + i.toString();
						else
						{
				  		if (strRet != "")
				  			strRet = strRet.slice (0, strRet.length - 2);
						}
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
				}	
			}
  	}
  }	
  return strRet;
}

function GetMyFullPageKATTextArea (gettype)
{
  var nodes = document.getElementsByTagName ("KAT-TEXTAREA");
  var i;
  var strRet = "";
  
	for (i = 0; i < nodes.length; i++)
  {
  	if ((nodes[i].hidden == false) &&
  			(false == isNodeHidden(nodes[i])))
  	{
 			var ph = nodes[i].getAttribute("placeholder");
 			var spanText = "";
  			
			if (nodes[i].previousElementSibling != null && 
				 (nodes[i].previousElementSibling.nodeName == "SPAN" || nodes[i].previousElementSibling.nodeName == "LABEL"))
 					spanText = nodes[i].previousElementSibling.innerText;

  		if (strRet != "")
  			strRet += "$%";
  		if (nodes[i].id)
  		{
  			if ((gettype == 0 || gettype == 1))
  			{
	  			if (spanText != "")
		  			strRet += "KAT-TEXTAREA" + "$%" + nodes[i].id + "$%" + spanText + "$%" + i.toString();
  				else
  				{
  					if (ph != "" && ph != null)
							strRet += "KAT-TEXTAREA" + "$%" + nodes[i].id + "$%" + ph + "$%" + i.toString();
						else
							strRet += "KAT-TEXTAREA" + "$%" + nodes[i].id + "$%" + nodes[i].id + "$%" + i.toString();
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
		  	}
			}
			else
			{
  			if ((gettype == 0 || gettype == 2))
  			{
	  			if (spanText != "")
		  			strRet += "KAT-TEXTAREA" + "$%" + "unknown" + "$%" + spanText + "$%" + i.toString();
		  		else
		  		{
		  			if (ph != "" && ph != null)
							strRet += "KAT-TEXTAREA" + "$%" + "unknown" + "$%" + ph + "$%" + i.toString();
						else
						{
			  			if (strRet != "")
			  				strRet = strRet.slice (0, strRet.length - 2);
						}
					}
				}
				else
				{
		  		if (strRet != "")
		  			strRet = strRet.slice (0, strRet.length - 2);
				}	
			}
  	}
  }	
  return strRet;
}

//0: all, 1: has id, 2:idunkown
function GetFullPageInputCtrl (GetType)
{
	var strRet = GetMyFullPageInputCtrl ("input", GetType);
	var strTextArea = GetMyFullPageInputCtrl ("textarea", GetType);
	var strKATTextArea = GetMyFullPageKATTextArea (GetType);
	if (strRet == "")
	{
		if (strTextArea == "")
			return strKATTextArea;
		else
		{
			if (strKATTextArea == "")
				return strTextArea;
			else
				return strTextArea + "$%" + strKATTextArea;
		}
	}
	else
	{
		if (strTextArea == "" && strKATTextArea == "")
			return strRet;
		else
		{
			if (strTextArea == "")
				return strRet + "$%" + strKATTextArea;
			return strRet + "$%" + strTextArea;
		}
	}
}

//0: all, 1: has id, 2:idunkown
function GetFullPageComboCtrl (GetType)
{
  var nodes = document.getElementsByTagName ("KAT-DROPDOWN");
  var nodes1 = document.getElementsByTagName ("SELECT");
  var i;
  var strRet = "";
  
	for (i = 0; i < nodes.length; i++)
  {
  	if ((nodes[i].hidden == false) &&
  			(false == isNodeHidden(nodes[i])))
  	{
			var myoptions = nodes[i].outerHTML;
			var myoptionsIndex = myoptions.indexOf ("options=");
			var mytemp = myoptions.slice (myoptionsIndex + 9);
			var mytemp1 = myoptions.slice (myoptionsIndex);
			var myLastIndex = mytemp.indexOf ("\"");
			mytemp = mytemp1.slice (9, myLastIndex + 9);
			if (strRet.length != 0)
				strRet += "@#";
			if (nodes[i].id)
				strRet += "KAT-DROPDOWN" + "$%" + nodes[i].id + "$%" + nodes[i].getAttribute("label") + "$%" + mytemp + "$%" + i.toString();
			else
				strRet += "KAT-DROPDOWN" + "$%" + "unknown" + "$%" + nodes[i].getAttribute("label") + "$%" + mytemp + "$%" + i.toString();
  	}
  }
	for (i = 0; i < nodes1.length; i++)
  {
  	if ((nodes1[i].hidden == false) &&
  			(false == isNodeHidden(nodes1[i])))
  	{
    	var strvalue = nodes1[i].selectedIndex + "#$" + nodes1[i].options.length + "#$";
			        		
			for (var j = 0; j < nodes1[i].options.length; j++)
			{
				strvalue += nodes1[i].options[j].text;
				if (j != (nodes1[i].options.length - 1))
					strvalue += "#$";
	 		}
			if (strRet.length != 0)
				strRet += "@#";
			if (nodes1[i].id)
				strRet += "SELECT" + "$%" + nodes1[i].id + "$%" + nodes1[i].getAttribute("name") + "$%" + strvalue + "$%" + i.toString();
			else
				strRet += "SELECT" + "$%" + "unknown" + "$%" + nodes1[i].getAttribute("name") + "$%" + strvalue + "$%" + i.toString();
  	}
  }
  return strRet;
}

function ProcessRecvData (myMessage)
{
	var myJson = JSON.parse(myMessage.replace(/\\/g, "\\\\"));
	
	switch (myJson.type)
	{
			case "notification":
					break;

			case "setDataExtra":
					var vData;
					switch (myJson.data.action)
					{
							case "get":
									vData = GetItemDataExtra (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, 
										myJson.data.elementIndex, myJson.data.childCount, myJson.data.childClassName, myJson.data.parentClassName, myJson.data.mustInclude);
									sendGetResult (vData.trim());
									break;
									
							case "getcounter":
									vData = GetItemCounterDataExtra (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, 
										myJson.data.elementIndex, myJson.data.childCount, myJson.data.childClassName, myJson.data.parentClassName, myJson.data.parentType, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "visible":
									vData = SetItemVisible (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
									
							case "getcordinate":
									vData = GetItemCordinate (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
										
							case "getenablestate":
									vData = GetItemEnableData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "getcheckstate":
									vData = GetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "setcheckstate":
									vData = SetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "set":
									vData = SetItemData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setbordercolor":
									vData = SetItemColor (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;										
							case "cleanLastbordercolor":
									vData = CleanLastItemColor ();
									sendGetResult (vData);
									break;										
									
							case "setstartvalue":
									vData = SetItemStartEndData (true, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setendvalue":
									vData = SetItemStartEndData (false, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							
							case "click":
//									vData = ClickItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute);
									vData = ClickItemExtra (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, 
										myJson.data.elementIndex, myJson.data.childCount, myJson.data.childClassName, myJson.data.parentClassName, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "focus":
									vData = FocusItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "select":
									vData = SetItemData (myJson.data.id, myJson.data.type, "", myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
					}
					break;

			case "setData":
					var vData;
					switch (myJson.data.action)
					{
							case "get":
									vData = GetItemData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData.trim());
									break;
							case "getcounter":
									vData = GetItemCounterData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
									
							case "gettable":
									vData = GetItemTableData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									if (vData != "success")
										sendGetResult (vData);
									break;
									
									
							case "visible":
									vData = SetItemVisible (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
									
							case "getcordinate":
									vData = GetItemCordinate (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
										
							case "getenablestate":
									vData = GetItemEnableData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "getcheckstate":
									vData = GetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "setcheckstate":
									vData = SetItemCheckData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;

							case "set":
									vData = SetItemData (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setbordercolor":
									vData = SetItemColor (myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;										
							case "cleanLastbordercolor":
									vData = CleanLastItemColor ();
									sendGetResult (vData);
									break;										

							case "setstartvalue":
									vData = SetItemStartEndData (true, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "setendvalue":
									vData = SetItemStartEndData (false, myJson.data.id, myJson.data.type, myJson.data.caption, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							
							case "click":
									vData = ClickItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "focus":
									vData = FocusItem(myJson.data.id, myJson.data.type, myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
							case "select":
									vData = SetItemData (myJson.data.id, myJson.data.type, "", myJson.data.index, myJson.data.value, myJson.data.className, myJson.data.attribute, myJson.data.mustInclude);
									sendGetResult (vData);
									break;
					}
					break;
			case "broadcast":	
		     	fEnable = myJson.data.enable;
		     	fGetTable = myJson.data.table;
		     	fMultipleMode = myJson.data.multiple;
		     	if(fEnable && vis())
		     		replyenablenotification ();
//		     		alert ("i'm ready");

  		    break;
  	
  		case "getFullDocument": 		    
  		    fEnable = false;
  		    fGetTable = false;
  		    fMultipleMode = false;
  		    sendFullDocumentResult (myJson.data.type, myJson.data.hasid, myJson.data.vis);
//  		    sendFullDocumentResult ("DIV");

  		    break;
  		case "getFullPageInput":
  				var inputtype = myJson.data.inputType;
  				var strRet = GetFullPageInputCtrl (0);
  				sendFullPageResult (strRet);
  				break;
  				
  		case 	"getFullPageCombo":	
  				var strRet = GetFullPageComboCtrl (0);
  				sendFullPageResult (strRet);
  				break;
	}
}

async function SendUnknownSpanCaptureResult(el, keyName, typeName, nodeCaption, nodeValue, unkownIndex, classname, attr) {
		var myClassName = classname;
		var myattr = attr;
		if (myClassName == "")
			myClassName = "empty-class-name";
		if (myattr == "")
			myattr = "empty-attr";
		var json = {"type": "capture", "data": { "id": keyName, "type": typeName, "caption": nodeCaption, "value": nodeValue, "index": unkownIndex, "className": myClassName, "attribute": myattr, "myurl": decodeURI (document.location.href) }};
/*
		json.data["childarray"] = [];
		for (var i = 0; i < el.childNodes.length; i++)
		{
			myClassName = el.childNodes[i].className;
			if (myClassName == "")
				myClassName = "empty-class-name";
			var strel = '{"classname": "' + myClassName + '"}';
			json.data["childarray"].push(JSON.parse(strel));
		}
*/
		json.data["childcount"] = el.childElementCount;
		for (var i = 0; i < el.childElementCount; i++)
		{
			if (typeof (el.children[i].className) == "undefined")
				myClassName = "";
			else
				myClassName = el.children[i].className;
			if (myClassName == "")
				myClassName = "empty-class-name";
			json.data["child" + i + "classname"] = myClassName;
		}
		var pel = el;
		while (pel.nodeName == "SPAN" && pel.parentNode != null)
			pel = pel.parentNode;
		myClassName = pel.className;
		if (myClassName == "")
			myClassName = "empty-class-name";
		json.data["parentclassname"] = myClassName;
		json.data["parenttype"] = pel.nodeName;
    doSend(JSON.stringify(json));
}

async function SendUnknownCaptureResult(el, keyName, typeName, nodeCaption, nodeValue, unkownIndex, classname, attr) {
		var myClassName = classname;
		var myattr = attr;
		if (myClassName == "")
			myClassName = "empty-class-name";
		if (myattr == "")
			myattr = "empty-attr";
		var json = {"type": "capture", "data": { "id": keyName, "type": typeName, "caption": nodeCaption, "value": nodeValue, "index": unkownIndex, "className": myClassName, "attribute": myattr, "myurl": decodeURI (document.location.href) }};
		json.data["childcount"] = el.childNodes.length;
		for (var i = 0; i < el.childNodes.length; i++)
		{
			myClassName = el.childNodes[i].className;
			if (myClassName == "")
				myClassName = "empty-class-name";
			json.data["child" + i + "classname"] = myClassName;
		}
		var pel = el;
		pel = pel.parentNode;
		myClassName = pel.className;
		if (myClassName == "")
			myClassName = "empty-class-name";
		json.data["parentclassname"] = myClassName;
		json.data["parenttype"] = pel.nodeName;
    doSend(JSON.stringify(json));
}

async function SendCaptureResult(keyName, typeName, nodeCaption, nodeValue, unkownIndex, classname, attr) {
		var myClassName = classname;
		var myattr = attr;
		if (myClassName == "")
			myClassName = "empty-class-name";
		if (myattr == "")
			myattr = "empty-attr";
    const tmp = {
      type: 'capture',
      data: { id: keyName, type: typeName, caption: nodeCaption, value: nodeValue, index: unkownIndex, className: myClassName, attribute: myattr, myurl: decodeURI (document.location.href) } 
    };
    doSend(JSON.stringify(tmp));
}

function GetIndexofEmenemt (el)
{
		var n = document.getElementsByTagName (el.nodeName);
		for (var i = 0; i < n.length; i++)
		{
			if (el.isSameNode (n[i]))
				return i;
		}
		return -1;
}

function GetHasIDElementObject (typeName, id, index)
{
	var el;
	
	el = document.getElementById(id);
	if (el != null)
		return el;
	else	
	{
		var n = document.getElementsByTagName (typeName);
		if (index < n.length)
			return n[index];
	}
	return null;	
}

function GetCssTableContent (el, fSendContent)
{
	var myel = el;
	var header = "";
	var DataTable = "";
	var fFindHeader = false;
	var i;
	
	while ((myel != null) && (myel.role == null || myel.role != "row"))
	{
		if (myel.role == "columnheader")
			fFindHeader = true;
		myel = myel.parentNode;
	}
	if (myel != null && myel.role == "row")
	{
		if (fFindHeader == true)
		{
			for (i = 0; i < myel.childNodes.length; i++)
			{
				header += myel.childNodes[i].innerText;
				if (i != (myel.childNodes.length - 1))
					header += "&#";
				
			}
			myel = myel.parentNode.nextSibling.childNodes[0];
			while (myel != null)
			{
				if(DataTable != "")
					DataTable += "&@";
				for (i = 0; i < myel.childNodes.length; i++)
				{
					DataTable += myel.childNodes[i].innerText;
					if (i != (myel.childNodes.length - 1))
						DataTable += "&#";
				}
				myel = myel.nextSibling;
			}
		}
		else
		{
			var elNow = myel;
			myel = myel.parentNode.childNodes[0];
			var fieldCount = myel.childNodes.length;

			while (myel != null)
			{
				if(DataTable != "")
					DataTable += "&@";
				for (i = 0; i < myel.childNodes.length; i++)
				{
					DataTable += myel.childNodes[i].innerText;
					if (i != (myel.childNodes.length - 1))
						DataTable += "&#";
				}
				myel = myel.nextSibling;
			}
			myel = elNow.parentNode.parentNode.childNodes[0];
			for (i = 0; i < myel.childNodes.length; i++)
			{
				if (myel.childNodes[i].childNodes.length == fieldCount)
				{
					elNow = myel.childNodes[i];
					for (var j = 0; j < elNow.childNodes.length; j++)
					{
						header += elNow.childNodes[j].innerText;
						if (j != (elNow.childNodes.length - 1))
							header += "&#";
					}
					break;
				}
			}
		}
		if (fSendContent)
			sendGetTableResult (header, DataTable);
		return true;
	}
	else
		return  false;	
}

function GetRealTableContent (el, fSendContent)
{
	var myel = el;
	var header = "";
	var DataTable = "";
	var j;
				
	if (myel.nodeName == "TH" || myel.nodeName == "TD")
	{
		myel = myel.parentNode;
		while (myel != null && myel.nodeName != "TR")
			myel = myel.parentNode;
		while (myel.previousElementSibling != null)
			myel = myel.previousElementSibling;
		if (myel != null)
		{	
			while (myel != null)
			{
				for (j = 0; j < myel.children.length; j++)
				{
					if (myel.children[j].nodeName == "TH")
					{
						header += myel.children[j].innerText;
						if (j != (myel.children.length - 1))
							header += "&#";
					}
					else
					{
						if (myel.children[j].nodeName == "TD")
						{
							if(j == 0 && DataTable != "")
								DataTable += "&@";
							DataTable += myel.children[j].innerText;
							if (j != (myel.children.length - 1))
								DataTable += "&#";
						}
					}
				}
				myel = myel.nextElementSibling;							
			}
		}
	}
	if (header != "" || DataTable != "")
	{
		if (fSendContent)
			sendGetTableResult (header, DataTable);
		return true;
	}
	return false;	
}

function GetTableContent (el, fSendContent)
{
	if (false == GetCssTableContent (el, fSendContent))
		return GetRealTableContent (el, fSendContent);
	return true;
}	

function ElementIsTable (el)
{
	var myel = el;
	
	if (myel.nodeName == "TH" || myel.nodeName == "TD")
		return true;
	while ((myel != null) && (myel.role == null || myel.role != "row"))
	{
		myel = myel.parentNode;
	}
	if (myel != null && myel.role == "row")
	{
		return true
	}
	return  false;	
}

/*
document.body.addEventListener('contextmenu', (e) => {
		var el = e.target;
		if (fEnable) 
		{
			e.preventDefault();
			sendRightClickResult ();
		}
}, {capture: true});
*/

function ProcessSendItemData2RPA (el)
{
	if (fGetTable)
	{
		if (false == ElementIsTable (el))
			return null;
	}
	var id = el.id;
	var attr = "";
	if (el.attributes.length != 0)
		attr = el.attributes[el.attributes.length - 1].nodeName;
  if (id) 
  {
   	var indexString = GetIndexofEmenemt(el).toString ();
    if (el.nodeName == "LABEL" || el.nodeName == "SPAN" ||
     		el.nodeName == "H1" || el.nodeName == "H2" || el.nodeName == "H3" ||
     		el.nodeName == "H4" || el.nodeName == "H5" || el.nodeName == "H6" ||
     		el.nodeName == "A" || el.nodeName == "P")
    {
			if (el.nodeName == "SPAN")
			{
				if (el.parentElement.nodeName != "TD" && el.parentElement.nodeName != "DIV")
				{
					el = el.parentElement;
					id = el.id;
					indexString = GetIndexofEmenemt(el).toString ();
					if (el.attributes.length != 0)
						attr = el.attributes[el.attributes.length - 1].nodeName;
					else
						attr = "";
				}
			}
	  	if (el.nodeName == "A" && el.firstChild != null && typeof(el.firstChild.wholeText) != "undefined")
     		SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.firstChild.wholeText, indexString, el.className, attr);
    	else	
    		SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.innerText, indexString, el.className, attr);
  	}
    else
    {
   		if (el.nodeName == "INPUT")
   		{
   			switch (el.getAttribute("type"))
   			{
   				case "checkbox":
						if (el.checked == true)
 		  	  		SendCaptureResult(id, "CHECKBOX", "", "false", indexString, el.className, attr);
 		  	  	else
 		  	  		SendCaptureResult(id, "CHECKBOX", "", "true", indexString, el.className, attr);
    	 	  	break;
     	  	
     	  	case "radio":
						var strvalue = "";
						if (el.nextSibling != null)
							strvalue = el.nextSibling.textContent;
						else
							strvalue = el.value;
						strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
						strvalue = strvalue.replace("\n", "");
	  	  		SendCaptureResult(id, "RADIO", "", strvalue, indexString, el.className, attr);
  	  	  	break;
    	  		
    	  	case "tel":	
    	  	case "search":	
    	  	case "range":	
    	  	case "number":	
    	  	case "month":
    	  	case "datetime-local":	
    	  	case "date":
    	  	case "text":
    	  	case "email":
  					var spanText = "";
						var labelText = "";
    	  	
		 				if (el.previousElementSibling != null && el.previousElementSibling.nodeName == "SPAN")
 							spanText = el.previousElementSibling.innerText;
 						if (spanText == "")
		 					labelText = GetLabelForText (id);
	 					if (spanText != "")
  	    	  	SendCaptureResult(id, "INPUT", spanText, el.value, indexString, el.className, attr);
	 					else
 						{
 							if (labelText != "")
      	 	  		SendCaptureResult(id, "INPUT", labelText, el.value, indexString, el.className, attr);
	 						else
 							{
 								if (el.placeholder != "" && el.placeholder != null)
      	  	  		SendCaptureResult(id, "INPUT", el.placeholder, el.value, indexString, el.className, attr);
	        		  else
  	      		  {
    	    	  		var nameText = el.getAttribute("name");
        	  	
      	  	  		if (nameText != "" && nameText != null)
	      	  	  		SendCaptureResult(id, "INPUT", nameText, el.value, indexString, el.className, attr);
		      	  	  else
		        		  	SendCaptureResult(id, "INPUT", "", el.value, indexString, el.className, attr);
								}
							}							        	  	
	      		}  	  		
    	  		break;
    	  		
    	  	case "button":
    	  	case "submit":
    	  	case "reset":
    	  	case "image":
    	  	case "file":
    	  		if(el.innerText == "")
      	  		SendCaptureResult(id, "INPUT<BUTTON>", "", el.title, indexString, el.className, attr);
	      	  else
  	   	  		SendCaptureResult(id, "INPUT<BUTTON>", "", el.innerText, indexString, el.className, attr);
    	 	  	break;
    	  		
    		 	default:
     	  		SendCaptureResult(id, "INPUT", "", el.getAttribute("type") + "___" + el.value, indexString, el.className, attr);
     	  		break;
				}
     	}
     	else
     	{
     		if (el.nodeName == "KAT-DROPDOWN")
     		{
					var myContent = el.shadowRoot.innerHTML;
					var myserachindex = 0;
					var myoptionsIndex;
					var mytemp = "0";
					var mytemp1 = "";
					while ((myoptionsIndex = myContent.indexOf ("<kat-option", myserachindex)) != -1)
					{
						if ((myserachindex = myContent.indexOf ('value="', myoptionsIndex)) != -1)
						{
							if ((myoptionsIndex = myContent.indexOf ('">', myserachindex)) != -1)
							{
								mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
								mytemp += "$%" + mytemp1 + "$%";
								if ((myserachindex = myContent.indexOf ('<!---->', myoptionsIndex)) != -1)
								{
									if ((myoptionsIndex = myContent.indexOf ('<!---->', myserachindex + 7)) != -1)
									{
										mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
										mytemp += mytemp1;
									}
								}
							}
						}
						myserachindex = myoptionsIndex;
					}
  	 			SendCaptureResult(id, el.nodeName, "", mytemp, indexString, el.className, attr);
				}
				else
				{
     			if (el.nodeName == "SELECT")
     			{
 	  				var strvalue = el.selectedIndex + "$%" + el.options.length + "$%";
     		
     				for (var i = 0; i < el.options.length; i++)
     				{
     					strvalue += el.options[i].text;
							if (i != (el.options.length - 1))
								strvalue += "$%";
      			}
        		SendCaptureResult(id, el.nodeName, "", strvalue, indexString, el.className, attr);
      		}
 	    		else
   	  		{
   					if (el.nodeName == "BUTTON")
   						SendCaptureResult(id, el.nodeName, "", el.innerText, indexString, el.className, attr);
   					else
   					{
       				if (el.nodeName == "KAT-BUTTON")
        				SendCaptureResult(id, el.nodeName, "", el.getAttribute("label"), indexString, el.className, attr);
        			else
        			{	
	    	      	if (el.nodeName == "KAT-TEXTAREA")
	      	    	{
        					if (el.previousElementSibling != null && 
										 (el.previousElementSibling.nodeName == "SPAN" || el.previousElementSibling.nodeName == "LABEL"))
				    				SendCaptureResult(id, el.nodeName, el.previousElementSibling.innerText, el.getAttribute("value"), indexString, el.className, attr);
									else
		        				SendCaptureResult(id, el.nodeName, el.getAttribute("placeholder"), el.getAttribute("value"), indexString, el.className, attr);
		        		}
   			    		else
   			    		{
   			    			if(el.nodeName == "KAT-DATE-RANGE-PICKER")
   			    			{
          					SendCaptureResult(id, el.nodeName, "", el.getAttribute("start-value") + "~" + el.getAttribute("end-value"), indexString, el.className, attr);
   			    			}
   			    			else
   			    			{
 			      				if (el.nodeName == "svg" || el.nodeName == "SVG")	
          						SendCaptureResult(id, el.nodeName, "", "SVG", indexString, el.className, attr);
 			      				else
 			      				{
											if (el.nodeName == "STRONG")
     										SendCaptureResult(id, el.nodeName, "", el.innerText, i.toString (), el.className, attr);
											else
											{
												if (el.nodeName == "KAT-INPUT")
          								SendCaptureResult(id, el.nodeName, "", el.getAttribute ("value"), indexString, el.className, attr);
												else																				    			      				
  	       								SendCaptureResult(id, el.nodeName, "", el.innerText, indexString, el.className, attr);
    	     						}
      	   					}
        	 				}
         				}
         			}
       			}
       		}
       	}
     	}
		}
	}
  else
  {
		if (el.nodeName == "SPAN")
		{
			if (el.parentElement.nodeName != "TD")
			{
				el = el.parentElement;
				id = el.id;
				if (el.attributes.length != 0)
					attr = el.attributes[el.attributes.length - 1].nodeName;
				else
					attr = "";
			}
		}
		var n = document.getElementsByTagName (el.nodeName);
		for (var i = 0; i < n.length; i++)
		{
			if (el.isSameNode (n[i]))
			{
				if (el.nodeName == "LABEL" || el.nodeName == "SPAN" ||
					 el.nodeName == "H1" || el.nodeName == "H2" || el.nodeName == "H3" ||
    			 el.nodeName == "H4" || el.nodeName == "H5" || el.nodeName == "H6" ||
       		 el.nodeName == "A" || el.nodeName == "P" || el.nodeName == "DIV")
       	{
       		if (el.nodeName == "A")
       		{
        		if (el.firstChild != null && typeof(el.firstChild.wholeText) != "undefined")
         			SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.firstChild.wholeText, i.toString (), el.className, attr);
         		else
         			SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.innerText, i.toString (), el.className, attr);
					}					          	
       		else	
       		{
        		if (id == "" && el.nodeName == "SPAN")
        			SendUnknownSpanCaptureResult(el, "unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
        		else
        	 		SendCaptureResult(id == "" ? "unknown" : id, el.nodeName, "", el.innerText, i.toString (), el.className, attr);
        	}
      	}
      	else
      	{
     			if (el.nodeName == "INPUT")
     			{
     				switch (el.getAttribute("type"))
     				{
 		  				case "checkbox":
								if (el.checked == true)
   		  	 				SendCaptureResult("unknown", "CHECKBOX", "", "false", i.toString (), el.className, attr);
   		  	 			else
   		  	 				SendCaptureResult("unknown", "CHECKBOX", "", "true", i.toString (), el.className, attr);
     			 			break;
     			  	
     	  			case "radio":
								var strvalue = "";
	
								if (el.nextSibling != null)
									strvalue = el.nextSibling.textContent;
								else
									strvalue = el.value;
								strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
								strvalue = strvalue.replace("\n", "");
					  		SendCaptureResult("unknown", "RADIO", "", strvalue, i.toString (), el.className, attr);
     	  				break;

	      	  	case "tel":	
  	    	  	case "search":	
    	  	  	case "range":	
      		  	case "number":	
      		  	case "month":
      	  		case "datetime-local":	
 	    	  		case "date":
	      	  	case "text":
  	    	  	case "email":
				 				var spanText = "";
								var labelText = "";
    	  	
	  						if (el.previousElementSibling != null && el.previousElementSibling.nodeName == "SPAN")
 									spanText = el.previousElementSibling.innerText;
	  						if (spanText != "")
        	  			SendCaptureResult("unknown", "INPUT", spanText, el.value, i.toString (), el.className, attr);
			  				else
 								{
 									if (labelText != "")
      		 			  	SendCaptureResult("unknown", "INPUT", labelText, el.value, i.toString (), el.className, attr);
	  							else
	  							{
	  								if (el.placeholder != "" && el.placeholder != null)
		        			  	SendCaptureResult("unknown", "INPUT", el.placeholder, el.value, i.toString (), el.className, attr);
    		    	  		else
        			  		{
	        	  				var nameText = el.getAttribute("name");
        	  	
  	      	  				if (nameText != "" && nameText != null)
				        	  		SendCaptureResult("unknown", "INPUT", nameText, el.value, i.toString (), el.className, attr);
					        	  else
					        	  	SendCaptureResult("unknown", "INPUT", "", el.value, i.toString (), el.className, attr);
										}
									}							        	  	
	      				}  	  		
								break;
									
	      	  	case "button":
  	    	  	case "submit":
    	  	  	case "reset":
      		  	case "image":
      		  	case "file":
      	  			if (el.innerText == "")
       	  				SendCaptureResult("unknown", "INPUT<BUTTON>", "", el.title, i.toString (), el.className, attr);
       	  			else
       	  				SendCaptureResult("unknown", "INPUT<BUTTON>", "", el.innerText, i.toString (), el.className, attr);
       	  			break;
      	  		
	      	  	default:
		          	SendCaptureResult("unknown", "INPUT", "", el.getAttribute("type") + "___" + el.value, i.toString (), el.className, attr);
    	 	  			break;
    		  	}
					}
					else
					{
						if(el.nodeName == "KAT-DROPDOWN")
						{
							var myContent = el.shadowRoot.innerHTML;
							var myserachindex = 0;
							var myoptionsIndex;
							var mytemp = "0";
							var mytemp1 = "";
							while ((myoptionsIndex = myContent.indexOf ("<kat-option", myserachindex)) != -1)
							{
								if ((myserachindex = myContent.indexOf ('value="', myoptionsIndex)) != -1)
								{
									if ((myoptionsIndex = myContent.indexOf ('">', myserachindex)) != -1)
									{
										mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
										mytemp += "$%" + mytemp1 + "$%";
										if ((myserachindex = myContent.indexOf ('<!---->', myoptionsIndex)) != -1)
										{
											if ((myoptionsIndex = myContent.indexOf ('<!---->', myserachindex + 7)) != -1)
											{
												mytemp1 = myContent.slice (myserachindex + 7, myoptionsIndex);
												mytemp += mytemp1;
											}
										}
									}
								}
								myserachindex = myoptionsIndex;
							}
  	   				SendCaptureResult("unknown", el.nodeName, "", mytemp, i.toString (), el.className, attr);
						}
						else
						{
  		     		if (el.nodeName == "SELECT")
    	 				{
   	 						var strvalue = el.selectedIndex + "$%" + el.options.length + "$%";
     		
      					for (var j = 0; j < el.options.length; j++)
      					{
      						strvalue += el.options[j].text;
									if (j != (el.options.length - 1))
										strvalue += "$%";
 	    					}
	   	    			SendCaptureResult("unknown", el.nodeName, "", strvalue, i.toString (), el.className, attr);
  	   				}
    	 				else
     					{
        				if (el.nodeName == "KAT-DATE-PICKER")
      					{
      						SendCaptureResult("unknown", el.nodeName, "", el.getAttribute("value"), i.toString (), el.className, attr);
      					}
      					else
	      				{
  	   						if (el.nodeName == "BUTTON")
    	 							SendCaptureResult("unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
      	 					else
       						{
          					if (el.nodeName == "KAT-BUTTON")
	          					SendCaptureResult("unknown", el.nodeName, "", el.getAttribute("label"), i.toString (), el.className, attr);
		          			else
		          			{
	  	        				if (el.nodeName == "KAT-TEXTAREA")
	    	      				{
	        		  				if (el.previousElementSibling != null && 
							  					 (el.previousElementSibling.nodeName == "SPAN" || el.previousElementSibling.nodeName == "LABEL"))
					          			SendCaptureResult("unknown", el.nodeName, el.previousElementSibling.innerText, el.getAttribute("value"), i.toString (), el.className, attr);
												else
		    	      					SendCaptureResult("unknown", el.nodeName, el.getAttribute("placeholder"), el.getAttribute("value"), i.toString (), el.className, attr);
		      		    		}
   			    		  		else
   			      				{
		          					if (el.nodeName == "KAT-CHECKBOX")
		          					{
        									SendCaptureResult("unknown", el.nodeName, "", el.parentElement.parentElement.innerText, i.toString (), el.className, attr);
   			      					}
   			      					else
   			      					{
   			      						if (el.nodeName == "svg" || el.nodeName == "SVG")	
	        									SendCaptureResult("unknown", el.nodeName, "", "SVG", i.toString (), el.className, attr);
													else
													{
														if (el.nodeName == "STRONG")
	      	  									SendCaptureResult("unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
														else
														{
															if (el.nodeName == "KAT-INPUT")
			      	  	  						SendCaptureResult("unknown", el.nodeName, "", el.getAttribute ("value"), i.toString (), el.className, attr);
			        	  						else
			          							{
			          								if (el.nodeName == "LI")
	        												SendUnknownCaptureResult(el, "unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
			          								else
        													SendCaptureResult("unknown", el.nodeName, "", el.innerText, i.toString (), el.className, attr);
	        										}
  	      									}
    	    								}
      	  							}
        							}	
       							}
      						}
      					}
     					}
     				}
    			}
    		}
    		break;
	    }
		}
	}
	return el;
}


function sendFullDocumentResult (ctlType, hasid, vis)
{
	var i, j;
	var txtType;
	
//	for (i = 0; i < document.body.childNodes.length; i++)
//	var allItems = document.getElementsByTagName("*")
	switch (ctlType)
	{
		case "H1~H6":
			for (j = 1; j < 6; j++)
			{
				txtType = "H" + j;
				var allItems = document.getElementsByTagName(txtType);
				for (i = 0; i < allItems.length; i++)
				{
					var isVisible = allItems[i].offsetWidth > 0 || allItems[i].offsetHeight > 0;
					if (((hasid == true && allItems[i].id != "") || (hasid == false && allItems[i].id == "")) &&
							((vis == true && isVisible == true) || (vis == false && isVisible == false)))
						ProcessSendItemData2RPA (allItems[i]);
				}
			}
			break;
			
		default:
			var allItems = document.getElementsByTagName(ctlType);
			for (i = 0; i < allItems.length; i++)
			{
				var isVisible = allItems[i].offsetWidth > 0 || allItems[i].offsetHeight > 0;
				if (((hasid == true && allItems[i].id != "") || (hasid == false && allItems[i].id == "")) &&
						((vis == true && isVisible == true) || (vis == false && isVisible == false)))
					ProcessSendItemData2RPA (allItems[i]);
			}
			break;
	}							
	sendRightClickResult();
}

/*
function changeBorderColor (el)
{
	if (elLastChangeColor != null)
		elLastChangeColor.style.borderColor = lastBorderColor;
	lastBorderColor = el.style.borderColor;
	el.style.borderColor = "#00FF66";
	elLastChangeColor = el;
	
}
*/

function changeBorderColor (el)
{
	if (elLastChangeColor != null)
		elLastChangeColor.classList.remove("samBorderClass");
//	lastBorderColor = el.style.borderColor;
	el.classList.add("samBorderClass");
	elLastChangeColor = el;
	
}

function cleanBorderColor ()
{
	if (elLastChangeColor != null)
	{
		elLastChangeColor.classList.remove("samBorderClass");
		elLastChangeColor = null;
	}
}

/*
function GetDownloadReceived ()
{

	browser.downloads.search({}, function(items) {
		items.forEach(function(item) {
      if (item.state == 'in_progress') {
      	alert ("Total:" + item.totalBytes + " Recvied:" + item.bytesReceived);
      }
    });
	});

	const instate = {state: 'in_progress'};
	chrome.downloads.search(instate)
	.then ((items) => {
  	if (items.length) {
    	console.log('Download is in progress');
	  } else {
  	  console.log('No download is in progress');
  	}
	});	


	var param = {test_download : "1"};
  chrome.runtime.sendMessage(param, function(response) {
  			console.log(response.farewell);
	});	
}
*/
document.body.addEventListener('click', (e) => {
		var el = e.target;

//		if (fEnable || !fEnable) 
//		var strToken = localStorage ["token"];
//		var myJson = JSON.parse(strToken);
//		var strAccessToken = myJson.access_token;
//				e.preventDefault();
//		GetDownloadReceived ();
		if (fEnable) 
		{
//			chrome.runtime.sendMessage({greeting: "hello background"}, function(response) {
//  			console.log(response.farewell);
//			});
//				var rect = el.getBoundingClientRect();
				if (fMultipleMode == false)
				{
					e.preventDefault();
					e.stopPropagation();
  				e.stopImmediatePropagation();      
  			}
				el = ProcessSendItemData2RPA (el);
				if (el != null)
					changeBorderColor (el);
//        const $el = $(el);
//        const id = $(el).attr('id');
    }
}, {capture: true});

function triggerChange(element, type) {
//  let changeEvent = new Event('change');
//	var evt = document.createEvent("change");
//					  var evtold = document.createEvent("MouseEvents");
//					  evtold.initMouseEvent("mousedown", true, true, window,
//						    0, 0, 0, 10, 10, false, false, false, false, 0, null);
//					  var evt = new MouseEvent('mouseenter', {
//						    'bubbles': true,
//						    'cancelable': true,
//						    'buttons': 1,
//						    'clientX': 10,
//						    'clientY': 10
//					  });
//					  element.dispatchEvent(evt);
//					  evt = new MouseEvent('click', {
//						    'bubbles': true,
//						    'cancelable': true,
//						    'buttons': 1,
//						    'clientX': 10,
//						    'clientY': 10
//					  });
//					  evt.stopPropagation();
//					  element.dispatchEvent(evtold);
//					  element.dispatchEvent(evt);

			evt = new Event('input', {
	    	bubbles: true,
  	  	cancelable: true,
			});
			element.dispatchEvent(evt);
			evt = new Event('change', {
	    	bubbles: true,
  	  	cancelable: true,
			});
			element.dispatchEvent(evt);
//		element.focus ();					  
//		var keyboardEvent = document.createEvent("KeyboardEvent");
//		keyboardEvent.initKeyboardEvent ("keypress",true, true, window,
//			false, false, false, false, 40, 0);
//		element.dispatchEvent(keyboardEvent);

}	

function enterfun(n) {
    
    var ev = new KeyboardEvent('keydown', {altKey:false,
      bubbles: true,
      cancelBubble: false, 
      cancelable: true,
      charCode: 0,
      code: "Enter",
      composed: true,
      ctrlKey: false,
      currentTarget: null,
      defaultPrevented: true,
      detail: 0,
      eventPhase: 0,
      isComposing: false,
      isTrusted: true,
      key: "Enter",
      keyCode: 13,
      location: 0,
      metaKey: false,
      repeat: false,
      returnValue: false,
      shiftKey: false,
      type: "keydown",
      which: 13});

    n.dispatchEvent(ev);
    var ev = new KeyboardEvent('keyup', {altKey:false,
      bubbles: true,
      cancelBubble: false, 
      cancelable: true,
      charCode: 0,
      code: "Enter",
      composed: true,
      ctrlKey: false,
      currentTarget: null,
      defaultPrevented: true,
      detail: 0,
      eventPhase: 0,
      isComposing: false,
      isTrusted: true,
      key: "Enter",
      keyCode: 13,
      location: 0,
      metaKey: false,
      repeat: false,
      returnValue: false,
      shiftKey: false,
      type: "keyup",
      which: 13});

    n.dispatchEvent(ev);
    
}


async function SetItemColor(id, type, caption, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, caption, className, attr, mustInclude);
	
	if (n != null)
		changeBorderColor (n);
	return "success";
}

async function CleanLastItemColor() 
{
	cleanBorderColor ();
	return "success";
}

async function SetItemData(id, type, caption, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, caption, className, attr, mustInclude);
	var realvalue = value;
	
	realvalue = realvalue.replaceAll ("$#@", "\"");
	realvalue = realvalue.replaceAll ("\\t", "\t");
	
	if ((n != null) && (type == "KAT-DROPDOWN" || type == "SELECT"))
	{
    var atoken = value.split("*@");
    if (atoken[0] == "1")
    {
    	atoken[1] = atoken[1].toLowerCase();
			if (type == "KAT-DROPDOWN")
			{
				var myContent = n.shadowRoot.innerHTML;
				var myserachindex = 0;
				var myoptionsIndex;
				var myvalue = "";
				var mytext = "";
				
				while ((myoptionsIndex = myContent.indexOf ("<kat-option", myserachindex)) != -1)
				{
					if ((myserachindex = myContent.indexOf ('value="', myoptionsIndex)) != -1)
					{
						if ((myoptionsIndex = myContent.indexOf ('">', myserachindex)) != -1)
						{
							myvalue = myContent.slice (myserachindex + 7, myoptionsIndex);
							if ((myserachindex = myContent.indexOf ('<!---->', myoptionsIndex)) != -1)
							{
								if ((myoptionsIndex = myContent.indexOf ('<!---->', myserachindex + 7)) != -1)
								{
									mytext = myContent.slice (myserachindex + 7, myoptionsIndex);
									if (mytext.toLowerCase() == atoken[1])
									{
										realvalue = myvalue;
										break;
									}
								}
							}
						}
					}
				}
			}
			else
			{
     		for (var i = 0; i < n.options.length; i++)
     		{
     			if (atoken[1] == n.options[i].text.toLowerCase())
     			{
     				realvalue = i.toString ();
     				break;
     			}
      	}
			}
		}
		else
			realvalue = atoken[1];
	}	
	if (type == "KAT-DROPDOWN" || type == "KAT-DATE-PICKER" || type == "KAT-TEXTAREA" || type == "KAT-INPUT")
	{
		if (n != null)
		{
			n.setAttribute("value", realvalue);
			triggerChange (n, type);
			return "success";
		}
		return "error_not_found";	
	}
	else
	{
		if (type == "SELECT")
		{
			if (n != null)
			{
				n.selectedIndex = parseInt(realvalue, 10);
				triggerChange (n, type);
				return "success";
			}
			return "error_not_found";	
		}
	}
	if (id.localeCompare ("unknown") == 0)
	{
		if (n != null)
		{
			n.value = realvalue;
			triggerChange (n, type);
			enterfun (n);
			return "success";
		}
	}
	else
	{
		var fDoIt = false;
		
  	var elms = document.querySelectorAll("[id='" + id + "']");
							
		if (elms.length != 0)
		{
   	 	for (var i = 0; i < elms.length; i++)
   	 	{
   	 		if (elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
  	 		{
 	    		elms[i].value = realvalue;
					triggerChange (elms[i], type);
					enterfun (elms[i]);
 	    		fDoIt = true;
 	    		break;
   	  	}
 	  	}
 	  }
 	  else
 	  {
 	  	if (caption != "")
 	  	{
				var strAll = GetFullPageInputCtrl ("input", 1);
        var token = strAll.split("$%");
        for (var i = 0; i < token.length; i+= 4)
        {
         	if (token [i + 2] == caption)
         	{
         		document.getElementById(token[i+1]).value = realvalue;
						triggerChange (document.getElementById(token[i+1]), type);
						enterfun (document.getElementById(token[i+1]));
         		fDoIt = true;
         		break;
         	}
        }
 	  	}
 	  }
 	  if (fDoIt == false && n != null)
 	  {
 	  	n.value = realvalue;
			triggerChange (n, type);
			enterfun (n);
 	  	fDoIt = true;
 	  }
 	  if (fDoIt)
 	  	return "success";
	}
	return "error_not_found";	
}

async function SetItemStartEndData(fstart, id, type, caption, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	
	if (n != null)
	{
		if (fstart)
			n.setAttribute("start-value", value);
		else
			n.setAttribute("end-value", value);
		triggerChange (n, type);
		return "success";
	}
	return "error_not_found";	
}


async function SetItemCheckData(id, type, caption, index, value, className, attr, mustInclude) 
{
	var fCheck = (value == "true") ? true : false;
	var n = GetItemInDocument  (id, type, index, caption, className, attr, mustInclude);
	if (n != null)
	{
		if(type == "KAT-CHECKBOX")
		{
			if (fCheck)
				n.setAttribute("checked", "true");
			else
				n.removeAttribute ("checked");
		}
		else
			n.checked = fCheck;
		return "success";
	}
	return "error_not_found";	
}

function GetItemData(id, type, index, className, attr, mustInclude) 
{
	var mytype = type;
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if (n != null)
	{
		if (type == "A")
		{
			if (typeof(n.firstChild.wholeText) != "undefined")
				return n.firstChild.wholeText;
			else
				return n.innerText;
		}
		else
		{
			if (mytype == "INPUT")
			{
  			if (type == "RADIO")
  			{
					var strvalue = "";
					if (n.nextSibling != null)
						strvalue = n.nextSibling.textContent;
					else
						strvalue = n.value;
					strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
					strvalue = strvalue.replace("\n", "");
					return strvalue;
  			}
  			else
  				return n.value;
  		}
  		else
  		{
				if (mytype == "KAT-BUTTON")
					return n.getAttribute("label");				  			
  		}
//  		var hexcode;
//  		for (var i = 0; i < n.innerText.length; i++)
//  			hexcode = n.innerText.charCodeAt(i).toString(16);
			return n.innerText;
			//			return n.innerText.trimEnd ();
		}
	}
	return "error_not_found";	
}

function GetItemCounterData(id, type, index, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if (n != null)
	{
		if (type == "LI")
		{
			return n.parentElement.childElementCount.toString ();
		}
	}
	return "error_not_found";	
}

function GetItemTableData(id, type, index, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if (GetTableContent(n, true) == false)
		return "error_not_found";	
	return "success";	
}

function GetItemDataExtra(id, type, index, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude) 
{
	var mytype = type;
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	var n = GetItemInDocumentExtra  (id, type, index, null, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude);
	if (n != null)
	{
		if (type == "A")
		{
			if (typeof(n.firstChild.wholeText) != "undefined")
				return n.firstChild.wholeText;
			else
				return n.innerText;
		}
		else
		{
			if (mytype == "INPUT")
			{
  			if (type == "RADIO")
  			{
					var strvalue = "";
					if (n.nextSibling != null)
						strvalue = n.nextSibling.textContent;
					else
						strvalue = n.value;
					strvalue = strvalue.replace(/^\s+|\s+$/gm,'');
					strvalue = strvalue.replace("\n", "");
					return strvalue;
  			}
  			else
  				return n.value;
  		}
  		else
  		{
				if (mytype == "KAT-BUTTON")
					return n.getAttribute("label");				  			
  		}
			return n.innerText;
		}
	}
	return "error_not_found";	
}

function GetItemCounterDataExtra(id, type, index, className, attr, elementIndex, childCount, childClassName, parentClassName, parentType, mustInclude) 
{
	var n = GetItemInDocumentExtra  (id, type, index, null, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude);
	if (n != null)
	{
		if (type == "LI" && n.parentElement.nodeName == parentType)
		{
			return n.parentElement.childElementCount.toString ();
		}
	}
	return "error_not_found";	
}

function GetItemEnableData(id, type, index, className, attr, mustInclude) 
{
	var realtype = type;
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	realtype = "INPUT";
	if(n != null)
	{
		if (realtype == "KAT-RADIOBUTTON")
		{
			if (-1 != n.outerHTML.indexOf ("disabled"))
				return "disable";
		}
		else
		{
			if (n.disabled)
				return "disable";
		}
		return "enable";
	}
	return "error_not_found";	
}

function GetItemCheckData (id, type, index, className, attr, mustInclude)
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if(n != null)
	{
		if (type == "KAT-CHECKBOX")
		{
			var value;
			
			if ((value = n.getAttribute("checked")) != null)
			{
//				if (value == "true")
					return "checked";
			}
			return "unchecked";
		}
		if (n.checked)
			return "checked";
		return "unchecked";
	}
	return "error_not_found";	
}	

function ScrollToVisibleCenter (element)
{
	var rect = element.getBoundingClientRect ();
	var yCordinate = (window.innerHeight - rect.height)/ 2;
	if (0 < (window.scrollY + rect.top - yCordinate))
		window.scrollTo (0, window.scrollY + rect.top - yCordinate);
}

function SetItemVisible (id, type, index, className, attr, mustInclude)
{
	var n = GetItemInDocument  (id, type, index, null, className, attr, mustInclude);
	if(n != null)
	{
//		ScrollToVisibleCenter (n);
		n.scrollIntoView ();
		return "success";
	}
	return "error_not_found";	
}

function GetElementInBrowserpos (element)
{
	var rect = element.getBoundingClientRect ();
	var rectRet = { left: 0, top: 0, right: 0, bottom: 0 };
	var parentElemnet = element;
	while (rect.width == 0 || rect.height == 0)
	{
		parentElemnet = parentElemnet.parentNode;
		rect = parentElemnet.getBoundingClientRect ();
	}
	rectRet.top = rect.top;
	rectRet.left = rect.left;
	rectRet.right = rect.right;
	rectRet.bottom = rect.bottom;
	
//	rectRet.left += window.screenX + (window.outerWidth - window.innerWidth);
//	rectRet.right += window.screenX + (window.outerWidth - window.innerWidth);
	rectRet.left += window.screenX;
	rectRet.right += window.screenX;
	rectRet.top *= window.devicePixelRatio;	
	rectRet.left *= window.devicePixelRatio;	
	rectRet.right *= window.devicePixelRatio;	
	rectRet.bottom *= window.devicePixelRatio;	
	rectRet.top += window.screenY + (window.outerHeight - window.innerHeight * window.devicePixelRatio) + 30;
	rectRet.bottom += window.screenY + (window.outerHeight - window.innerHeight * window.devicePixelRatio) + 30;
	
	return Math.ceil(rectRet.left).toString() + "," + Math.ceil(rectRet.top).toString() + "," +
				 Math.ceil(rectRet.right).toString() + "," + Math.ceil(rectRet.bottom).toString(); 
}

function GetItemInDocument  (id, type, index, value, className, attr, mustInclude)
{
	var n = null; 
  var mytype = type;
  var iIndex = parseInt(index, 10);
  var iMax;
  var i, j;
	  
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	n = document.getElementsByTagName (mytype);
	
	
//(+)TEST	
/*
	for (i = n.length - 1; i >= 0; i--)
	{
		if (n[i].childElementCount == 3 &&
				n[i].childNodes[0].className == "a-price-symbol" &&
				n[i].childNodes[1].className == "a-price-whole" &&
				n[i].childNodes[2].className == "a-price-fraction")
		{
				var myNode = n[i];
				while (myNode.nodeName == "SPAN" && myNode.parentNode != null)
					myNode = myNode.parentNode;
				if (myNode.className == "a-section a-spacing-none a-padding-none")	
					return n[i];
		}
	}
*/	
//(-)TEST	
	if (n.length == 1)
		return n[0];
	if (n.length <= iIndex)
	{
		if (id.localeCompare ("unknown") != 0)
			return document.getElementById (id);
		return null;
	}
	iMax = (iIndex > (n.length - iIndex - 1)) ? iIndex : (n.length - iIndex - 1);
//	iMax = (iIndex > (n.length - 1)) ? iIndex : (n.length - 1));
	if (iIndex > iMax)
		return null;
	if (type == "KAT-CHECKBOX" || type == "svg" || type == "SVG")
		return n[iIndex];
	if (type != "KAT-RADIOBUTTON")
	{
		if (id.localeCompare ("unknown") != 0)
		{
			if (n[iIndex].id != id)
			{
				if (value != null && value != "")
				{
					for (i = 1; i <= iMax; i++)
					{
						if ((iIndex - i) >= 0)
						{
							if (n[iIndex - i].id == id && n[iIndex - i].innerText == value)
								return n[iIndex - i];
						}
						if ((iIndex + i) < n.length)
						{
							if (n[iIndex + i].id == id && n[iIndex + i].innerText == value)
								return n[iIndex + i];
						}
					}
				}
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == id)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == id)
							return n[iIndex + i];
					}
				}
				if (value != null && value != "")
				{
					for (i = 0; i <= iMax; i++)
					{
						if ((iIndex - i) >= 0)
						{
							if (n[iIndex - i].innerText == value)
								return n[iIndex - i];
						}
						if ((iIndex + i) < n.length)
						{
							if (n[iIndex + i].innerText == value)
								return n[iIndex + i];
						}
					}
				}
			}
			else
			{
				var fFullMatched = true;
				
				if(className != null && className != "")
				{
					var realClassName = className;
					if (className == "empty-class-name")
						realClassName = "";
					if (n[iIndex].className != realClassName)
						fFullMatched = false;
				}
				if (attr != null && attr != "")
				{
					var realattr = attr;
					if (realattr == "empty-attr")
					{
						realattr = "";
						if (n[iIndex].attributes.length != 0)
							fFullMatched = false;
					}
					else
					{		
						var fFindAttr = false;
						for(i = 0; i < n[iIndex].attributes.length; i++)
						{
							if (n[iIndex].attributes[i].nodeName == realattr)
							{
								fFindAttr = true;
								break;
							}
						}
						if (fFindAttr == false)	
							fFullMatched = false;
					}
				}
				if (fFullMatched)				
					return n[iIndex]; 
				else
				{
					if(className != null && className != "")
					{
						var realClassName = className;
						if (className == "empty-class-name")
							realClassName = "";

						for (i = 1; i <= iMax; i++)
						{
							if ((iIndex - i) >= 0)
							{
								if (n[iIndex - i].id == id && n[iIndex - i].className == realClassName)
									return n[iIndex - i];
							}
							if ((iIndex + i) < n.length)
							{
								if (n[iIndex + i].id == id && n[iIndex + i].className == realClassName)
									return n[iIndex + i];
							}
						}
					}
					return n[iIndex]; 
				}
			}
			return null;
		}
		else
		{
			if(className != null && className != "" && attr != null && attr != "")
			{
				var realClassName = className;
				if (className == "empty-class-name")
					realClassName = "";

				for (i = 0; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0 && n[iIndex - i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex - i].attributes.length == 0)
							{
								if (n[iIndex - i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex - i].innerText.includes(value))
											return n[iIndex - i];
									}
									else
										return n[iIndex - i];
								}
							}
						}
						else
						{
							if (n[iIndex - i].attributes.length != 0)
							{
								var fFindAttr = false;
								for(j = 0; j < n[iIndex - i].attributes.length; j++)
								{
									if (n[iIndex - i].attributes[j].nodeName == attr)
									{
										fFindAttr = true;
										break;
									}
								}
								if (fFindAttr && n[iIndex - i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex - i].innerText.includes(value))
											return n[iIndex - i];
									}
									else
										return n[iIndex - i];
								}
							}
						}
					}
					if ((iIndex + i) < n.length && n[iIndex + i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex + i].attributes.length == 0)
							{
								if (n[iIndex + i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex + i].innerText.includes(value))
											return n[iIndex + i];
									}
									else
										return n[iIndex + i];
								}
							}
						}
						else
						{
							if (n[iIndex + i].attributes.length != 0)
							{
								var fFindAttr = false;
								for(j = 0; j < n[iIndex + i].attributes.length; j++)
								{
									if (n[iIndex + i].attributes[j].nodeName == attr)
									{
										fFindAttr = true;
										break;
									}
								}
								if (fFindAttr && n[iIndex + i].className == realClassName)
								{
									if (mustInclude == "1" && value != null && value != "")
									{
										if (n[iIndex + i].innerText.includes(value))
											return n[iIndex + i];
									}
									else
										return n[iIndex + i];
								}
							}
						}
					}
				}
			}
			if (value != null && value != "")
			{
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == "" && n[iIndex - i].innerText == value)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == "" && n[iIndex + i].innerText == value)
							return n[iIndex + i];
					}
				}
			}
		}
	}
	else
		return n[iIndex];
	if (attr != null && attr != "")
		return null;
	return n[iIndex];
}

function GetItemInDocumentExtra  (id, type, index, value, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude)
{
	var n = null; 
  var mytype = type;
  var iIndex = parseInt(index, 10);
  var iMax;
  var i;
  var ielementIndex = parseInt (elementIndex);
  var ichildCount = parseInt (childCount);
  var arrChildClassName = childClassName.split("$#");
	var iFindCount = 0;
	  
  if (type == "INPUT<BUTTON>" || type == "CHECKBOX" || type == "RADIO")
  	mytype = "INPUT";
	n = document.getElementsByTagName (mytype);
	
	for (i = 0; i < arrChildClassName.length; i++)
	{
		if (arrChildClassName[i] == "empty-class-name")
			arrChildClassName[i] = "";
	}
	if (parentClassName == "empty-class-name")
			parentClassName = "";
	for (i = 0; i < n.length; i++)
	{
		if (n[i].childElementCount == ichildCount)
		{
			var fAllMatched = true;
			for (var j = 0; j < ichildCount; j++)
			{
				if (typeof (n[i].children[j].className) == "undefined")
				{
					if (arrChildClassName[j] != "" && arrChildClassName[j] != "undefined")
					{
						fAllMatched = false;
						break;
					}
				}
				else
				{
					if (n[i].children[j].className != arrChildClassName[j])
					{
						fAllMatched = false;
						break;
					}
				}
			}
			if (fAllMatched == true)
			{
				var myNode = n[i];
				while (myNode.nodeName == mytype && myNode.parentNode != null)
					myNode = myNode.parentNode;
				if (myNode.className == parentClassName)
				{
					//for test
					if (mustInclude == "1" && value != null && value != "")
					{
						if (myNode.innerText.includes(value))
						{
					//
							iFindCount++;	
							if (iFindCount == ielementIndex)
								return n[i];
						}
					}
					else
					{
						iFindCount++;	
						if (iFindCount == ielementIndex)
							return n[i];
					}
				}
			}
		}
	}
//(-)TEST	
	if (n.length <= iIndex)
		return null;
	iMax = (iIndex > (n.length - iIndex - 1)) ? iIndex : (n.length - iIndex - 1);
	if (iIndex > iMax)
		return null;
	if (type == "KAT-CHECKBOX" || type == "svg" || type == "SVG")
		return n[iIndex];
	if (type != "KAT-RADIOBUTTON")
	{
		if (id.localeCompare ("unknown") != 0)
		{
			if (n[iIndex].id != id)
			{
				if (value != null && value != "")
				{
					for (i = 1; i <= iMax; i++)
					{
						if ((iIndex - i) >= 0)
						{
							if (n[iIndex - i].id == id && n[iIndex - i].innerText == value)
								return n[iIndex - i];
						}
						if ((iIndex + i) < n.length)
						{
							if (n[iIndex + i].id == id && n[iIndex + i].innerText == value)
								return n[iIndex + i];
						}
					}
				}
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == id)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == id)
							return n[iIndex + i];
					}
				}
			}
			else
				return n[iIndex]; 
			return null;
		}
		else
		{
			if(className != null && className != "" && attr != null && attr != "")
			{
				var realClassName = className;
				if (className == "empty-class-name")
					realClassName = "";

				for (i = 0; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0 && n[iIndex - i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex - i].attributes.length == 0)
							{
								if (n[iIndex - i].className == realClassName)
									return n[iIndex - i];
							}
						}
						else
						{
							if (n[iIndex - i].attributes.length != 0)
							{
								if (n[iIndex - i].attributes[0].nodeName == attr && n[iIndex - i].className == realClassName)
									return n[iIndex - i];
							}
						}
					}
					if ((iIndex + i) < n.length && n[iIndex + i].id == "")
					{
						if (attr == "empty-attr")
						{
							if (n[iIndex + i].attributes.length == 0)
							{
								if (n[iIndex + i].className == realClassName)
									return n[iIndex + i];
							}
						}
						else
						{
							if (n[iIndex + i].attributes.length != 0)
							{
								if (n[iIndex + i].attributes[0].nodeName == attr && n[iIndex + i].className == realClassName)
									return n[iIndex + i];
							}
						}
					}
				}
			}
			if (value != null && value != "")
			{
				for (i = 1; i <= iMax; i++)
				{
					if ((iIndex - i) >= 0)
					{
						if (n[iIndex - i].id == "" && n[iIndex - i].innerText == value)
							return n[iIndex - i];
					}
					if ((iIndex + i) < n.length)
					{
						if (n[iIndex + i].id == "" && n[iIndex + i].innerText == value)
							return n[iIndex + i];
					}
				}
			}
		}
	}
	else
		return n[iIndex];
	if (attr != null && attr != "")
		return null;
	return n[iIndex];
}

function GetItemCordinate (id, type, index, value, className, attr, mustInclude)
{
		var n = GetItemInDocument  (id, type, index, value, className, attr, mustInclude);
		if (n != null)
			return GetElementInBrowserpos (n);
		return "error_not_found";	
}

function TriggerClick (n)
{
	var evtold = document.createEvent("MouseEvents");
	evtold.initMouseEvent("click", true, true, window,
		    0, 0, 0, 0, 0, false, false, false, false, 0, null);
	var evt = new MouseEvent('click', {
					    'bubbles': true,
					    'cancelable': true
			  });
	if (n.baseURI.includes ("google") && n.baseURI.includes ("mail"))
	{
		n.dispatchEvent(evt);
	}
	else
	{
		evt.stopPropagation();
		n.dispatchEvent(evtold);
		n.dispatchEvent(evt);
	}
}

function TriggerRightClick (n)
{
	var evtold = document.createEvent("MouseEvents");
	evtold.initMouseEvent("click", true, true, window,
		    0, 0, 0, 0, 0, false, false, false, false, 2, null);
	var evt = new MouseEvent('click', {
					    'bubbles': true,
					    'cancelable': true,
					    'button': 2
			  });
	if (n.baseURI.includes ("google") && n.baseURI.includes ("mail"))
	{
		n.dispatchEvent(evt);
	}
	else
	{
		evt.stopPropagation();
		n.dispatchEvent(evtold);
		n.dispatchEvent(evt);
	}
}

function ClickOrTriggerClick (n)
{
	if (typeof(n.click) != 'undefined')
	{
		n.click();
		TriggerClick (n);
	}
	else
	{
//		if (typeof(n.mousedown) != 'undefined' && typeof(n.mouseup) != 'undefined')
//		{
//			n.mousedown();
//			n.mouseup();
//		}
//		else
			TriggerClick (n);
	}
}

function ClickItemExtra(id, type, index, value, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude) 
{
	var n = GetItemInDocumentExtra  (id, type, index, value, className, attr, elementIndex, childCount, childClassName, parentClassName, mustInclude);
	  var mytype = type;
	  
//	  n = n.parentElement.parentElement.parentElement.parentElement;
//		n.focus ();
//	  ClickOrTriggerClick (n);
//		return "success";
	  
	  if(n != null)
	  {
			if (type == "KAT-CHECKBOX")
			{
//				n.setAttribute("checked", "true");
//					n.removeAttribute ("checked");
				triggerChange (n, type);
				return "success";
			}

	  	
		  if (type == "INPUT<BUTTON>")
		  	mytype = "INPUT";
		
			if (mytype == "KAT-RADIOBUTTON" || mytype == "BUTTON")
			{
				if (mytype == "KAT-RADIOBUTTON")
				{
					n.setAttribute("checked", "true");
					triggerChange (n, type);
				}
				else
					ClickOrTriggerClick (n);
			}
			else
			{
				if (mytype == "A" || mytype == "KAT-BUTTON" || mytype == "BUTTON")
				{
					TriggerClick (n);
				}
				else
				{
					var elms;
					var i;
					var fDoIt = false;
					
					if (id.localeCompare ("unknown") == 0)
					{
						if (n.innerText == value && n.clientHeight != 0 && n.clientWidth != 0)
						{
							ClickOrTriggerClick (n);
							fDoIt = true;
						}
						else
						{
							elms = document.getElementsByTagName (mytype);
					
							for (i = 0; i < elms.length; i++)
							{
								if (elms[i].innerText == value && elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
								{
									ClickOrTriggerClick (elms[i]);
									fDoIt = true;
									break;
								}
							}
						}
					}
					else
					{
			  		elms = document.querySelectorAll("[id='" + id + "']");
	 	  			for (i = 0; i < elms.length; i++)
 		  			{
 	  					if (elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
		 		  		{
								ClickOrTriggerClick (elms[i]);
								fDoIt = true;
								break;
							}
						}
					}
					if (fDoIt == false)
					{
						ClickOrTriggerClick (n);
					}
				}
			}
			return "success";
		}
		return "error_not_found";	
}

function ClickItem(id, type, index, value, className, attr, mustInclude) 
{
		var n = GetItemInDocument  (id, type, index, value, className, attr, mustInclude);
	  var mytype = type;
	  
//	  n = n.parentElement.parentElement.parentElement.parentElement;
//		n.focus ();
//	  ClickOrTriggerClick (n);
//		return "success";
	  
//	  TriggerRightClick (n);
//		return "success";
	  if(n != null)
	  {
			if (type == "KAT-CHECKBOX")
			{
//				n.setAttribute("checked", "true");
//					n.removeAttribute ("checked");
				triggerChange (n, type);
				return "success";
			}

	  	
		  if (type == "INPUT<BUTTON>")
		  	mytype = "INPUT";
		
			if (mytype == "KAT-RADIOBUTTON" || mytype == "BUTTON")
			{
				if (mytype == "KAT-RADIOBUTTON")
				{
					n.setAttribute("checked", "true");
					triggerChange (n, type);
				}
				else
					ClickOrTriggerClick (n);
			}
			else
			{
				if (mytype == "A" || mytype == "KAT-BUTTON" || mytype == "BUTTON")
				{
					TriggerClick (n);
				}
				else
				{
					var elms;
					var i;
					var fDoIt = false;
					
					if (id.localeCompare ("unknown") == 0)
					{
						if ((typeof(n.innerText) == "undefined" || (typeof(n.innerText) != "undefined" && n.innerText == value))
						   && n.clientHeight != 0 && n.clientWidth != 0)
						{
							ClickOrTriggerClick (n);
							fDoIt = true;
						}
						else
						{
							elms = document.getElementsByTagName (mytype);
					
							for (i = 0; i < elms.length; i++)
							{
								if (elms[i].innerText == value && elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
								{
									ClickOrTriggerClick (elms[i]);
									fDoIt = true;
									break;
								}
							}
						}
					}
					else
					{
			  		elms = document.querySelectorAll("[id='" + id + "']");
	 	  			for (i = 0; i < elms.length; i++)
 		  			{
 	  					if (elms[i].clientHeight != 0 && elms[i].clientWidth != 0)
		 		  		{
								ClickOrTriggerClick (elms[i]);
								fDoIt = true;
								break;
							}
						}
					}
					if (fDoIt == false)
					{
						ClickOrTriggerClick (n);
					}
				}
			}
			return "success";
		}
		return "error_not_found";	
}

function FocusItem(id, type, index, value, className, attr, mustInclude) 
{
	var n = GetItemInDocument  (id, type, index, value, className, attr, mustInclude);
	  
  if(n != null)
  {
		n.focus ();
		return "success";
	}
	return "error_not_found";	
}

/*
function EnableIFrameListenEvent ()
{
	var iframe = document.getElementsByTagName ("iframe");
	for (var i = 0; i < iframe.length; i++)
	{
		const iframeDocument = iframe[i].contentWindow.document;
		iframeDocument.addEventListener('click', function(e) {
			if (fEnable)
//			if (true)
			{
				var el = e.target;
				var myel = el;
				var header = "";
				var DataTable = "";
				var fFindHeader = false;
				var j;
				
				if (myel.nodeName == "TH" || myel.nodeName == "TD")
				{
					fFindHeader = true;
					myel = myel.parentNode;
					while (myel != null && myel.nodeName != "TR")
						myel = myel.parentNode;
					while (myel.previousElementSibling != null)
						myel = myel.previousElementSibling;
					if (myel != null)
					{	
						while (myel != null)
						{
							for (j = 0; j < myel.children.length; j++)
							{
								if (myel.children[j].nodeName == "TH")
								{
									header += myel.children[j].innerText;
									if (j != (myel.children.length - 1))
										header += "&#";
								}
								else
								{
									if (myel.children[j].nodeName == "TD")
									{
										if(j == 0 && DataTable != "")
											DataTable += "&@";
										DataTable += myel.children[j].innerText;
										if (j != (myel.children.length - 1))
											DataTable += "&#";
									}
								}
							}
							myel = myel.nextElementSibling;							
						}
						alert ("Hedaer=" + header);
						alert ("Data=" + DataTable);
					}
				}	
			} 
    });
  }
}

EnableIFrameListenEvent ();
*/
document.onreadystatechange = function () {
  if (document.readyState === 'complete') {
    sendreadynotification();
  }
}

function sendShowWebCapture ()
{
    const tmp = {
      type: 'ShowWebCapture',
      data: { value: "1" } 
    };
    doSend(JSON.stringify(tmp));
}

chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
	sendShowWebCapture ();
//  alert ("Recv. Send response = " + document.title);
  sendResponse({ title: document.title });

  return true;
});

InitWebSocket ();
