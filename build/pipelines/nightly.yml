trigger: none
pr: none
schedules:
  - cron: "30 3 * * 2-6" # Run at 03:30 UTC Tuesday through Saturday (After the work day in Pacific, Mon-Fri)
    displayName: "Nightly Terminal Build"
    branches:
      include:
        - main
    always: false # only run if there's code changes!

name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

extends:
  template: templates-v2\pipeline-full-release-build.yml
  parameters:
    branding: Canary
    buildTerminal: true
    pgoBuildMode: Optimize
    codeSign: true
    generateSbom: true
    publishSymbolsToPublic: true
    publishVpackToWindows: false
    symbolExpiryTime: 15 # Nightly builds do not keep symbols for very long!
    stages:
      - stage: Deploy
        dependsOn: [Publish, Build]
        pool:
          name: SHINE-INT-S
        jobs:
          - job: PublishCanaryToAzure
            displayName: Deploy Canary to Azure
            steps:
              - task: DownloadPipelineArtifact@2
                displayName: Download the MSIX bundle
                inputs:
                  artifactName: appxbundle-release
                  downloadPath: _out
                  itemPattern: '**/*.msixbundle'

              - pwsh: |-
                  $b = Get-Item _out/*.msixbundle
                  ./build/scripts/New-AppInstallerFromTemplateAndBundle.ps1 -BundlePath $b.FullName -AppInstallerTemplatePath ./build/config/template.appinstaller -AppInstallerRoot $(AppInstallerRootURL) -OutputPath _out/Microsoft.WindowsTerminalCanary.appinstaller
                  $mapping = Get-Item build/config/azcopy_mime_mapping.json
                  Write-Host "##vso[task.setvariable variable=AZCOPY_CONTENT_TYPE_MAP]$($mapping.FullName)"
                displayName: "Produce AppInstaller and MSIX bundle"

              - task: AzureFileCopy@5
                displayName: Publish to Storage Account
                inputs:
                  sourcePath: _out/*
                  azureSubscription: $(AzureSubscriptionName)
                  Destination: AzureBlob
                  storage: $(AzureStorageAccount)
                  ContainerName: $(AzureStorageContainer)


